ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_IsChannelSigned,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	ADC_IsChannelSigned, %function
  22              	ADC_IsChannelSigned:
  23              	.LFB12:
  24              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/ADC.c **** * \file     ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * \version  1.10
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * \brief
   6:.\Generated_Source\PSoC4/ADC.c **** * Provides the source code to the API for the ADC Component.
   7:.\Generated_Source\PSoC4/ADC.c **** *
   8:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
   9:.\Generated_Source\PSoC4/ADC.c **** * \copyright
  10:.\Generated_Source\PSoC4/ADC.c **** * (c) 2015-2016, Cypress Semiconductor Corporation. All rights reserved.
  11:.\Generated_Source\PSoC4/ADC.c **** * This software, including source code, documentation and related
  12:.\Generated_Source\PSoC4/ADC.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:.\Generated_Source\PSoC4/ADC.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:.\Generated_Source\PSoC4/ADC.c **** * patent protection (United States and foreign), United States copyright
  15:.\Generated_Source\PSoC4/ADC.c **** * laws and international treaty provisions. Therefore, you may use this
  16:.\Generated_Source\PSoC4/ADC.c **** * Software only as provided in the license agreement accompanying the
  17:.\Generated_Source\PSoC4/ADC.c **** * software package from which you obtained this Software ("EULA").
  18:.\Generated_Source\PSoC4/ADC.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:.\Generated_Source\PSoC4/ADC.c **** * non-transferable license to copy, modify, and compile the
  20:.\Generated_Source\PSoC4/ADC.c **** * Software source code solely for use in connection with Cypress's
  21:.\Generated_Source\PSoC4/ADC.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:.\Generated_Source\PSoC4/ADC.c **** * compilation, or representation of this Software except as specified
  23:.\Generated_Source\PSoC4/ADC.c **** * above is prohibited without the express written permission of Cypress.
  24:.\Generated_Source\PSoC4/ADC.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:.\Generated_Source\PSoC4/ADC.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:.\Generated_Source\PSoC4/ADC.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:.\Generated_Source\PSoC4/ADC.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:.\Generated_Source\PSoC4/ADC.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:.\Generated_Source\PSoC4/ADC.c **** * changes to the Software without notice. Cypress does not assume any
  30:.\Generated_Source\PSoC4/ADC.c **** * liability arising out of the application or use of the Software or any
  31:.\Generated_Source\PSoC4/ADC.c **** * product or circuit described in the Software. Cypress does not
  32:.\Generated_Source\PSoC4/ADC.c **** * authorize its products for use in any products where a malfunction or
  33:.\Generated_Source\PSoC4/ADC.c **** * failure of the Cypress product may reasonably be expected to result in
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 2


  34:.\Generated_Source\PSoC4/ADC.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:.\Generated_Source\PSoC4/ADC.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:.\Generated_Source\PSoC4/ADC.c **** * of such system or application assumes all risk of such use and in doing
  37:.\Generated_Source\PSoC4/ADC.c **** * so agrees to indemnify Cypress against all liability.
  38:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  40:.\Generated_Source\PSoC4/ADC.c **** 
  41:.\Generated_Source\PSoC4/ADC.c **** static int32 ADC_IsChannelSigned(uint32 chan);
  42:.\Generated_Source\PSoC4/ADC.c **** 
  43:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u; 
  44:.\Generated_Source\PSoC4/ADC.c **** 
  45:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  46:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM]; 
  47:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM]; 
  48:.\Generated_Source\PSoC4/ADC.c **** 
  49:.\Generated_Source\PSoC4/ADC.c **** static uint32 ADC_currentConfig = 0u; /* Currently active configuration */
  50:.\Generated_Source\PSoC4/ADC.c **** static uint32 ADC_channelEnMasks[ADC_TOTAL_CONFIGS];
  51:.\Generated_Source\PSoC4/ADC.c **** 
  52:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  53:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  54:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  56:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00001500UL, 0x00000200UL, 0x00001000UL,  };
  57:.\Generated_Source\PSoC4/ADC.c **** 
  58:.\Generated_Source\PSoC4/ADC.c **** /* Filter init */
  59:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_ANY_CONFIG_USES_FILTER	!= 0u)	
  60:.\Generated_Source\PSoC4/ADC.c ****     #define ADC_UABH_A_FILTER_INITPAIRSSIZE ((ADC_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) \
  61:.\Generated_Source\PSoC4/ADC.c ****                                                          ? 18u \
  62:.\Generated_Source\PSoC4/ADC.c ****                                                          : 18u)
  63:.\Generated_Source\PSoC4/ADC.c ****     static CyUAB_reg_pair ADC_UABH_A_FILTER_initPairs[ADC_UABH_A_FILTER_INITPAIRSSIZE] =
  64:.\Generated_Source\PSoC4/ADC.c ****     {
  65:.\Generated_Source\PSoC4/ADC.c ****     	/*OA_CTRL default always first element in initPairs*/
  66:.\Generated_Source\PSoC4/ADC.c ****         /* Topology-invariant registers */
  67:.\Generated_Source\PSoC4/ADC.c ****          {ADC_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_UABH_A_DEFAULT_OA_CTRL)}
  68:.\Generated_Source\PSoC4/ADC.c ****         ,{ADC_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_STATIC)}
  69:.\Generated_Source\PSoC4/ADC.c ****         ,{ADC_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_MODBIT_SRC)}
  70:.\Generated_Source\PSoC4/ADC.c ****         ,{ADC_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_A_INVAR_SRAM_CTRL)} 
  71:.\Generated_Source\PSoC4/ADC.c ****         ,{ADC_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_UABH_A_INVAR_STARTUP_DELAY)}
  72:.\Generated_Source\PSoC4/ADC.c ****         ,{ADC_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_BOOST_CTRL)}
  73:.\Generated_Source\PSoC4/ADC.c ****         ,{ADC_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_OTHER)}
  74:.\Generated_Source\PSoC4/ADC.c ****         
  75:.\Generated_Source\PSoC4/ADC.c ****         #if (ADC_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
  76:.\Generated_Source\PSoC4/ADC.c ****             /* Filter-invariant registers */
  77:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_IN0)}
  78:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_TOP)}
  79:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN0)}
  80:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN1)}
  81:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CF_BOT)}
  82:.\Generated_Source\PSoC4/ADC.c **** 
  83:.\Generated_Source\PSoC4/ADC.c ****             /* Parameter-based registers */
  84:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_UABH_A_LOWQDYN_CAP_CTRL)}
  85:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQDYN_SW_CB_IN0)}
  86:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQDYN_SW_CB_IN1)}
  87:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQDYN_SW_CB_TOP)}
  88:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQDYN_SW_CC_TOP)}
  89:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_UABH_A_LOWQDYN_CAP_ABCF_VAL)}
  90:.\Generated_Source\PSoC4/ADC.c ****         #elif (ADC_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 3


  91:.\Generated_Source\PSoC4/ADC.c ****             /* Filter-invariant registers */
  92:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_IN0)}
  93:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_TOP)}
  94:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN0)}
  95:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN1)}
  96:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN0)}
  97:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN1)}
  98:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_TOP)}
  99:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 100:.\Generated_Source\PSoC4/ADC.c **** 
 101:.\Generated_Source\PSoC4/ADC.c ****             /* Parameter-based registers */
 102:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_UABH_A_HIGHQDYN_CAP_CTRL)}
 103:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQDYN_SW_CB_TOP)}
 104:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_UABH_A_HIGHQDYN_CAP_ABCF_VAL)}
 105:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 106:.\Generated_Source\PSoC4/ADC.c ****     };
 107:.\Generated_Source\PSoC4/ADC.c **** 
 108:.\Generated_Source\PSoC4/ADC.c ****     #define ADC_UABH_B_FILTER_INITPAIRSSIZE ((ADC_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) \
 109:.\Generated_Source\PSoC4/ADC.c ****                                                          ? 19u \
 110:.\Generated_Source\PSoC4/ADC.c ****                                                          : 19u)
 111:.\Generated_Source\PSoC4/ADC.c ****     static CyUAB_reg_pair ADC_UABH_B_FILTER_initPairs[ADC_UABH_B_FILTER_INITPAIRSSIZE] = 
 112:.\Generated_Source\PSoC4/ADC.c ****     {
 113:.\Generated_Source\PSoC4/ADC.c ****         /*OA_CTRL default always first element in initPairs*/
 114:.\Generated_Source\PSoC4/ADC.c ****         /* Topology-invariant registers */
 115:.\Generated_Source\PSoC4/ADC.c ****          {ADC_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_UABH_B_DEFAULT_OA_CTRL)}
 116:.\Generated_Source\PSoC4/ADC.c ****         ,{ADC_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_STATIC)}
 117:.\Generated_Source\PSoC4/ADC.c ****         ,{ADC_UABH_B_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_MODBIT_SRC)}
 118:.\Generated_Source\PSoC4/ADC.c ****         ,{ADC_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_B_INVAR_SRAM_CTRL)} 
 119:.\Generated_Source\PSoC4/ADC.c ****         ,{ADC_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_UABH_B_INVAR_STARTUP_DELAY)}
 120:.\Generated_Source\PSoC4/ADC.c ****         ,{ADC_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 121:.\Generated_Source\PSoC4/ADC.c ****         ,{ADC_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_OTHER)}
 122:.\Generated_Source\PSoC4/ADC.c ****         
 123:.\Generated_Source\PSoC4/ADC.c ****         #if (ADC_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 124:.\Generated_Source\PSoC4/ADC.c ****                 	/* Filter-invariant registers */
 125:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN0)}
 126:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN1)}
 127:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_TOP)}
 128:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN0)}
 129:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN1)}
 130:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_TOP)}
 131:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN0)}
 132:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN1)}
 133:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CF_BOT)}
 134:.\Generated_Source\PSoC4/ADC.c ****             
 135:.\Generated_Source\PSoC4/ADC.c ****             /* Parameter-based registers */
 136:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_UABH_B_LOWQDYN_CAP_CTRL)}
 137:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQDYN_SW_CC_TOP)}
 138:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_UABH_B_LOWQDYN_CAP_ABCF_VAL)}
 139:.\Generated_Source\PSoC4/ADC.c ****         #elif (ADC_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 140:.\Generated_Source\PSoC4/ADC.c ****         	/* Filter-invariant registers */
 141:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 142:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 143:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 144:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 145:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 146:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 147:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN1)}
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 4


 148:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 149:.\Generated_Source\PSoC4/ADC.c ****             
 150:.\Generated_Source\PSoC4/ADC.c ****             /* Parameter-based registers */
 151:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_UABH_B_HIGHQDYN_CAP_CTRL)}
 152:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQDYN_SW_CB_TOP)}
 153:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQDYN_SW_CC_TOP)}
 154:.\Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_UABH_B_HIGHQDYN_CAP_ABCF_VAL)}
 155:.\Generated_Source\PSoC4/ADC.c ****         #endif /* #if (ADC_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 156:.\Generated_Source\PSoC4/ADC.c ****     };
 157:.\Generated_Source\PSoC4/ADC.c **** 
 158:.\Generated_Source\PSoC4/ADC.c ****     static CyUAB_config ADC_UABH_A_FILTER_config = {
 159:.\Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_waveConfig,
 160:.\Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_FILTER_initPairs,
 161:.\Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_A_PARAM_REF_TIED,ADC_UABH_A_PARAM_AGND_TIED,
 162:.\Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_PARAM_SW_CC,ADC_UABH_A_PARAM_SW_BB,ADC_UABH_A_PARAM_SW_AA),
 163:.\Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_NUM_STEPS,
 164:.\Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_A_ELEMENT_COUNT(ADC_UABH_A_FILTER_initPairs))
 165:.\Generated_Source\PSoC4/ADC.c ****     };
 166:.\Generated_Source\PSoC4/ADC.c **** 
 167:.\Generated_Source\PSoC4/ADC.c ****     static CyUAB_config ADC_UABH_B_FILTER_config = {
 168:.\Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_waveConfig,
 169:.\Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_FILTER_initPairs,
 170:.\Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_B_PARAM_REF_TIED,ADC_UABH_B_PARAM_AGND_TIED,
 171:.\Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_PARAM_SW_CC,ADC_UABH_B_PARAM_SW_BB,ADC_UABH_B_PARAM_SW_AA),
 172:.\Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_NUM_STEPS,
 173:.\Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_B_ELEMENT_COUNT(ADC_UABH_B_FILTER_initPairs))
 174:.\Generated_Source\PSoC4/ADC.c ****     };
 175:.\Generated_Source\PSoC4/ADC.c **** #endif /* (ADC_ANY_CONFIG_USES_FILTER	!= 0u)	*/
 176:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 177:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
 178:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 179:.\Generated_Source\PSoC4/ADC.c **** *
 180:.\Generated_Source\PSoC4/ADC.c **** * \brief Performs all required initialization for this component and enables the 
 181:.\Generated_Source\PSoC4/ADC.c **** *  power. The power will be set to the appropriate power based on the clock 
 182:.\Generated_Source\PSoC4/ADC.c **** *  frequency.
 183:.\Generated_Source\PSoC4/ADC.c **** * 
 184:.\Generated_Source\PSoC4/ADC.c **** * \param None
 185:.\Generated_Source\PSoC4/ADC.c **** * 
 186:.\Generated_Source\PSoC4/ADC.c **** * \return None
 187:.\Generated_Source\PSoC4/ADC.c **** * 
 188:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 189:.\Generated_Source\PSoC4/ADC.c **** *
 190:.\Generated_Source\PSoC4/ADC.c **** * \globalvars
 191:.\Generated_Source\PSoC4/ADC.c **** *  \ref ADC_initVar (RW)
 192:.\Generated_Source\PSoC4/ADC.c **** *
 193:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 194:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Start
 195:.\Generated_Source\PSoC4/ADC.c **** *
 196:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 197:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
 198:.\Generated_Source\PSoC4/ADC.c **** {
 199:.\Generated_Source\PSoC4/ADC.c ****     if (1u != (1u & ADC_initVar))
 200:.\Generated_Source\PSoC4/ADC.c ****     {
 201:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar |= 1u;
 203:.\Generated_Source\PSoC4/ADC.c ****     }
 204:.\Generated_Source\PSoC4/ADC.c ****     
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 5


 205:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
 206:.\Generated_Source\PSoC4/ADC.c ****     
 207:.\Generated_Source\PSoC4/ADC.c ****     return;
 208:.\Generated_Source\PSoC4/ADC.c **** }
 209:.\Generated_Source\PSoC4/ADC.c **** 
 210:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 211:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartEx
 212:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 213:.\Generated_Source\PSoC4/ADC.c **** *
 214:.\Generated_Source\PSoC4/ADC.c **** * \brief This function starts the ADC and sets the Interrupt 
 215:.\Generated_Source\PSoC4/ADC.c **** * Service Routine to the provided address using the 
 216:.\Generated_Source\PSoC4/ADC.c **** * ADC_IRQ_StartEx() function. Refer to the Interrupt component 
 217:.\Generated_Source\PSoC4/ADC.c **** * datasheet for more information on the ADC_IRQ_StartEx() function.
 218:.\Generated_Source\PSoC4/ADC.c **** * 
 219:.\Generated_Source\PSoC4/ADC.c **** * \param address This is the address of a user defined function for the ISR.
 220:.\Generated_Source\PSoC4/ADC.c **** * 
 221:.\Generated_Source\PSoC4/ADC.c **** * \return None
 222:.\Generated_Source\PSoC4/ADC.c **** * 
 223:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 224:.\Generated_Source\PSoC4/ADC.c **** *
 225:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 226:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_StartEx
 227:.\Generated_Source\PSoC4/ADC.c **** *
 228:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 229:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartEx(cyisraddress address)
 230:.\Generated_Source\PSoC4/ADC.c **** {
 231:.\Generated_Source\PSoC4/ADC.c ****     ADC_Start();
 232:.\Generated_Source\PSoC4/ADC.c ****     ADC_IRQ_StartEx(address);
 233:.\Generated_Source\PSoC4/ADC.c ****     return;
 234:.\Generated_Source\PSoC4/ADC.c **** }
 235:.\Generated_Source\PSoC4/ADC.c **** 
 236:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 238:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 239:.\Generated_Source\PSoC4/ADC.c **** *
 240:.\Generated_Source\PSoC4/ADC.c **** * \brief This function stops ADC conversions and puts the ADC into its lowest 
 241:.\Generated_Source\PSoC4/ADC.c **** * power mode.
 242:.\Generated_Source\PSoC4/ADC.c **** * 
 243:.\Generated_Source\PSoC4/ADC.c **** * \param None
 244:.\Generated_Source\PSoC4/ADC.c **** * 
 245:.\Generated_Source\PSoC4/ADC.c **** * \return None
 246:.\Generated_Source\PSoC4/ADC.c **** * 
 247:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect
 248:.\Generated_Source\PSoC4/ADC.c **** * Do not use the ADC_Stop() API to halt conversions. Instead use the 
 249:.\Generated_Source\PSoC4/ADC.c **** * ADC_StopConvert() API. If you use the ADC_Stop() API 
 250:.\Generated_Source\PSoC4/ADC.c **** * to halt conversions then later use the ADC_Start() and 
 251:.\Generated_Source\PSoC4/ADC.c **** * ADC_StartConvert() APIs to resume conversions, the first channel 
 252:.\Generated_Source\PSoC4/ADC.c **** * of the scan may be corrupt. The ADC_StopConvert() API will enable 
 253:.\Generated_Source\PSoC4/ADC.c **** * the ADC to complete the current scan of channels. After the 
 254:.\Generated_Source\PSoC4/ADC.c **** * channel scan is complete, the ADC will stop all conversions, which 
 255:.\Generated_Source\PSoC4/ADC.c **** * can be detected by the use of an ISR or the ADC_IsEndConversion() 
 256:.\Generated_Source\PSoC4/ADC.c **** * flag.
 257:.\Generated_Source\PSoC4/ADC.c **** *
 258:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 259:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Stop
 260:.\Generated_Source\PSoC4/ADC.c **** *
 261:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 6


 262:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 263:.\Generated_Source\PSoC4/ADC.c **** {	
 264:.\Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
 265:.\Generated_Source\PSoC4/ADC.c ****     	if((ADC_allConfigs[ADC_currentConfig].miscConfig 
 266:.\Generated_Source\PSoC4/ADC.c ****     	   & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 267:.\Generated_Source\PSoC4/ADC.c ****     	   == ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
 268:.\Generated_Source\PSoC4/ADC.c ****     	{
 269:.\Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_A_Stop();
 270:.\Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_B_Stop();
 271:.\Generated_Source\PSoC4/ADC.c ****             ADC_FILTERAGND2SAR_BUFFER_Stop();
 272:.\Generated_Source\PSoC4/ADC.c ****     	}
 273:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
 274:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_SAR_CTRL_ENABLED_MSK;
 275:.\Generated_Source\PSoC4/ADC.c ****     return;
 276:.\Generated_Source\PSoC4/ADC.c **** }
 277:.\Generated_Source\PSoC4/ADC.c **** 
 278:.\Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 279:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_InitConfig
 280:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
 281:.\Generated_Source\PSoC4/ADC.c **** *
 282:.\Generated_Source\PSoC4/ADC.c **** * \brief Configures all of the registers for a given configuration for scanning.
 283:.\Generated_Source\PSoC4/ADC.c **** *
 284:.\Generated_Source\PSoC4/ADC.c **** * \param scan Number of scan defined in the ADC.
 285:.\Generated_Source\PSoC4/ADC.c **** *
 286:.\Generated_Source\PSoC4/ADC.c **** * \return None
 287:.\Generated_Source\PSoC4/ADC.c **** *
 288:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 289:.\Generated_Source\PSoC4/ADC.c **** *
 290:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 291:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_InitConfig
 292:.\Generated_Source\PSoC4/ADC.c **** *
 293:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 294:.\Generated_Source\PSoC4/ADC.c **** void ADC_InitConfig(const ADC_CONFIG_STRUCT *config)
 295:.\Generated_Source\PSoC4/ADC.c **** {
 296:.\Generated_Source\PSoC4/ADC.c **** 	uint32 chNum;
 297:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
 298:.\Generated_Source\PSoC4/ADC.c **** 	
 299:.\Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	        
 300:.\Generated_Source\PSoC4/ADC.c ****     	if((config->miscConfig & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 301:.\Generated_Source\PSoC4/ADC.c ****     	    == ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
 302:.\Generated_Source\PSoC4/ADC.c ****     	{
 303:.\Generated_Source\PSoC4/ADC.c ****             ADC_intUabClock_SetFractionalDividerRegister(config->filterClkDivider, 0u);    		
 304:.\Generated_Source\PSoC4/ADC.c ****     	}
 305:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
 306:.\Generated_Source\PSoC4/ADC.c ****     #if (ADC_CLOCK_INTERNAL)
 307:.\Generated_Source\PSoC4/ADC.c ****         ADC_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 308:.\Generated_Source\PSoC4/ADC.c ****         
 309:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_CLOCK_INTERNAL */
 310:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 311:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_CTRL_REG |= config->ctrl
 312:.\Generated_Source\PSoC4/ADC.c ****    
 313:.\Generated_Source\PSoC4/ADC.c **** 	/* Enable the SAR internal pump when global pump is enabled */
 314:.\Generated_Source\PSoC4/ADC.c ****     | (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) 
 315:.\Generated_Source\PSoC4/ADC.c ****     ? ADC_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 316:.\Generated_Source\PSoC4/ADC.c **** 	
 317:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_CTRL_REG = config->sampleCtrl;
 318:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_THRES_REG = config->rangeThres;	
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 7


 319:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_COND_REG = config->rangeCond;
 320:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 321:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 322:.\Generated_Source\PSoC4/ADC.c ****     
 323:.\Generated_Source\PSoC4/ADC.c **** 	/* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured */
 324:.\Generated_Source\PSoC4/ADC.c **** 	if(1u == ADC_MUX_SWITCH0_INIT)
 325:.\Generated_Source\PSoC4/ADC.c **** 	{
 326:.\Generated_Source\PSoC4/ADC.c **** 		ADC_MUX_SWITCH0_REG |= ADC_MUX_FW_VSSA_VMINUS;
 327:.\Generated_Source\PSoC4/ADC.c **** 		/* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 328:.\Generated_Source\PSoC4/ADC.c **** 		if(1ul < config->numChannels)
 329:.\Generated_Source\PSoC4/ADC.c **** 		{
 330:.\Generated_Source\PSoC4/ADC.c **** 			ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_MUX_FW_VSSA_VMINUS;
 331:.\Generated_Source\PSoC4/ADC.c **** 		}
 332:.\Generated_Source\PSoC4/ADC.c **** 	}
 333:.\Generated_Source\PSoC4/ADC.c ****     
 334:.\Generated_Source\PSoC4/ADC.c **** 	/* Clear and set interrupt masks */
 335:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 336:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;	
 337:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 338:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 339:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_INTR_MASK_REG = ADC_EOS_MASK;
 340:.\Generated_Source\PSoC4/ADC.c ****     
 341:.\Generated_Source\PSoC4/ADC.c **** 	/* Double the non-overlap delay and latch enable time when using */
 342:.\Generated_Source\PSoC4/ADC.c ****     /* internal reference without bypass cap */
 343:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 344:.\Generated_Source\PSoC4/ADC.c **** 	if(((config->ctrl & ADC__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 345:.\Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNAL1024) 
 346:.\Generated_Source\PSoC4/ADC.c **** 	    || ((config->ctrl & ADC__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 347:.\Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNALVREF))
 348:.\Generated_Source\PSoC4/ADC.c **** 	{
 349:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal &= ~ADC_SAR_DFT_CTRL_DCEN_MSK;
 350:.\Generated_Source\PSoC4/ADC.c **** 		tmpRegVal |= ADC_SAR_DFT_CTRL_DLY_INC_MSK;
 351:.\Generated_Source\PSoC4/ADC.c **** 	}
 352:.\Generated_Source\PSoC4/ADC.c **** 	else
 353:.\Generated_Source\PSoC4/ADC.c **** 	{
 354:.\Generated_Source\PSoC4/ADC.c **** 		tmpRegVal |= ADC_SAR_DFT_CTRL_DCEN_MSK;
 355:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal &= (uint32)~ADC_SAR_DFT_CTRL_DLY_INC_MSK;
 356:.\Generated_Source\PSoC4/ADC.c **** 	}	
 357:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 358:.\Generated_Source\PSoC4/ADC.c **** 	
 359:.\Generated_Source\PSoC4/ADC.c **** 	for(chNum = 0u; chNum < config->numChannels; chNum++)
 360:.\Generated_Source\PSoC4/ADC.c ****     {
 361:.\Generated_Source\PSoC4/ADC.c **** 		tmpRegVal = (ADC_channelsConfig[config->channelBase + chNum] 
 362:.\Generated_Source\PSoC4/ADC.c **** 		& ADC_CHANNEL_CONFIG_MASK);
 363:.\Generated_Source\PSoC4/ADC.c ****         
 364:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1)
 365:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[config->channelBase + chNum];
 366:.\Generated_Source\PSoC4/ADC.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 367:.\Generated_Source\PSoC4/ADC.c ****             if(0u != (ADC_InputsPlacement[config->channelBase + chNum] & ADC_CHANNEL_CONFIG_NEG_ADD
 368:.\Generated_Source\PSoC4/ADC.c ****             {
 369:.\Generated_Source\PSoC4/ADC.c ****                 tmpRegVal &= ~ADC_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK;
 370:.\Generated_Source\PSoC4/ADC.c ****             }
 371:.\Generated_Source\PSoC4/ADC.c ****         #endif
 372:.\Generated_Source\PSoC4/ADC.c ****         
 373:.\Generated_Source\PSoC4/ADC.c **** 		CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 374:.\Generated_Source\PSoC4/ADC.c **** 	}
 375:.\Generated_Source\PSoC4/ADC.c **** 	
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 8


 376:.\Generated_Source\PSoC4/ADC.c ****     return;
 377:.\Generated_Source\PSoC4/ADC.c **** }
 378:.\Generated_Source\PSoC4/ADC.c **** 
 379:.\Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 380:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SelectConfig
 381:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//* 
 382:.\Generated_Source\PSoC4/ADC.c **** *
 383:.\Generated_Source\PSoC4/ADC.c **** * \brief Selects the predefined configuration for scanning. Disables
 384:.\Generated_Source\PSoC4/ADC.c **** * and re-enables the SAR and filter (if filter used).
 385:.\Generated_Source\PSoC4/ADC.c **** * 
 386:.\Generated_Source\PSoC4/ADC.c **** * \param config Number of configuration  in the ADC.
 387:.\Generated_Source\PSoC4/ADC.c **** * 
 388:.\Generated_Source\PSoC4/ADC.c **** * \param restart Determines if the ADC should be  restarted after 
 389:.\Generated_Source\PSoC4/ADC.c **** * selecting the configuration.
 390:.\Generated_Source\PSoC4/ADC.c **** *
 391:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect Calls ADC_Init() to initialize 
 392:.\Generated_Source\PSoC4/ADC.c **** * ADC_channelEnMasks[]
 393:.\Generated_Source\PSoC4/ADC.c **** *
 394:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 395:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SelectConfig
 396:.\Generated_Source\PSoC4/ADC.c **** *
 397:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 398:.\Generated_Source\PSoC4/ADC.c **** void ADC_SelectConfig(uint32 config, uint32 restart)
 399:.\Generated_Source\PSoC4/ADC.c **** {
 400:.\Generated_Source\PSoC4/ADC.c ****     /* Check whether the configuration number is valid or not */
 401:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_TOTAL_CONFIGS > config)
 402:.\Generated_Source\PSoC4/ADC.c ****     {
 403:.\Generated_Source\PSoC4/ADC.c ****         /* Stop the ADC before changing configurations */
 404:.\Generated_Source\PSoC4/ADC.c **** 	    ADC_Stop();
 405:.\Generated_Source\PSoC4/ADC.c ****         ADC_selected = 1u;
 406:.\Generated_Source\PSoC4/ADC.c ****         
 407:.\Generated_Source\PSoC4/ADC.c ****     	if(0u == ADC_initVar)
 408:.\Generated_Source\PSoC4/ADC.c ****     	{
 409:.\Generated_Source\PSoC4/ADC.c ****             ADC_Init();
 410:.\Generated_Source\PSoC4/ADC.c ****     	}
 411:.\Generated_Source\PSoC4/ADC.c ****         #if (ADC_VREF_ROUTED)
 412:.\Generated_Source\PSoC4/ADC.c ****         ADC_vrefAMux_Select((uint8)config);
 413:.\Generated_Source\PSoC4/ADC.c ****         #endif
 414:.\Generated_Source\PSoC4/ADC.c ****     	ADC_InitConfig(&ADC_allConfigs[config]);
 415:.\Generated_Source\PSoC4/ADC.c ****         #if(0u != ADC_ANY_CONFIG_USES_FILTER)
 416:.\Generated_Source\PSoC4/ADC.c ****         ADC_filterVinMux_Select((uint8)config);
 417:.\Generated_Source\PSoC4/ADC.c ****         #endif
 418:.\Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_CHAN_EN_REG = ADC_channelEnMasks[config];
 419:.\Generated_Source\PSoC4/ADC.c ****     	ADC_currentConfig = config;
 420:.\Generated_Source\PSoC4/ADC.c ****         
 421:.\Generated_Source\PSoC4/ADC.c ****         if(1u == restart)
 422:.\Generated_Source\PSoC4/ADC.c ****         {
 423:.\Generated_Source\PSoC4/ADC.c ****             /* Restart the ADC */    
 424:.\Generated_Source\PSoC4/ADC.c ****             ADC_Start();
 425:.\Generated_Source\PSoC4/ADC.c ****             
 426:.\Generated_Source\PSoC4/ADC.c ****             /* Restart the scan */
 427:.\Generated_Source\PSoC4/ADC.c ****             ADC_StartConvert();
 428:.\Generated_Source\PSoC4/ADC.c ****         }
 429:.\Generated_Source\PSoC4/ADC.c ****     }
 430:.\Generated_Source\PSoC4/ADC.c ****     return;
 431:.\Generated_Source\PSoC4/ADC.c **** }
 432:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 9


 433:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 434:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 435:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 436:.\Generated_Source\PSoC4/ADC.c **** *
 437:.\Generated_Source\PSoC4/ADC.c **** * \brief In continuous mode, this API starts the conversion process and it runs 
 438:.\Generated_Source\PSoC4/ADC.c **** * continuously. 
 439:.\Generated_Source\PSoC4/ADC.c **** 
 440:.\Generated_Source\PSoC4/ADC.c **** * In Single Shot mode, the function triggers a single scan and 
 441:.\Generated_Source\PSoC4/ADC.c **** * every scan requires a call of this function. The mode is set with the 
 442:.\Generated_Source\PSoC4/ADC.c **** * Sample Mode parameter in the customizer. The customizer setting can be 
 443:.\Generated_Source\PSoC4/ADC.c **** * overridden at run time with the ADC_SetConvertMode() function.
 444:.\Generated_Source\PSoC4/ADC.c **** * 
 445:.\Generated_Source\PSoC4/ADC.c **** * \param None
 446:.\Generated_Source\PSoC4/ADC.c **** * 
 447:.\Generated_Source\PSoC4/ADC.c **** * \return None
 448:.\Generated_Source\PSoC4/ADC.c **** * 
 449:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 450:.\Generated_Source\PSoC4/ADC.c **** *
 451:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 452:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_StartConvert
 453:.\Generated_Source\PSoC4/ADC.c **** *
 454:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 455:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 456:.\Generated_Source\PSoC4/ADC.c **** {
 457:.\Generated_Source\PSoC4/ADC.c **** 	/* Freerunning mode */
 458:.\Generated_Source\PSoC4/ADC.c **** 	if((ADC_SAR_SAMPLE_CTRL_REG 
 459:.\Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 460:.\Generated_Source\PSoC4/ADC.c **** 		== ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 461:.\Generated_Source\PSoC4/ADC.c ****     {
 462:.\Generated_Source\PSoC4/ADC.c **** 		ADC_SAR_SAMPLE_CTRL_REG |= ADC_SAR_SAMPLE_CTRL_CONTINUOUS_MSK ; 
 463:.\Generated_Source\PSoC4/ADC.c ****         #if (ADC_ANY_CONFIG_USES_FILTER)
 464:.\Generated_Source\PSoC4/ADC.c ****             if (0u == (ADC_initVar & 0x2u))
 465:.\Generated_Source\PSoC4/ADC.c ****             {
 466:.\Generated_Source\PSoC4/ADC.c ****                 ADC_initVar |= 0x2u;
 467:.\Generated_Source\PSoC4/ADC.c ****                 ADC_TrimOffset();
 468:.\Generated_Source\PSoC4/ADC.c ****             }
 469:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_ANY_CONFIG_USES_FILTER && (CFG0_FILTER_TYPE == LOW_PASS)) */
 470:.\Generated_Source\PSoC4/ADC.c **** 	}
 471:.\Generated_Source\PSoC4/ADC.c **** 	else /* Firmware trigger */
 472:.\Generated_Source\PSoC4/ADC.c **** 	{
 473:.\Generated_Source\PSoC4/ADC.c **** 		ADC_SAR_START_CTRL_REG = ADC_SAR_START_CTRL_FW_TRIGGER_MSK;
 474:.\Generated_Source\PSoC4/ADC.c **** 	}
 475:.\Generated_Source\PSoC4/ADC.c ****     
 476:.\Generated_Source\PSoC4/ADC.c ****     return;
 477:.\Generated_Source\PSoC4/ADC.c **** }
 478:.\Generated_Source\PSoC4/ADC.c **** 
 479:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 480:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 481:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 482:.\Generated_Source\PSoC4/ADC.c **** *
 483:.\Generated_Source\PSoC4/ADC.c **** * \brief Forces the ADC to stop conversions. If a conversion is 
 484:.\Generated_Source\PSoC4/ADC.c **** * currently executing, that conversion will complete, but no further conversions 
 485:.\Generated_Source\PSoC4/ADC.c **** * will occur.
 486:.\Generated_Source\PSoC4/ADC.c **** * 
 487:.\Generated_Source\PSoC4/ADC.c **** * \param None
 488:.\Generated_Source\PSoC4/ADC.c **** *
 489:.\Generated_Source\PSoC4/ADC.c **** * \return None
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 10


 490:.\Generated_Source\PSoC4/ADC.c **** *
 491:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 494:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_StopConvert
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 497:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 498:.\Generated_Source\PSoC4/ADC.c **** {
 499:.\Generated_Source\PSoC4/ADC.c ****     if((ADC_SAR_SAMPLE_CTRL_REG  
 500:.\Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 501:.\Generated_Source\PSoC4/ADC.c **** 		== ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 502:.\Generated_Source\PSoC4/ADC.c **** 	{
 503:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= ~ADC_SAR_SAMPLE_CTRL_CONTINUOUS_MSK;
 504:.\Generated_Source\PSoC4/ADC.c ****         
 505:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_allConfigs[ADC_currentConfig].miscConfig 
 506:.\Generated_Source\PSoC4/ADC.c ****             & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 507:.\Generated_Source\PSoC4/ADC.c ****     	    == ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
 508:.\Generated_Source\PSoC4/ADC.c ****         {
 509:.\Generated_Source\PSoC4/ADC.c ****             /* Re-synchronize the Filter if a filter is present */
 510:.\Generated_Source\PSoC4/ADC.c ****             ADC_Stop();
 511:.\Generated_Source\PSoC4/ADC.c ****             ADC_Start();
 512:.\Generated_Source\PSoC4/ADC.c ****         }
 513:.\Generated_Source\PSoC4/ADC.c **** 	}
 514:.\Generated_Source\PSoC4/ADC.c ****     
 515:.\Generated_Source\PSoC4/ADC.c ****     return;
 516:.\Generated_Source\PSoC4/ADC.c **** }
 517:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 518:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetConvertMode
 519:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 520:.\Generated_Source\PSoC4/ADC.c **** *
 521:.\Generated_Source\PSoC4/ADC.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This 
 522:.\Generated_Source\PSoC4/ADC.c **** * function overrides the settings applied in the customizer. Changing 
 523:.\Generated_Source\PSoC4/ADC.c **** * configurations will restore the values set in the customizer.
 524:.\Generated_Source\PSoC4/ADC.c **** *
 525:.\Generated_Source\PSoC4/ADC.c **** * \param mode Sets the conversion mode. See table below for details.
 526:.\Generated_Source\PSoC4/ADC.c **** * | Options                          | Description                             |
 527:.\Generated_Source\PSoC4/ADC.c **** * | :------------------------------- | :-------------------------------------- |
 528:.\Generated_Source\PSoC4/ADC.c **** * | ADC_SINGLE_SHOT     | Calling the ADC_StartConvert() function after setting mode this will trig
 529:.\Generated_Source\PSoC4/ADC.c **** * | ADC_CONTINUOUS      | Calling the ADC_StartConvert() function after setting this mode trigger c
 530:.\Generated_Source\PSoC4/ADC.c **** *
 531:.\Generated_Source\PSoC4/ADC.c **** * \return None
 532:.\Generated_Source\PSoC4/ADC.c **** * 
 533:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 534:.\Generated_Source\PSoC4/ADC.c **** *
 535:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 536:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetConvertMode
 537:.\Generated_Source\PSoC4/ADC.c **** *
 538:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 539:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetConvertMode(uint32 mode)
 540:.\Generated_Source\PSoC4/ADC.c **** {
 541:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_CONTINUOUS == mode)
 542:.\Generated_Source\PSoC4/ADC.c ****     {
 543:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;       
 544:.\Generated_Source\PSoC4/ADC.c ****     }
 545:.\Generated_Source\PSoC4/ADC.c ****     else
 546:.\Generated_Source\PSoC4/ADC.c ****     {
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 11


 547:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= ~ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;       
 548:.\Generated_Source\PSoC4/ADC.c ****     }
 549:.\Generated_Source\PSoC4/ADC.c **** }
 550:.\Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 551:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IRQ_Enable
 552:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
 553:.\Generated_Source\PSoC4/ADC.c **** *
 554:.\Generated_Source\PSoC4/ADC.c **** * \brief Enables interrupts to occur at the end of a conversion. Global 
 555:.\Generated_Source\PSoC4/ADC.c **** * interrupts must also be enabled for the ADC interrupts to occur.
 556:.\Generated_Source\PSoC4/ADC.c **** *
 557:.\Generated_Source\PSoC4/ADC.c **** * \param None
 558:.\Generated_Source\PSoC4/ADC.c **** *
 559:.\Generated_Source\PSoC4/ADC.c **** * \return None
 560:.\Generated_Source\PSoC4/ADC.c **** *
 561:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 562:.\Generated_Source\PSoC4/ADC.c **** *
 563:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 564:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_IRQ_Enable
 565:.\Generated_Source\PSoC4/ADC.c **** *
 566:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 567:.\Generated_Source\PSoC4/ADC.c **** 
 568:.\Generated_Source\PSoC4/ADC.c **** 
 569:.\Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 570:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IRQ_Disable
 571:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//* 
 572:.\Generated_Source\PSoC4/ADC.c **** *
 573:.\Generated_Source\PSoC4/ADC.c **** * \brief Disables end of conversion interrupts. 
 574:.\Generated_Source\PSoC4/ADC.c **** *
 575:.\Generated_Source\PSoC4/ADC.c **** * \param None
 576:.\Generated_Source\PSoC4/ADC.c **** * 
 577:.\Generated_Source\PSoC4/ADC.c **** * \return None
 578:.\Generated_Source\PSoC4/ADC.c **** * 
 579:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 580:.\Generated_Source\PSoC4/ADC.c **** *
 581:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 582:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_IRQ_Disable
 583:.\Generated_Source\PSoC4/ADC.c **** *
 584:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC4/ADC.c **** 
 586:.\Generated_Source\PSoC4/ADC.c **** 
 587:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 588:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetEosMask
 589:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 590:.\Generated_Source\PSoC4/ADC.c **** *
 591:.\Generated_Source\PSoC4/ADC.c **** * \brief Sets of clears the End of Scan (EOS) interrupt mask. 
 592:.\Generated_Source\PSoC4/ADC.c **** *
 593:.\Generated_Source\PSoC4/ADC.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 594:.\Generated_Source\PSoC4/ADC.c **** *
 595:.\Generated_Source\PSoC4/ADC.c **** * \return None
 596:.\Generated_Source\PSoC4/ADC.c **** * 
 597:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 598:.\Generated_Source\PSoC4/ADC.c **** *
 599:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 600:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetEosMask
 601:.\Generated_Source\PSoC4/ADC.c **** *
 602:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 603:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetEosMask(uint32 mask)
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 12


 604:.\Generated_Source\PSoC4/ADC.c **** {
 605:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = mask & ADC_EOS_MASK;
 606:.\Generated_Source\PSoC4/ADC.c ****     
 607:.\Generated_Source\PSoC4/ADC.c ****     return;
 608:.\Generated_Source\PSoC4/ADC.c **** }
 609:.\Generated_Source\PSoC4/ADC.c **** 
 610:.\Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 611:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 612:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
 613:.\Generated_Source\PSoC4/ADC.c **** *
 614:.\Generated_Source\PSoC4/ADC.c **** * \brief Sets enable/disable mask for all channels.
 615:.\Generated_Source\PSoC4/ADC.c **** *
 616:.\Generated_Source\PSoC4/ADC.c **** *
 617:.\Generated_Source\PSoC4/ADC.c **** * \param chanMask
 618:.\Generated_Source\PSoC4/ADC.c **** *  Channel mask.
 619:.\Generated_Source\PSoC4/ADC.c **** *
 620:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect
 621:.\Generated_Source\PSoC4/ADC.c **** *  None.
 622:.\Generated_Source\PSoC4/ADC.c **** *
 623:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 624:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetChanMask
 625:.\Generated_Source\PSoC4/ADC.c **** *
 626:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 627:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 chanMask)
 628:.\Generated_Source\PSoC4/ADC.c **** {
 629:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = chanMask & ADC_MAX_CHANNELS_EN_MASK;
 630:.\Generated_Source\PSoC4/ADC.c ****     ADC_channelEnMasks[ADC_currentConfig] = chanMask & ADC_MAX_CHANNELS_EN_MASK;
 631:.\Generated_Source\PSoC4/ADC.c ****     return;
 632:.\Generated_Source\PSoC4/ADC.c **** }
 633:.\Generated_Source\PSoC4/ADC.c **** 
 634:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 635:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 636:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 637:.\Generated_Source\PSoC4/ADC.c **** *
 638:.\Generated_Source\PSoC4/ADC.c **** * \brief Immediately returns the status of the conversion or does not return 
 639:.\Generated_Source\PSoC4/ADC.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 640:.\Generated_Source\PSoC4/ADC.c **** *
 641:.\Generated_Source\PSoC4/ADC.c **** * \param retMode Check conversion return mode. See the following table for 
 642:.\Generated_Source\PSoC4/ADC.c **** * options.
 643:.\Generated_Source\PSoC4/ADC.c **** * | Options                              | Description                             |
 644:.\Generated_Source\PSoC4/ADC.c **** * | :-------------------------------     | :-------------------------------------- |
 645:.\Generated_Source\PSoC4/ADC.c **** * | ADC_RETURN_STATUS       | Immediately returns the conversion status for sequential channels. If
 646:.\Generated_Source\PSoC4/ADC.c **** * | ADC_WAIT_FOR_RESULT     | Does not return a result until the ADC conversion of all sequential c
 647:.\Generated_Source\PSoC4/ADC.c **** * | ADC_RETURN_STATUS_INJ   | Immediately returns the conversion status for the injection channel. 
 648:.\Generated_Source\PSoC4/ADC.c **** * | ADC_WAIT_FOR_RESULT_INJ | Does not return a result until the ADC completes injection channel co
 649:.\Generated_Source\PSoC4/ADC.c **** * 
 650:.\Generated_Source\PSoC4/ADC.c **** * \return uint8: If a nonzero value is returned, the last conversion is complete. 
 651:.\Generated_Source\PSoC4/ADC.c **** * If the returned value is zero, the ADC is still calculating the last result.
 652:.\Generated_Source\PSoC4/ADC.c **** *
 653:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
 654:.\Generated_Source\PSoC4/ADC.c **** * 
 655:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 656:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_IsEndConversion
 657:.\Generated_Source\PSoC4/ADC.c **** *
 658:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 659:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 660:.\Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 13


 661:.\Generated_Source\PSoC4/ADC.c ****     uint32 endOfConversion = 0u;
 662:.\Generated_Source\PSoC4/ADC.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
 663:.\Generated_Source\PSoC4/ADC.c ****     if((ADC_RETURN_STATUS == retMode) || (ADC_WAIT_FOR_RESULT == retMode))
 664:.\Generated_Source\PSoC4/ADC.c ****     {
 665:.\Generated_Source\PSoC4/ADC.c ****         do
 666:.\Generated_Source\PSoC4/ADC.c ****         {
 667:.\Generated_Source\PSoC4/ADC.c ****             endOfConversion = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 668:.\Generated_Source\PSoC4/ADC.c ****             wdt--;
 669:.\Generated_Source\PSoC4/ADC.c ****         }while(((0u == endOfConversion) 
 670:.\Generated_Source\PSoC4/ADC.c ****             && (((uint32) retMode & ADC_WAIT_FOR_RESULT) != 0u))
 671:.\Generated_Source\PSoC4/ADC.c ****             && (0uL != wdt));
 672:.\Generated_Source\PSoC4/ADC.c **** 
 673:.\Generated_Source\PSoC4/ADC.c ****         if(0u != endOfConversion)
 674:.\Generated_Source\PSoC4/ADC.c ****         {
 675:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 676:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 677:.\Generated_Source\PSoC4/ADC.c ****         }
 678:.\Generated_Source\PSoC4/ADC.c ****     }
 679:.\Generated_Source\PSoC4/ADC.c ****     
 680:.\Generated_Source\PSoC4/ADC.c ****     return endOfConversion;
 681:.\Generated_Source\PSoC4/ADC.c **** }
 682:.\Generated_Source\PSoC4/ADC.c ****  
 683:.\Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 684:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsChannelSigned(uint32 chan)
 685:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
 686:.\Generated_Source\PSoC4/ADC.c **** *
 687:.\Generated_Source\PSoC4/ADC.c **** * Determines if the provided channel is in signed format. 
 688:.\Generated_Source\PSoC4/ADC.c **** *
 689:.\Generated_Source\PSoC4/ADC.c **** * \param chan The ADC channel to check. 
 690:.\Generated_Source\PSoC4/ADC.c **** *
 691:.\Generated_Source\PSoC4/ADC.c **** * \return None
 692:.\Generated_Source\PSoC4/ADC.c **** * 
 693:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 694:.\Generated_Source\PSoC4/ADC.c **** *
 695:.\Generated_Source\PSoC4/ADC.c **** *
 696:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 697:.\Generated_Source\PSoC4/ADC.c **** static int32 ADC_IsChannelSigned(uint32 chan)
 698:.\Generated_Source\PSoC4/ADC.c **** {
  25              		.loc 1 698 0
  26              		.cfi_startproc
  27              	.LVL0:
 699:.\Generated_Source\PSoC4/ADC.c ****     int32 isSigned = 0;
 700:.\Generated_Source\PSoC4/ADC.c ****     uint32 chanConfig;
 701:.\Generated_Source\PSoC4/ADC.c ****     
 702:.\Generated_Source\PSoC4/ADC.c ****     chanConfig = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chan << 2u)));
  28              		.loc 1 702 0
  29 0000 8000     		lsl	r0, r0, #2
  30              	.LVL1:
  31 0002 114B     		ldr	r3, .L6
  32 0004 9C46     		mov	ip, r3
  33 0006 6044     		add	r0, r0, ip
  34 0008 0268     		ldr	r2, [r0]
  35              	.LVL2:
 703:.\Generated_Source\PSoC4/ADC.c ****     /* If differential mode */
 704:.\Generated_Source\PSoC4/ADC.c ****     if(0u != (chanConfig & ADC_CHANNEL_CONFIG_DIFF_ALL_MSK))
  36              		.loc 1 704 0
  37 000a 104B     		ldr	r3, .L6+4
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 14


  38 000c 1A42     		tst	r2, r3
  39 000e 0BD0     		beq	.L2
 705:.\Generated_Source\PSoC4/ADC.c ****     {
 706:.\Generated_Source\PSoC4/ADC.c ****         /*If signed differential */
 707:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
  40              		.loc 1 707 0
  41 0010 0F4B     		ldr	r3, .L6+8
  42 0012 1A68     		ldr	r2, [r3]
  43              	.LVL3:
  44 0014 D300     		lsl	r3, r2, #3
  45 0016 9B1A     		sub	r3, r3, r2
  46 0018 DB00     		lsl	r3, r3, #3
  47 001a 0E4A     		ldr	r2, .L6+12
  48 001c D318     		add	r3, r2, r3
  49 001e DB68     		ldr	r3, [r3, #12]
  50 0020 1B07     		lsl	r3, r3, #28
  51 0022 0DD4     		bmi	.L4
 699:.\Generated_Source\PSoC4/ADC.c ****     uint32 chanConfig;
  52              		.loc 1 699 0
  53 0024 0020     		mov	r0, #0
  54 0026 0EE0     		b	.L3
  55              	.LVL4:
  56              	.L2:
 708:.\Generated_Source\PSoC4/ADC.c ****             & ADC_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) != 0u)
 709:.\Generated_Source\PSoC4/ADC.c ****         {
 710:.\Generated_Source\PSoC4/ADC.c ****             isSigned = 1;
 711:.\Generated_Source\PSoC4/ADC.c ****         }
 712:.\Generated_Source\PSoC4/ADC.c ****     }
 713:.\Generated_Source\PSoC4/ADC.c ****     else
 714:.\Generated_Source\PSoC4/ADC.c ****     {
 715:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_allConfigs[ADC_currentConfig].sampleCtrl
  57              		.loc 1 715 0
  58 0028 094B     		ldr	r3, .L6+8
  59 002a 1A68     		ldr	r2, [r3]
  60              	.LVL5:
  61 002c D300     		lsl	r3, r2, #3
  62 002e 9B1A     		sub	r3, r3, r2
  63 0030 DB00     		lsl	r3, r3, #3
  64 0032 084A     		ldr	r2, .L6+12
  65 0034 D318     		add	r3, r2, r3
  66 0036 DB68     		ldr	r3, [r3, #12]
  67 0038 5B07     		lsl	r3, r3, #29
  68 003a 03D4     		bmi	.L5
 699:.\Generated_Source\PSoC4/ADC.c ****     uint32 chanConfig;
  69              		.loc 1 699 0
  70 003c 0020     		mov	r0, #0
  71 003e 02E0     		b	.L3
  72              	.L4:
 710:.\Generated_Source\PSoC4/ADC.c ****         }
  73              		.loc 1 710 0
  74 0040 0120     		mov	r0, #1
  75 0042 00E0     		b	.L3
  76              	.L5:
 716:.\Generated_Source\PSoC4/ADC.c ****             & ADC_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) != 0u)
 717:.\Generated_Source\PSoC4/ADC.c ****         {
 718:.\Generated_Source\PSoC4/ADC.c ****             isSigned = 1;
  77              		.loc 1 718 0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 15


  78 0044 0120     		mov	r0, #1
  79              	.L3:
  80              	.LVL6:
 719:.\Generated_Source\PSoC4/ADC.c ****         }
 720:.\Generated_Source\PSoC4/ADC.c ****     }
 721:.\Generated_Source\PSoC4/ADC.c ****     return isSigned;
 722:.\Generated_Source\PSoC4/ADC.c **** }
  81              		.loc 1 722 0
  82              		@ sp needed
  83 0046 7047     		bx	lr
  84              	.L7:
  85              		.align	2
  86              	.L6:
  87 0048 80003A40 		.word	1077543040
  88 004c 00010001 		.word	16777472
  89 0050 00000000 		.word	.LANCHOR0
  90 0054 00000000 		.word	ADC_allConfigs
  91              		.cfi_endproc
  92              	.LFE12:
  93              		.size	ADC_IsChannelSigned, .-ADC_IsChannelSigned
  94              		.section	.text.ADC_Stop,"ax",%progbits
  95              		.align	2
  96              		.global	ADC_Stop
  97              		.code	16
  98              		.thumb_func
  99              		.type	ADC_Stop, %function
 100              	ADC_Stop:
 101              	.LFB3:
 263:.\Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
 102              		.loc 1 263 0
 103              		.cfi_startproc
 274:.\Generated_Source\PSoC4/ADC.c ****     return;
 104              		.loc 1 274 0
 105 0000 024A     		ldr	r2, .L9
 106 0002 1368     		ldr	r3, [r2]
 107 0004 5B00     		lsl	r3, r3, #1
 108 0006 5B08     		lsr	r3, r3, #1
 109 0008 1360     		str	r3, [r2]
 276:.\Generated_Source\PSoC4/ADC.c **** 
 110              		.loc 1 276 0
 111              		@ sp needed
 112 000a 7047     		bx	lr
 113              	.L10:
 114              		.align	2
 115              	.L9:
 116 000c 00003A40 		.word	1077542912
 117              		.cfi_endproc
 118              	.LFE3:
 119              		.size	ADC_Stop, .-ADC_Stop
 120              		.section	.text.ADC_InitConfig,"ax",%progbits
 121              		.align	2
 122              		.global	ADC_InitConfig
 123              		.code	16
 124              		.thumb_func
 125              		.type	ADC_InitConfig, %function
 126              	ADC_InitConfig:
 127              	.LFB4:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 16


 295:.\Generated_Source\PSoC4/ADC.c **** 	uint32 chNum;
 128              		.loc 1 295 0
 129              		.cfi_startproc
 130              	.LVL7:
 131 0000 10B5     		push	{r4, lr}
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 4, -8
 134              		.cfi_offset 14, -4
 135 0002 041C     		mov	r4, r0
 307:.\Generated_Source\PSoC4/ADC.c ****         
 136              		.loc 1 307 0
 137 0004 808E     		ldrh	r0, [r0, #52]
 138              	.LVL8:
 139 0006 0021     		mov	r1, #0
 140 0008 FFF7FEFF 		bl	ADC_intSarClock_SetFractionalDividerRegister
 141              	.LVL9:
 311:.\Generated_Source\PSoC4/ADC.c ****    
 142              		.loc 1 311 0
 143 000c A268     		ldr	r2, [r4, #8]
 314:.\Generated_Source\PSoC4/ADC.c ****     ? ADC_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 144              		.loc 1 314 0
 145 000e 2B4B     		ldr	r3, .L20
 146 0010 1B68     		ldr	r3, [r3]
 147 0012 002B     		cmp	r3, #0
 148 0014 02DA     		bge	.L19
 149 0016 8023     		mov	r3, #128
 150 0018 5B03     		lsl	r3, r3, #13
 151 001a 00E0     		b	.L12
 152              	.L19:
 153 001c 0023     		mov	r3, #0
 154              	.L12:
 314:.\Generated_Source\PSoC4/ADC.c ****     ? ADC_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 155              		.loc 1 314 0 is_stmt 0 discriminator 4
 156 001e 1343     		orr	r3, r2
 311:.\Generated_Source\PSoC4/ADC.c ****    
 157              		.loc 1 311 0 is_stmt 1 discriminator 4
 158 0020 274A     		ldr	r2, .L20+4
 159 0022 1168     		ldr	r1, [r2]
 160 0024 0B43     		orr	r3, r1
 161 0026 1360     		str	r3, [r2]
 317:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_THRES_REG = config->rangeThres;	
 162              		.loc 1 317 0 discriminator 4
 163 0028 264B     		ldr	r3, .L20+8
 164 002a E268     		ldr	r2, [r4, #12]
 165 002c 1A60     		str	r2, [r3]
 318:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_COND_REG = config->rangeCond;
 166              		.loc 1 318 0 discriminator 4
 167 002e 264B     		ldr	r3, .L20+12
 168 0030 A269     		ldr	r2, [r4, #24]
 169 0032 1A60     		str	r2, [r3]
 319:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 170              		.loc 1 319 0 discriminator 4
 171 0034 254B     		ldr	r3, .L20+16
 172 0036 E269     		ldr	r2, [r4, #28]
 173 0038 1A60     		str	r2, [r3]
 320:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 174              		.loc 1 320 0 discriminator 4
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 17


 175 003a 254B     		ldr	r3, .L20+20
 176 003c 2269     		ldr	r2, [r4, #16]
 177 003e 1A60     		str	r2, [r3]
 321:.\Generated_Source\PSoC4/ADC.c ****     
 178              		.loc 1 321 0 discriminator 4
 179 0040 244B     		ldr	r3, .L20+24
 180 0042 6269     		ldr	r2, [r4, #20]
 181 0044 1A60     		str	r2, [r3]
 335:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;	
 182              		.loc 1 335 0 discriminator 4
 183 0046 244A     		ldr	r2, .L20+28
 184 0048 0021     		mov	r1, #0
 185 004a 1160     		str	r1, [r2]
 336:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 186              		.loc 1 336 0 discriminator 4
 187 004c 234B     		ldr	r3, .L20+32
 188 004e 1960     		str	r1, [r3]
 337:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 189              		.loc 1 337 0 discriminator 4
 190 0050 A16A     		ldr	r1, [r4, #40]
 191 0052 1160     		str	r1, [r2]
 338:.\Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_INTR_MASK_REG = ADC_EOS_MASK;
 192              		.loc 1 338 0 discriminator 4
 193 0054 626A     		ldr	r2, [r4, #36]
 194 0056 1A60     		str	r2, [r3]
 339:.\Generated_Source\PSoC4/ADC.c ****     
 195              		.loc 1 339 0 discriminator 4
 196 0058 0122     		mov	r2, #1
 197 005a 214B     		ldr	r3, .L20+36
 198 005c 1A60     		str	r2, [r3]
 343:.\Generated_Source\PSoC4/ADC.c **** 	if(((config->ctrl & ADC__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 199              		.loc 1 343 0 discriminator 4
 200 005e 214B     		ldr	r3, .L20+40
 201 0060 1B68     		ldr	r3, [r3]
 202              	.LVL10:
 344:.\Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNAL1024) 
 203              		.loc 1 344 0 discriminator 4
 204 0062 EF32     		add	r2, r2, #239
 205 0064 A168     		ldr	r1, [r4, #8]
 206 0066 0A40     		and	r2, r1
 207 0068 402A     		cmp	r2, #64
 208 006a 01D0     		beq	.L13
 346:.\Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNALVREF))
 209              		.loc 1 346 0
 210 006c 002A     		cmp	r2, #0
 211 006e 04D1     		bne	.L14
 212              	.L13:
 349:.\Generated_Source\PSoC4/ADC.c **** 		tmpRegVal |= ADC_SAR_DFT_CTRL_DLY_INC_MSK;
 213              		.loc 1 349 0
 214 0070 1D4A     		ldr	r2, .L20+44
 215 0072 1340     		and	r3, r2
 216              	.LVL11:
 350:.\Generated_Source\PSoC4/ADC.c **** 	}
 217              		.loc 1 350 0
 218 0074 0122     		mov	r2, #1
 219 0076 1343     		orr	r3, r2
 220              	.LVL12:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 18


 221 0078 04E0     		b	.L15
 222              	.L14:
 223              	.LVL13:
 355:.\Generated_Source\PSoC4/ADC.c **** 	}	
 224              		.loc 1 355 0
 225 007a 0122     		mov	r2, #1
 226 007c 9343     		bic	r3, r2
 227              	.LVL14:
 228 007e 8022     		mov	r2, #128
 229 0080 9205     		lsl	r2, r2, #22
 230 0082 1343     		orr	r3, r2
 231              	.LVL15:
 232              	.L15:
 357:.\Generated_Source\PSoC4/ADC.c **** 	
 233              		.loc 1 357 0
 234 0084 174A     		ldr	r2, .L20+40
 235 0086 1360     		str	r3, [r2]
 236              	.LVL16:
 359:.\Generated_Source\PSoC4/ADC.c ****     {
 237              		.loc 1 359 0
 238 0088 0021     		mov	r1, #0
 239 008a 13E0     		b	.L16
 240              	.LVL17:
 241              	.L18:
 361:.\Generated_Source\PSoC4/ADC.c **** 		& ADC_CHANNEL_CONFIG_MASK);
 242              		.loc 1 361 0
 243 008c 2368     		ldr	r3, [r4]
 244 008e 5A18     		add	r2, r3, r1
 245 0090 9200     		lsl	r2, r2, #2
 246 0092 164B     		ldr	r3, .L20+48
 247 0094 D058     		ldr	r0, [r2, r3]
 248 0096 164B     		ldr	r3, .L20+52
 249 0098 0340     		and	r3, r0
 250              	.LVL18:
 365:.\Generated_Source\PSoC4/ADC.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 251              		.loc 1 365 0
 252 009a 1648     		ldr	r0, .L20+56
 253 009c 1258     		ldr	r2, [r2, r0]
 254 009e 1343     		orr	r3, r2
 255              	.LVL19:
 367:.\Generated_Source\PSoC4/ADC.c ****             {
 256              		.loc 1 367 0
 257 00a0 D201     		lsl	r2, r2, #7
 258 00a2 01D5     		bpl	.L17
 369:.\Generated_Source\PSoC4/ADC.c ****             }
 259              		.loc 1 369 0
 260 00a4 144A     		ldr	r2, .L20+60
 261 00a6 1340     		and	r3, r2
 262              	.LVL20:
 263              	.L17:
 373:.\Generated_Source\PSoC4/ADC.c **** 	}
 264              		.loc 1 373 0 discriminator 2
 265 00a8 8A00     		lsl	r2, r1, #2
 266 00aa 1448     		ldr	r0, .L20+64
 267 00ac 8446     		mov	ip, r0
 268 00ae 6244     		add	r2, r2, ip
 269 00b0 1360     		str	r3, [r2]
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 19


 359:.\Generated_Source\PSoC4/ADC.c ****     {
 270              		.loc 1 359 0 discriminator 2
 271 00b2 0131     		add	r1, r1, #1
 272              	.LVL21:
 273              	.L16:
 359:.\Generated_Source\PSoC4/ADC.c ****     {
 274              		.loc 1 359 0 is_stmt 0 discriminator 1
 275 00b4 6368     		ldr	r3, [r4, #4]
 276              	.LVL22:
 277 00b6 8B42     		cmp	r3, r1
 278 00b8 E8D8     		bhi	.L18
 377:.\Generated_Source\PSoC4/ADC.c **** 
 279              		.loc 1 377 0 is_stmt 1
 280              		@ sp needed
 281              	.LVL23:
 282 00ba 10BD     		pop	{r4, pc}
 283              	.L21:
 284              		.align	2
 285              	.L20:
 286 00bc 80033A40 		.word	1077543808
 287 00c0 00003A40 		.word	1077542912
 288 00c4 04003A40 		.word	1077542916
 289 00c8 18003A40 		.word	1077542936
 290 00cc 1C003A40 		.word	1077542940
 291 00d0 10003A40 		.word	1077542928
 292 00d4 14003A40 		.word	1077542932
 293 00d8 28023A40 		.word	1077543464
 294 00dc 38023A40 		.word	1077543480
 295 00e0 18023A40 		.word	1077543448
 296 00e4 30003A40 		.word	1077542960
 297 00e8 FFFFFFDF 		.word	-536870913
 298 00ec 00000000 		.word	.LANCHOR1
 299 00f0 00370080 		.word	-2147469568
 300 00f4 00000000 		.word	ADC_InputsPlacement
 301 00f8 FFFEFFFF 		.word	-257
 302 00fc 80003A40 		.word	1077543040
 303              		.cfi_endproc
 304              	.LFE4:
 305              		.size	ADC_InitConfig, .-ADC_InitConfig
 306              		.section	.text.ADC_StartConvert,"ax",%progbits
 307              		.align	2
 308              		.global	ADC_StartConvert
 309              		.code	16
 310              		.thumb_func
 311              		.type	ADC_StartConvert, %function
 312              	ADC_StartConvert:
 313              	.LFB6:
 456:.\Generated_Source\PSoC4/ADC.c **** 	/* Freerunning mode */
 314              		.loc 1 456 0
 315              		.cfi_startproc
 458:.\Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 316              		.loc 1 458 0
 317 0000 074B     		ldr	r3, .L25
 318 0002 1B68     		ldr	r3, [r3]
 319 0004 5B03     		lsl	r3, r3, #13
 320 0006 06D5     		bpl	.L23
 462:.\Generated_Source\PSoC4/ADC.c ****         #if (ADC_ANY_CONFIG_USES_FILTER)
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 20


 321              		.loc 1 462 0
 322 0008 054A     		ldr	r2, .L25
 323 000a 1368     		ldr	r3, [r2]
 324 000c 8021     		mov	r1, #128
 325 000e 4902     		lsl	r1, r1, #9
 326 0010 0B43     		orr	r3, r1
 327 0012 1360     		str	r3, [r2]
 328 0014 02E0     		b	.L22
 329              	.L23:
 473:.\Generated_Source\PSoC4/ADC.c **** 	}
 330              		.loc 1 473 0
 331 0016 0122     		mov	r2, #1
 332 0018 024B     		ldr	r3, .L25+4
 333 001a 1A60     		str	r2, [r3]
 334              	.L22:
 477:.\Generated_Source\PSoC4/ADC.c **** 
 335              		.loc 1 477 0
 336              		@ sp needed
 337 001c 7047     		bx	lr
 338              	.L26:
 339 001e C046     		.align	2
 340              	.L25:
 341 0020 04003A40 		.word	1077542916
 342 0024 24003A40 		.word	1077542948
 343              		.cfi_endproc
 344              	.LFE6:
 345              		.size	ADC_StartConvert, .-ADC_StartConvert
 346              		.section	.text.ADC_SetConvertMode,"ax",%progbits
 347              		.align	2
 348              		.global	ADC_SetConvertMode
 349              		.code	16
 350              		.thumb_func
 351              		.type	ADC_SetConvertMode, %function
 352              	ADC_SetConvertMode:
 353              	.LFB8:
 540:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_CONTINUOUS == mode)
 354              		.loc 1 540 0
 355              		.cfi_startproc
 356              	.LVL24:
 541:.\Generated_Source\PSoC4/ADC.c ****     {
 357              		.loc 1 541 0
 358 0000 0128     		cmp	r0, #1
 359 0002 06D1     		bne	.L28
 543:.\Generated_Source\PSoC4/ADC.c ****     }
 360              		.loc 1 543 0
 361 0004 064A     		ldr	r2, .L30
 362 0006 1368     		ldr	r3, [r2]
 363 0008 8021     		mov	r1, #128
 364 000a C902     		lsl	r1, r1, #11
 365 000c 0B43     		orr	r3, r1
 366 000e 1360     		str	r3, [r2]
 367 0010 04E0     		b	.L27
 368              	.L28:
 547:.\Generated_Source\PSoC4/ADC.c ****     }
 369              		.loc 1 547 0
 370 0012 034A     		ldr	r2, .L30
 371 0014 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 21


 372 0016 034B     		ldr	r3, .L30+4
 373 0018 0B40     		and	r3, r1
 374 001a 1360     		str	r3, [r2]
 375              	.L27:
 549:.\Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 376              		.loc 1 549 0
 377              		@ sp needed
 378 001c 7047     		bx	lr
 379              	.L31:
 380 001e C046     		.align	2
 381              	.L30:
 382 0020 04003A40 		.word	1077542916
 383 0024 FFFFFBFF 		.word	-262145
 384              		.cfi_endproc
 385              	.LFE8:
 386              		.size	ADC_SetConvertMode, .-ADC_SetConvertMode
 387              		.section	.text.ADC_SetEosMask,"ax",%progbits
 388              		.align	2
 389              		.global	ADC_SetEosMask
 390              		.code	16
 391              		.thumb_func
 392              		.type	ADC_SetEosMask, %function
 393              	ADC_SetEosMask:
 394              	.LFB9:
 604:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = mask & ADC_EOS_MASK;
 395              		.loc 1 604 0
 396              		.cfi_startproc
 397              	.LVL25:
 605:.\Generated_Source\PSoC4/ADC.c ****     
 398              		.loc 1 605 0
 399 0000 0123     		mov	r3, #1
 400 0002 1840     		and	r0, r3
 401              	.LVL26:
 402 0004 014B     		ldr	r3, .L33
 403 0006 1860     		str	r0, [r3]
 608:.\Generated_Source\PSoC4/ADC.c **** 
 404              		.loc 1 608 0
 405              		@ sp needed
 406 0008 7047     		bx	lr
 407              	.L34:
 408 000a C046     		.align	2
 409              	.L33:
 410 000c 18023A40 		.word	1077543448
 411              		.cfi_endproc
 412              	.LFE9:
 413              		.size	ADC_SetEosMask, .-ADC_SetEosMask
 414              		.section	.text.ADC_SetChanMask,"ax",%progbits
 415              		.align	2
 416              		.global	ADC_SetChanMask
 417              		.code	16
 418              		.thumb_func
 419              		.type	ADC_SetChanMask, %function
 420              	ADC_SetChanMask:
 421              	.LFB10:
 628:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = chanMask & ADC_MAX_CHANNELS_EN_MASK;
 422              		.loc 1 628 0
 423              		.cfi_startproc
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 22


 424              	.LVL27:
 629:.\Generated_Source\PSoC4/ADC.c ****     ADC_channelEnMasks[ADC_currentConfig] = chanMask & ADC_MAX_CHANNELS_EN_MASK;
 425              		.loc 1 629 0
 426 0000 0723     		mov	r3, #7
 427 0002 1840     		and	r0, r3
 428              	.LVL28:
 429 0004 034B     		ldr	r3, .L36
 430 0006 1860     		str	r0, [r3]
 630:.\Generated_Source\PSoC4/ADC.c ****     return;
 431              		.loc 1 630 0
 432 0008 034A     		ldr	r2, .L36+4
 433 000a 1368     		ldr	r3, [r2]
 434 000c 9B00     		lsl	r3, r3, #2
 435 000e D318     		add	r3, r2, r3
 436 0010 5860     		str	r0, [r3, #4]
 632:.\Generated_Source\PSoC4/ADC.c **** 
 437              		.loc 1 632 0
 438              		@ sp needed
 439 0012 7047     		bx	lr
 440              	.L37:
 441              		.align	2
 442              	.L36:
 443 0014 20003A40 		.word	1077542944
 444 0018 00000000 		.word	.LANCHOR0
 445              		.cfi_endproc
 446              	.LFE10:
 447              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 448              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 449              		.align	2
 450              		.global	ADC_IsEndConversion
 451              		.code	16
 452              		.thumb_func
 453              		.type	ADC_IsEndConversion, %function
 454              	ADC_IsEndConversion:
 455              	.LFB11:
 660:.\Generated_Source\PSoC4/ADC.c ****     uint32 endOfConversion = 0u;
 456              		.loc 1 660 0
 457              		.cfi_startproc
 458              	.LVL29:
 459 0000 011C     		mov	r1, r0
 460              	.LVL30:
 663:.\Generated_Source\PSoC4/ADC.c ****     {
 461              		.loc 1 663 0
 462 0002 431E     		sub	r3, r0, #1
 463 0004 012B     		cmp	r3, #1
 464 0006 11D8     		bhi	.L42
 465 0008 094A     		ldr	r2, .L43
 466              	.LVL31:
 467              	.L41:
 667:.\Generated_Source\PSoC4/ADC.c ****             wdt--;
 468              		.loc 1 667 0 discriminator 1
 469 000a 0A4B     		ldr	r3, .L43+4
 470 000c 1B68     		ldr	r3, [r3]
 471 000e 0120     		mov	r0, #1
 472 0010 1840     		and	r0, r3
 473              	.LVL32:
 668:.\Generated_Source\PSoC4/ADC.c ****         }while(((0u == endOfConversion) 
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 23


 474              		.loc 1 668 0 discriminator 1
 475 0012 013A     		sub	r2, r2, #1
 476              	.LVL33:
 671:.\Generated_Source\PSoC4/ADC.c **** 
 477              		.loc 1 671 0 discriminator 1
 478 0014 0028     		cmp	r0, #0
 479 0016 03D1     		bne	.L40
 670:.\Generated_Source\PSoC4/ADC.c ****             && (0uL != wdt));
 480              		.loc 1 670 0
 481 0018 8B07     		lsl	r3, r1, #30
 482 001a 01D5     		bpl	.L40
 671:.\Generated_Source\PSoC4/ADC.c **** 
 483              		.loc 1 671 0
 484 001c 002A     		cmp	r2, #0
 485 001e F4D1     		bne	.L41
 486              	.L40:
 673:.\Generated_Source\PSoC4/ADC.c ****         {
 487              		.loc 1 673 0
 488 0020 0028     		cmp	r0, #0
 489 0022 04D0     		beq	.L39
 676:.\Generated_Source\PSoC4/ADC.c ****         }
 490              		.loc 1 676 0
 491 0024 0122     		mov	r2, #1
 492              	.LVL34:
 493 0026 034B     		ldr	r3, .L43+4
 494 0028 1A60     		str	r2, [r3]
 495 002a 00E0     		b	.L39
 496              	.LVL35:
 497              	.L42:
 661:.\Generated_Source\PSoC4/ADC.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
 498              		.loc 1 661 0
 499 002c 0020     		mov	r0, #0
 500              	.LVL36:
 501              	.L39:
 681:.\Generated_Source\PSoC4/ADC.c ****  
 502              		.loc 1 681 0
 503              		@ sp needed
 504 002e 7047     		bx	lr
 505              	.L44:
 506              		.align	2
 507              	.L43:
 508 0030 FFFFFF03 		.word	67108863
 509 0034 10023A40 		.word	1077543440
 510              		.cfi_endproc
 511              	.LFE11:
 512              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 513              		.section	.text.ADC_GetResult16,"ax",%progbits
 514              		.align	2
 515              		.global	ADC_GetResult16
 516              		.code	16
 517              		.thumb_func
 518              		.type	ADC_GetResult16, %function
 519              	ADC_GetResult16:
 520              	.LFB13:
 723:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 724:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 725:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 24


 726:.\Generated_Source\PSoC4/ADC.c **** *
 727:.\Generated_Source\PSoC4/ADC.c **** * \brief Gets the data available in the channel result data register
 728:.\Generated_Source\PSoC4/ADC.c **** *
 729:.\Generated_Source\PSoC4/ADC.c **** * \param chan The ADC channel to read the result from. The first 
 730:.\Generated_Source\PSoC4/ADC.c **** * channel is 0 and the injection channel if enabled is the number of valid 
 731:.\Generated_Source\PSoC4/ADC.c **** * channels.
 732:.\Generated_Source\PSoC4/ADC.c **** *
 733:.\Generated_Source\PSoC4/ADC.c **** * \return Returns converted data as a signed 16-bit integer.
 734:.\Generated_Source\PSoC4/ADC.c **** * 
 735:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 736:.\Generated_Source\PSoC4/ADC.c **** * 
 737:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 738:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_GetResult16
 739:.\Generated_Source\PSoC4/ADC.c **** *
 740:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 741:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 742:.\Generated_Source\PSoC4/ADC.c **** {
 521              		.loc 1 742 0
 522              		.cfi_startproc
 523              	.LVL37:
 524 0000 10B5     		push	{r4, lr}
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 4, -8
 527              		.cfi_offset 14, -4
 528 0002 041E     		sub	r4, r0, #0
 743:.\Generated_Source\PSoC4/ADC.c ****     uint32 adcResult;
 744:.\Generated_Source\PSoC4/ADC.c ****     
 745:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 746:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 529              		.loc 1 746 0
 530 0004 022C     		cmp	r4, #2
 531 0006 02D9     		bls	.L46
 532              		.loc 1 746 0 is_stmt 0 discriminator 1
 533 0008 0020     		mov	r0, #0
 534              	.LVL38:
 535 000a FFF7FEFF 		bl	CyHalt
 536              	.LVL39:
 537              	.L46:
 747:.\Generated_Source\PSoC4/ADC.c **** 
 748:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_TOTAL_CHANNELS_NUM > chan)
 538              		.loc 1 748 0 is_stmt 1
 539 000e 022C     		cmp	r4, #2
 540 0010 07D8     		bhi	.L48
 749:.\Generated_Source\PSoC4/ADC.c ****     {   
 750:.\Generated_Source\PSoC4/ADC.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 541              		.loc 1 750 0
 542 0012 A400     		lsl	r4, r4, #2
 543              	.LVL40:
 544 0014 044B     		ldr	r3, .L49
 545 0016 9C46     		mov	ip, r3
 546 0018 6444     		add	r4, r4, ip
 547 001a 2068     		ldr	r0, [r4]
 548 001c 0004     		lsl	r0, r0, #16
 549 001e 000C     		lsr	r0, r0, #16
 550              	.LVL41:
 551 0020 00E0     		b	.L47
 552              	.LVL42:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 25


 553              	.L48:
 751:.\Generated_Source\PSoC4/ADC.c ****             ADC_RESULT_MASK; 
 752:.\Generated_Source\PSoC4/ADC.c ****     }
 753:.\Generated_Source\PSoC4/ADC.c ****     else
 754:.\Generated_Source\PSoC4/ADC.c ****     {
 755:.\Generated_Source\PSoC4/ADC.c **** 		adcResult = 0u;
 554              		.loc 1 755 0
 555 0022 0020     		mov	r0, #0
 556              	.LVL43:
 557              	.L47:
 756:.\Generated_Source\PSoC4/ADC.c ****     }
 757:.\Generated_Source\PSoC4/ADC.c ****     
 758:.\Generated_Source\PSoC4/ADC.c ****     return (int16) adcResult;
 558              		.loc 1 758 0
 559 0024 00B2     		sxth	r0, r0
 560              	.LVL44:
 759:.\Generated_Source\PSoC4/ADC.c **** }
 561              		.loc 1 759 0
 562              		@ sp needed
 563 0026 10BD     		pop	{r4, pc}
 564              	.L50:
 565              		.align	2
 566              	.L49:
 567 0028 80013A40 		.word	1077543296
 568              		.cfi_endproc
 569              	.LFE13:
 570              		.size	ADC_GetResult16, .-ADC_GetResult16
 571              		.section	.text.ADC_GetResult32,"ax",%progbits
 572              		.align	2
 573              		.global	ADC_GetResult32
 574              		.code	16
 575              		.thumb_func
 576              		.type	ADC_GetResult32, %function
 577              	ADC_GetResult32:
 578              	.LFB14:
 760:.\Generated_Source\PSoC4/ADC.c **** 
 761:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 762:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult32
 763:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 764:.\Generated_Source\PSoC4/ADC.c **** *
 765:.\Generated_Source\PSoC4/ADC.c **** * \brief Gets the data available in the channel result data register. 
 766:.\Generated_Source\PSoC4/ADC.c **** *
 767:.\Generated_Source\PSoC4/ADC.c **** * \param chan The ADC channel to read the result from. The first 
 768:.\Generated_Source\PSoC4/ADC.c **** * channel is 0 and the injection channel if enabled is the number of valid 
 769:.\Generated_Source\PSoC4/ADC.c **** * channels.
 770:.\Generated_Source\PSoC4/ADC.c **** *
 771:.\Generated_Source\PSoC4/ADC.c **** * \return Returns converted data as a signed 32-bit integer.
 772:.\Generated_Source\PSoC4/ADC.c **** * 
 773:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 774:.\Generated_Source\PSoC4/ADC.c **** *
 775:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 776:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_GetResult32
 777:.\Generated_Source\PSoC4/ADC.c **** *
 778:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 779:.\Generated_Source\PSoC4/ADC.c **** int32 ADC_GetResult32(uint32 chan)
 780:.\Generated_Source\PSoC4/ADC.c **** {
 579              		.loc 1 780 0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 26


 580              		.cfi_startproc
 581              	.LVL45:
 582 0000 38B5     		push	{r3, r4, r5, lr}
 583              		.cfi_def_cfa_offset 16
 584              		.cfi_offset 3, -16
 585              		.cfi_offset 4, -12
 586              		.cfi_offset 5, -8
 587              		.cfi_offset 14, -4
 588 0002 051E     		sub	r5, r0, #0
 781:.\Generated_Source\PSoC4/ADC.c ****     uint32 adcResult;
 782:.\Generated_Source\PSoC4/ADC.c ****     int16 adcResult16;
 783:.\Generated_Source\PSoC4/ADC.c ****     int32 finalResult;
 784:.\Generated_Source\PSoC4/ADC.c ****     
 785:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 786:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 589              		.loc 1 786 0
 590 0004 022D     		cmp	r5, #2
 591 0006 02D9     		bls	.L52
 592              		.loc 1 786 0 is_stmt 0 discriminator 1
 593 0008 0020     		mov	r0, #0
 594              	.LVL46:
 595 000a FFF7FEFF 		bl	CyHalt
 596              	.LVL47:
 597              	.L52:
 787:.\Generated_Source\PSoC4/ADC.c **** 
 788:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_TOTAL_CHANNELS_NUM > chan)
 598              		.loc 1 788 0 is_stmt 1
 599 000e 022D     		cmp	r5, #2
 600 0010 07D8     		bhi	.L56
 789:.\Generated_Source\PSoC4/ADC.c ****     {
 790:.\Generated_Source\PSoC4/ADC.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 601              		.loc 1 790 0
 602 0012 AB00     		lsl	r3, r5, #2
 603 0014 084A     		ldr	r2, .L57
 604 0016 9446     		mov	ip, r2
 605 0018 6344     		add	r3, r3, ip
 606 001a 1C68     		ldr	r4, [r3]
 607 001c 2404     		lsl	r4, r4, #16
 608 001e 240C     		lsr	r4, r4, #16
 609              	.LVL48:
 610 0020 00E0     		b	.L53
 611              	.LVL49:
 612              	.L56:
 791:.\Generated_Source\PSoC4/ADC.c ****             ADC_RESULT_MASK;
 792:.\Generated_Source\PSoC4/ADC.c ****     }
 793:.\Generated_Source\PSoC4/ADC.c ****     else
 794:.\Generated_Source\PSoC4/ADC.c ****     {
 795:.\Generated_Source\PSoC4/ADC.c ****         adcResult = 0u;
 613              		.loc 1 795 0
 614 0022 0024     		mov	r4, #0
 615              	.L53:
 616              	.LVL50:
 796:.\Generated_Source\PSoC4/ADC.c ****     }
 797:.\Generated_Source\PSoC4/ADC.c ****     /* Sign extend if channel is signed format */
 798:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_IsChannelSigned(chan) == 1)
 617              		.loc 1 798 0
 618 0024 281C     		mov	r0, r5
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 27


 619 0026 FFF7FEFF 		bl	ADC_IsChannelSigned
 620              	.LVL51:
 621 002a 0128     		cmp	r0, #1
 622 002c 01D1     		bne	.L54
 623              	.LVL52:
 799:.\Generated_Source\PSoC4/ADC.c ****     {
 800:.\Generated_Source\PSoC4/ADC.c ****         adcResult16 = (int16) adcResult;
 801:.\Generated_Source\PSoC4/ADC.c ****         finalResult = (int32) adcResult16;
 624              		.loc 1 801 0
 625 002e 20B2     		sxth	r0, r4
 626              	.LVL53:
 627 0030 00E0     		b	.L55
 628              	.LVL54:
 629              	.L54:
 802:.\Generated_Source\PSoC4/ADC.c ****     }
 803:.\Generated_Source\PSoC4/ADC.c ****     else
 804:.\Generated_Source\PSoC4/ADC.c ****     {
 805:.\Generated_Source\PSoC4/ADC.c ****         finalResult = (int32) adcResult;
 630              		.loc 1 805 0
 631 0032 201C     		mov	r0, r4
 632              	.LVL55:
 633              	.L55:
 806:.\Generated_Source\PSoC4/ADC.c ****     }
 807:.\Generated_Source\PSoC4/ADC.c ****     return finalResult;
 808:.\Generated_Source\PSoC4/ADC.c **** }
 634              		.loc 1 808 0
 635              		@ sp needed
 636              	.LVL56:
 637              	.LVL57:
 638 0034 38BD     		pop	{r3, r4, r5, pc}
 639              	.L58:
 640 0036 C046     		.align	2
 641              	.L57:
 642 0038 80013A40 		.word	1077543296
 643              		.cfi_endproc
 644              	.LFE14:
 645              		.size	ADC_GetResult32, .-ADC_GetResult32
 646              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 647              		.align	2
 648              		.global	ADC_SetLowLimit
 649              		.code	16
 650              		.thumb_func
 651              		.type	ADC_SetLowLimit, %function
 652              	ADC_SetLowLimit:
 653              	.LFB15:
 809:.\Generated_Source\PSoC4/ADC.c **** 
 810:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 811:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 812:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 813:.\Generated_Source\PSoC4/ADC.c **** *
 814:.\Generated_Source\PSoC4/ADC.c **** * \brief Sets the low limit parameter for a limit condition.
 815:.\Generated_Source\PSoC4/ADC.c **** *
 816:.\Generated_Source\PSoC4/ADC.c **** * \param lowLimit The low limit for a limit condition.
 817:.\Generated_Source\PSoC4/ADC.c **** *
 818:.\Generated_Source\PSoC4/ADC.c **** * \return None
 819:.\Generated_Source\PSoC4/ADC.c **** * 
 820:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 28


 821:.\Generated_Source\PSoC4/ADC.c **** *
 822:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 823:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetLowLimit
 824:.\Generated_Source\PSoC4/ADC.c **** *
 825:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 826:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 827:.\Generated_Source\PSoC4/ADC.c **** {   
 654              		.loc 1 827 0
 655              		.cfi_startproc
 656              	.LVL58:
 828:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_SAR_RANGE_THRES_RANGE_LOW_MSK);
 657              		.loc 1 828 0
 658 0000 054A     		ldr	r2, .L60
 659 0002 1368     		ldr	r3, [r2]
 660 0004 1B0C     		lsr	r3, r3, #16
 661 0006 1B04     		lsl	r3, r3, #16
 662 0008 1360     		str	r3, [r2]
 829:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_RANGE_THRES_RANGE_LOW_MSK;
 663              		.loc 1 829 0
 664 000a 1368     		ldr	r3, [r2]
 665 000c 0004     		lsl	r0, r0, #16
 666              	.LVL59:
 667 000e 000C     		lsr	r0, r0, #16
 668 0010 1843     		orr	r0, r3
 669 0012 1060     		str	r0, [r2]
 830:.\Generated_Source\PSoC4/ADC.c ****     return;
 831:.\Generated_Source\PSoC4/ADC.c **** }
 670              		.loc 1 831 0
 671              		@ sp needed
 672 0014 7047     		bx	lr
 673              	.L61:
 674 0016 C046     		.align	2
 675              	.L60:
 676 0018 18003A40 		.word	1077542936
 677              		.cfi_endproc
 678              	.LFE15:
 679              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 680              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 681              		.align	2
 682              		.global	ADC_SetHighLimit
 683              		.code	16
 684              		.thumb_func
 685              		.type	ADC_SetHighLimit, %function
 686              	ADC_SetHighLimit:
 687              	.LFB16:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 834:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 835:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 836:.\Generated_Source\PSoC4/ADC.c **** *
 837:.\Generated_Source\PSoC4/ADC.c **** * \brief Sets the high limit parameter for a limit condition.
 838:.\Generated_Source\PSoC4/ADC.c **** *
 839:.\Generated_Source\PSoC4/ADC.c **** * \param highLimit The high limit for a limit condition.
 840:.\Generated_Source\PSoC4/ADC.c **** *
 841:.\Generated_Source\PSoC4/ADC.c **** * \return None
 842:.\Generated_Source\PSoC4/ADC.c **** * 
 843:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 29


 844:.\Generated_Source\PSoC4/ADC.c **** * 
 845:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 846:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetHighLimit
 847:.\Generated_Source\PSoC4/ADC.c **** *
 848:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 850:.\Generated_Source\PSoC4/ADC.c **** {   
 688              		.loc 1 850 0
 689              		.cfi_startproc
 690              	.LVL60:
 851:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_SAR_RANGE_THRES_RANGE_HIGH_MSK);
 691              		.loc 1 851 0
 692 0000 044A     		ldr	r2, .L63
 693 0002 1368     		ldr	r3, [r2]
 694 0004 1B04     		lsl	r3, r3, #16
 695 0006 1B0C     		lsr	r3, r3, #16
 696 0008 1360     		str	r3, [r2]
 852:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_RANGE_THRES_RANGE_HIGH_SHFT);
 697              		.loc 1 852 0
 698 000a 1368     		ldr	r3, [r2]
 699 000c 0004     		lsl	r0, r0, #16
 700              	.LVL61:
 701 000e 1843     		orr	r0, r3
 702 0010 1060     		str	r0, [r2]
 853:.\Generated_Source\PSoC4/ADC.c ****     return;
 854:.\Generated_Source\PSoC4/ADC.c **** }
 703              		.loc 1 854 0
 704              		@ sp needed
 705 0012 7047     		bx	lr
 706              	.L64:
 707              		.align	2
 708              	.L63:
 709 0014 18003A40 		.word	1077542936
 710              		.cfi_endproc
 711              	.LFE16:
 712              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 713              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 714              		.align	2
 715              		.global	ADC_SetLimitMask
 716              		.code	16
 717              		.thumb_func
 718              		.type	ADC_SetLimitMask, %function
 719              	ADC_SetLimitMask:
 720              	.LFB17:
 855:.\Generated_Source\PSoC4/ADC.c **** 
 856:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 857:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 858:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 859:.\Generated_Source\PSoC4/ADC.c **** *
 860:.\Generated_Source\PSoC4/ADC.c **** * \brief Sets the channel limit condition mask.
 861:.\Generated_Source\PSoC4/ADC.c **** *
 862:.\Generated_Source\PSoC4/ADC.c **** *
 863:.\Generated_Source\PSoC4/ADC.c **** * \param mask Sets which channels that may cause a limit condition interrupt. 
 864:.\Generated_Source\PSoC4/ADC.c **** * Setting bits for channels that do not exist will have no effect. For example, 
 865:.\Generated_Source\PSoC4/ADC.c **** * if only 6  channels were enabled, setting a mask of 0x0103 would only enable 
 866:.\Generated_Source\PSoC4/ADC.c **** * the last two channels (0 and 1).
 867:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 30


 868:.\Generated_Source\PSoC4/ADC.c **** * \return None
 869:.\Generated_Source\PSoC4/ADC.c **** * 
 870:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 871:.\Generated_Source\PSoC4/ADC.c **** *
 872:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 873:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetLimitMask
 874:.\Generated_Source\PSoC4/ADC.c **** *
 875:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 876:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 877:.\Generated_Source\PSoC4/ADC.c **** {   
 721              		.loc 1 877 0
 722              		.cfi_startproc
 723              	.LVL62:
 878:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 724              		.loc 1 878 0
 725 0000 0723     		mov	r3, #7
 726 0002 1840     		and	r0, r3
 727              	.LVL63:
 728 0004 014B     		ldr	r3, .L66
 729 0006 1860     		str	r0, [r3]
 879:.\Generated_Source\PSoC4/ADC.c ****  
 880:.\Generated_Source\PSoC4/ADC.c ****     return;
 881:.\Generated_Source\PSoC4/ADC.c **** }
 730              		.loc 1 881 0
 731              		@ sp needed
 732 0008 7047     		bx	lr
 733              	.L67:
 734 000a C046     		.align	2
 735              	.L66:
 736 000c 38023A40 		.word	1077543480
 737              		.cfi_endproc
 738              	.LFE17:
 739              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 740              		.section	.text.ADC_SetSatMask,"ax",%progbits
 741              		.align	2
 742              		.global	ADC_SetSatMask
 743              		.code	16
 744              		.thumb_func
 745              		.type	ADC_SetSatMask, %function
 746              	ADC_SetSatMask:
 747              	.LFB18:
 882:.\Generated_Source\PSoC4/ADC.c **** 
 883:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 884:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 885:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 886:.\Generated_Source\PSoC4/ADC.c **** *
 887:.\Generated_Source\PSoC4/ADC.c **** * \brief Sets the channel saturation event mask.
 888:.\Generated_Source\PSoC4/ADC.c **** *
 889:.\Generated_Source\PSoC4/ADC.c **** * \param mask Sets which channels that may cause a saturation event interrupt. 
 890:.\Generated_Source\PSoC4/ADC.c **** * Setting bits for channels that do not exist will have no effect. For example, 
 891:.\Generated_Source\PSoC4/ADC.c **** * if only 8 channels were enabled, setting a mask of 0x01C0 would only enable two 
 892:.\Generated_Source\PSoC4/ADC.c **** * channels (6 and 7).
 893:.\Generated_Source\PSoC4/ADC.c **** *
 894:.\Generated_Source\PSoC4/ADC.c **** * \return None
 895:.\Generated_Source\PSoC4/ADC.c **** * 
 896:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 897:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 31


 898:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 899:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetSatMask
 900:.\Generated_Source\PSoC4/ADC.c **** *
 901:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 902:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 903:.\Generated_Source\PSoC4/ADC.c **** {   
 748              		.loc 1 903 0
 749              		.cfi_startproc
 750              	.LVL64:
 904:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;    
 751              		.loc 1 904 0
 752 0000 0723     		mov	r3, #7
 753 0002 1840     		and	r0, r3
 754              	.LVL65:
 755 0004 014B     		ldr	r3, .L69
 756 0006 1860     		str	r0, [r3]
 905:.\Generated_Source\PSoC4/ADC.c ****     return;
 906:.\Generated_Source\PSoC4/ADC.c **** }
 757              		.loc 1 906 0
 758              		@ sp needed
 759 0008 7047     		bx	lr
 760              	.L70:
 761 000a C046     		.align	2
 762              	.L69:
 763 000c 28023A40 		.word	1077543464
 764              		.cfi_endproc
 765              	.LFE18:
 766              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 767              		.section	.text.ADC_SetOffset,"ax",%progbits
 768              		.align	2
 769              		.global	ADC_SetOffset
 770              		.code	16
 771              		.thumb_func
 772              		.type	ADC_SetOffset, %function
 773              	ADC_SetOffset:
 774              	.LFB19:
 907:.\Generated_Source\PSoC4/ADC.c **** 
 908:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 909:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 910:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 911:.\Generated_Source\PSoC4/ADC.c **** *
 912:.\Generated_Source\PSoC4/ADC.c **** * \brief Sets the ADC offset which is used by the functions 
 913:.\Generated_Source\PSoC4/ADC.c **** * ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and 
 914:.\Generated_Source\PSoC4/ADC.c **** * ADC_CountsTo_Volts to subtract the offset from the given reading 
 915:.\Generated_Source\PSoC4/ADC.c **** * before calculating the voltage conversion.
 916:.\Generated_Source\PSoC4/ADC.c **** *
 917:.\Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number. 
 918:.\Generated_Source\PSoC4/ADC.c **** * 
 919:.\Generated_Source\PSoC4/ADC.c **** * \param offset This value is a measured value when the inputs are shorted or 
 920:.\Generated_Source\PSoC4/ADC.c **** * connected to the same input voltage.
 921:.\Generated_Source\PSoC4/ADC.c **** *
 922:.\Generated_Source\PSoC4/ADC.c **** * \return None
 923:.\Generated_Source\PSoC4/ADC.c **** * 
 924:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 925:.\Generated_Source\PSoC4/ADC.c **** *
 926:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 927:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetOffset
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 32


 928:.\Generated_Source\PSoC4/ADC.c **** *
 929:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 930:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 931:.\Generated_Source\PSoC4/ADC.c **** {   
 775              		.loc 1 931 0
 776              		.cfi_startproc
 777              	.LVL66:
 778 0000 38B5     		push	{r3, r4, r5, lr}
 779              		.cfi_def_cfa_offset 16
 780              		.cfi_offset 3, -16
 781              		.cfi_offset 4, -12
 782              		.cfi_offset 5, -8
 783              		.cfi_offset 14, -4
 784 0002 041C     		mov	r4, r0
 785 0004 0D1C     		mov	r5, r1
 932:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 933:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 786              		.loc 1 933 0
 787 0006 0228     		cmp	r0, #2
 788 0008 02D9     		bls	.L72
 789              		.loc 1 933 0 is_stmt 0 discriminator 1
 790 000a 0020     		mov	r0, #0
 791              	.LVL67:
 792 000c FFF7FEFF 		bl	CyHalt
 793              	.LVL68:
 794              	.L72:
 934:.\Generated_Source\PSoC4/ADC.c **** 
 935:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[ADC_allConfigs[ADC_currentConfig].channelBase + chan] = offset;
 795              		.loc 1 935 0 is_stmt 1
 796 0010 054B     		ldr	r3, .L73
 797 0012 1A68     		ldr	r2, [r3]
 798 0014 D300     		lsl	r3, r2, #3
 799 0016 9B1A     		sub	r3, r3, r2
 800 0018 DB00     		lsl	r3, r3, #3
 801 001a 044A     		ldr	r2, .L73+4
 802 001c 9B58     		ldr	r3, [r3, r2]
 803 001e 1C19     		add	r4, r3, r4
 804              	.LVL69:
 805 0020 6400     		lsl	r4, r4, #1
 806 0022 034B     		ldr	r3, .L73+8
 807 0024 E552     		strh	r5, [r4, r3]
 936:.\Generated_Source\PSoC4/ADC.c ****     return;
 937:.\Generated_Source\PSoC4/ADC.c **** }
 808              		.loc 1 937 0
 809              		@ sp needed
 810 0026 38BD     		pop	{r3, r4, r5, pc}
 811              	.L74:
 812              		.align	2
 813              	.L73:
 814 0028 00000000 		.word	.LANCHOR0
 815 002c 00000000 		.word	ADC_allConfigs
 816 0030 00000000 		.word	ADC_offset
 817              		.cfi_endproc
 818              	.LFE19:
 819              		.size	ADC_SetOffset, .-ADC_SetOffset
 820              		.section	.text.ADC_SetGain,"ax",%progbits
 821              		.align	2
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 33


 822              		.global	ADC_SetGain
 823              		.code	16
 824              		.thumb_func
 825              		.type	ADC_SetGain, %function
 826              	ADC_SetGain:
 827              	.LFB20:
 938:.\Generated_Source\PSoC4/ADC.c **** 
 939:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 940:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 941:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 942:.\Generated_Source\PSoC4/ADC.c **** *
 943:.\Generated_Source\PSoC4/ADC.c **** * \brief Sets the ADC gain in counts per 10 volt for the voltage 
 944:.\Generated_Source\PSoC4/ADC.c **** * conversion functions below. This value is set by default by the reference and 
 945:.\Generated_Source\PSoC4/ADC.c **** * input range settings. It should only be used to further calibrate the 
 946:.\Generated_Source\PSoC4/ADC.c **** * ADC with a known input or if an external reference is used. 
 947:.\Generated_Source\PSoC4/ADC.c **** * Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts 
 948:.\Generated_Source\PSoC4/ADC.c **** * and ADC_CountsTo_Volts functions by supplying the correct 
 949:.\Generated_Source\PSoC4/ADC.c **** * conversion between ADC counts and voltage.
 950:.\Generated_Source\PSoC4/ADC.c **** * 
 951:.\Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.
 952:.\Generated_Source\PSoC4/ADC.c **** * 
 953:.\Generated_Source\PSoC4/ADC.c **** * \param adcGain ADC gain in counts per 10 volt.
 954:.\Generated_Source\PSoC4/ADC.c **** *
 955:.\Generated_Source\PSoC4/ADC.c **** * \return None
 956:.\Generated_Source\PSoC4/ADC.c **** * 
 957:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 958:.\Generated_Source\PSoC4/ADC.c **** *
 959:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 960:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetGain
 961:.\Generated_Source\PSoC4/ADC.c **** *
 962:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 963:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 964:.\Generated_Source\PSoC4/ADC.c **** {   
 828              		.loc 1 964 0
 829              		.cfi_startproc
 830              	.LVL70:
 831 0000 38B5     		push	{r3, r4, r5, lr}
 832              		.cfi_def_cfa_offset 16
 833              		.cfi_offset 3, -16
 834              		.cfi_offset 4, -12
 835              		.cfi_offset 5, -8
 836              		.cfi_offset 14, -4
 837 0002 041C     		mov	r4, r0
 838 0004 0D1C     		mov	r5, r1
 965:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 966:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 839              		.loc 1 966 0
 840 0006 0228     		cmp	r0, #2
 841 0008 02D9     		bls	.L76
 842              		.loc 1 966 0 is_stmt 0 discriminator 1
 843 000a 0020     		mov	r0, #0
 844              	.LVL71:
 845 000c FFF7FEFF 		bl	CyHalt
 846              	.LVL72:
 847              	.L76:
 967:.\Generated_Source\PSoC4/ADC.c **** 
 968:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[ADC_allConfigs[ADC_currentConfig].channelBase + chan]
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 34


 848              		.loc 1 968 0 is_stmt 1
 849 0010 054B     		ldr	r3, .L77
 850 0012 1A68     		ldr	r2, [r3]
 851 0014 D300     		lsl	r3, r2, #3
 852 0016 9B1A     		sub	r3, r3, r2
 853 0018 DB00     		lsl	r3, r3, #3
 854 001a 044A     		ldr	r2, .L77+4
 855 001c 9B58     		ldr	r3, [r3, r2]
 856 001e 1C19     		add	r4, r3, r4
 857              	.LVL73:
 969:.\Generated_Source\PSoC4/ADC.c **** 	= adcGain;
 858              		.loc 1 969 0
 859 0020 A400     		lsl	r4, r4, #2
 860 0022 034B     		ldr	r3, .L77+8
 861 0024 E550     		str	r5, [r4, r3]
 970:.\Generated_Source\PSoC4/ADC.c ****     return;
 971:.\Generated_Source\PSoC4/ADC.c **** }
 862              		.loc 1 971 0
 863              		@ sp needed
 864              	.LVL74:
 865 0026 38BD     		pop	{r3, r4, r5, pc}
 866              	.L78:
 867              		.align	2
 868              	.L77:
 869 0028 00000000 		.word	.LANCHOR0
 870 002c 00000000 		.word	ADC_allConfigs
 871 0030 00000000 		.word	ADC_countsPer10Volt
 872              		.cfi_endproc
 873              	.LFE20:
 874              		.size	ADC_SetGain, .-ADC_SetGain
 875              		.global	__aeabi_uidiv
 876              		.global	__aeabi_idiv
 877              		.global	__aeabi_i2f
 878              		.global	__aeabi_fmul
 879              		.global	__aeabi_fdiv
 880              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 881              		.align	2
 882              		.global	ADC_CountsTo_Volts
 883              		.code	16
 884              		.thumb_func
 885              		.type	ADC_CountsTo_Volts, %function
 886              	ADC_CountsTo_Volts:
 887              	.LFB21:
 972:.\Generated_Source\PSoC4/ADC.c **** 
 973:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 974:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_CountsTo_Volts
 975:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 976:.\Generated_Source\PSoC4/ADC.c **** *
 977:.\Generated_Source\PSoC4/ADC.c **** * \brief Converts the ADC output to Volts as a floating point number. For 
 978:.\Generated_Source\PSoC4/ADC.c **** * example, if the ADC measured 0.534 volts, the return value would be 0.534. The 
 979:.\Generated_Source\PSoC4/ADC.c **** * calculation of voltage depends on the value of the voltage reference. When the 
 980:.\Generated_Source\PSoC4/ADC.c **** * Vref is based on Vdda, the value used for Vdda is set for the project in the 
 981:.\Generated_Source\PSoC4/ADC.c **** * System tab of the DWR.
 982:.\Generated_Source\PSoC4/ADC.c **** *
 983:.\Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.   
 984:.\Generated_Source\PSoC4/ADC.c **** *
 985:.\Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 35


 986:.\Generated_Source\PSoC4/ADC.c **** *
 987:.\Generated_Source\PSoC4/ADC.c **** * \return Result in Volts.
 988:.\Generated_Source\PSoC4/ADC.c **** * 
 989:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 990:.\Generated_Source\PSoC4/ADC.c **** *
 991:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 992:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_CountsTo_Volts
 993:.\Generated_Source\PSoC4/ADC.c **** *
 994:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 995:.\Generated_Source\PSoC4/ADC.c **** float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 996:.\Generated_Source\PSoC4/ADC.c **** {   
 888              		.loc 1 996 0
 889              		.cfi_startproc
 890              	.LVL75:
 891 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 892              		.cfi_def_cfa_offset 24
 893              		.cfi_offset 3, -24
 894              		.cfi_offset 4, -20
 895              		.cfi_offset 5, -16
 896              		.cfi_offset 6, -12
 897              		.cfi_offset 7, -8
 898              		.cfi_offset 14, -4
 899 0002 061C     		mov	r6, r0
 900 0004 0C1C     		mov	r4, r1
 901              	.LVL76:
 997:.\Generated_Source\PSoC4/ADC.c ****     float32 result_Volts = 0.0f;
 998:.\Generated_Source\PSoC4/ADC.c **** 	uint32 temp;
 999:.\Generated_Source\PSoC4/ADC.c **** 	uint32 averageAdcSamplesDiv;
1000:.\Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1001:.\Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 902              		.loc 1 1001 0
 903 0006 264B     		ldr	r3, .L85
 904 0008 1968     		ldr	r1, [r3]
 905              	.LVL77:
 906 000a 264F     		ldr	r7, .L85+4
 907 000c CA00     		lsl	r2, r1, #3
 908 000e 501A     		sub	r0, r2, r1
 909              	.LVL78:
 910 0010 C000     		lsl	r0, r0, #3
 911 0012 C559     		ldr	r5, [r0, r7]
 912 0014 AD19     		add	r5, r5, r6
 913              	.LVL79:
1002:.\Generated_Source\PSoC4/ADC.c **** 	
1003:.\Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 914              		.loc 1 1003 0
 915 0016 3B18     		add	r3, r7, r0
 916 0018 DB68     		ldr	r3, [r3, #12]
 917 001a 9B07     		lsl	r3, r3, #30
 918 001c 3DD4     		bmi	.L84
1004:.\Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
1005:.\Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1006:.\Generated_Source\PSoC4/ADC.c **** 	{
1007:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
1008:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 919              		.loc 1 1008 0
 920 001e 022E     		cmp	r6, #2
 921 0020 02D9     		bls	.L81
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 36


 922              		.loc 1 1008 0 is_stmt 0 discriminator 1
 923 0022 0020     		mov	r0, #0
 924 0024 FFF7FEFF 		bl	CyHalt
 925              	.LVL80:
 926              	.L81:
1009:.\Generated_Source\PSoC4/ADC.c **** 
1010:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
1011:.\Generated_Source\PSoC4/ADC.c **** 		if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 927              		.loc 1 1011 0 is_stmt 1
 928 0028 1D4B     		ldr	r3, .L85
 929 002a 1A68     		ldr	r2, [r3]
 930 002c D300     		lsl	r3, r2, #3
 931 002e 9B1A     		sub	r3, r3, r2
 932 0030 DB00     		lsl	r3, r3, #3
 933 0032 1C4A     		ldr	r2, .L85+4
 934 0034 D318     		add	r3, r2, r3
 935 0036 DB68     		ldr	r3, [r3, #12]
 936 0038 1A06     		lsl	r2, r3, #24
 937 003a 19D4     		bmi	.L82
1012:.\Generated_Source\PSoC4/ADC.c **** 			& ADC_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK) 
1013:.\Generated_Source\PSoC4/ADC.c **** 			!= ADC_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1014:.\Generated_Source\PSoC4/ADC.c **** 		{
1015:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[rawChannel] & ADC_SAR_CHAN_CONFIG_AVG_EN_MSK) != 0u)
 938              		.loc 1 1015 0
 939 003c AA00     		lsl	r2, r5, #2
 940 003e 1A49     		ldr	r1, .L85+8
 941 0040 5258     		ldr	r2, [r2, r1]
 942 0042 5205     		lsl	r2, r2, #21
 943 0044 14D5     		bpl	.L82
1016:.\Generated_Source\PSoC4/ADC.c ****             {
1017:.\Generated_Source\PSoC4/ADC.c ****                 /* Divide by 2^(AVG_CNT + 1) */
1018:.\Generated_Source\PSoC4/ADC.c **** 				averageAdcSamplesDiv = ((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
1019:.\Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_AVG_CNT_MSK) 
 944              		.loc 1 1019 0
 945 0046 5B06     		lsl	r3, r3, #25
1018:.\Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_AVG_CNT_MSK) 
 946              		.loc 1 1018 0
 947 0048 5B0F     		lsr	r3, r3, #29
 948              	.LVL81:
1020:.\Generated_Source\PSoC4/ADC.c **** 					>> ADC_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
1021:.\Generated_Source\PSoC4/ADC.c ****                 averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 949              		.loc 1 1021 0
 950 004a 0133     		add	r3, r3, #1
 951              	.LVL82:
 952 004c 0127     		mov	r7, #1
 953 004e 9F40     		lsl	r7, r7, r3
 954              	.LVL83:
1022:.\Generated_Source\PSoC4/ADC.c ****                 
1023:.\Generated_Source\PSoC4/ADC.c ****                 /* If unsigned format, prevent sign extension */
1024:.\Generated_Source\PSoC4/ADC.c ****                 if(0 == ADC_IsChannelSigned(chan))
 955              		.loc 1 1024 0
 956 0050 301C     		mov	r0, r6
 957 0052 FFF7FEFF 		bl	ADC_IsChannelSigned
 958              	.LVL84:
 959 0056 0028     		cmp	r0, #0
 960 0058 05D1     		bne	.L83
1025:.\Generated_Source\PSoC4/ADC.c ****                 {
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 37


1026:.\Generated_Source\PSoC4/ADC.c **** 					temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 961              		.loc 1 1026 0
 962 005a A0B2     		uxth	r0, r4
 963 005c 391C     		mov	r1, r7
 964 005e FFF7FEFF 		bl	__aeabi_uidiv
 965              	.LVL85:
1027:.\Generated_Source\PSoC4/ADC.c ****                     adcCounts = (int16) temp;
 966              		.loc 1 1027 0
 967 0062 04B2     		sxth	r4, r0
 968              	.LVL86:
 969 0064 04E0     		b	.L82
 970              	.LVL87:
 971              	.L83:
1028:.\Generated_Source\PSoC4/ADC.c ****                 }
1029:.\Generated_Source\PSoC4/ADC.c ****                 else
1030:.\Generated_Source\PSoC4/ADC.c ****                 {
1031:.\Generated_Source\PSoC4/ADC.c ****                     adcCounts /= (int16) averageAdcSamplesDiv;
 972              		.loc 1 1031 0
 973 0066 39B2     		sxth	r1, r7
 974 0068 201C     		mov	r0, r4
 975 006a FFF7FEFF 		bl	__aeabi_idiv
 976              	.LVL88:
 977 006e 04B2     		sxth	r4, r0
 978              	.LVL89:
 979              	.L82:
1032:.\Generated_Source\PSoC4/ADC.c ****                 }
1033:.\Generated_Source\PSoC4/ADC.c ****             }
1034:.\Generated_Source\PSoC4/ADC.c **** 		}
1035:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
1036:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[rawChannel];
 980              		.loc 1 1036 0
 981 0070 6A00     		lsl	r2, r5, #1
 982 0072 0E4B     		ldr	r3, .L85+12
 983 0074 D05A     		ldrh	r0, [r2, r3]
 984 0076 201A     		sub	r0, r4, r0
 985 0078 00B2     		sxth	r0, r0
 986              	.LVL90:
1037:.\Generated_Source\PSoC4/ADC.c **** 
1038:.\Generated_Source\PSoC4/ADC.c ****         result_Volts = ((float32)adcCounts * ADC_10V_COUNTS) 
 987              		.loc 1 1038 0
 988 007a FFF7FEFF 		bl	__aeabi_i2f
 989              	.LVL91:
 990 007e 0C49     		ldr	r1, .L85+16
 991 0080 FFF7FEFF 		bl	__aeabi_fmul
 992              	.LVL92:
 993 0084 041C     		add	r4, r0, #0
1039:.\Generated_Source\PSoC4/ADC.c **** 			/ (float32)ADC_countsPer10Volt[rawChannel];
 994              		.loc 1 1039 0
 995 0086 AD00     		lsl	r5, r5, #2
 996              	.LVL93:
 997 0088 0A4B     		ldr	r3, .L85+20
 998 008a E858     		ldr	r0, [r5, r3]
 999 008c FFF7FEFF 		bl	__aeabi_i2f
 1000              	.LVL94:
 1001 0090 011C     		add	r1, r0, #0
1038:.\Generated_Source\PSoC4/ADC.c **** 			/ (float32)ADC_countsPer10Volt[rawChannel];
 1002              		.loc 1 1038 0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 38


 1003 0092 201C     		add	r0, r4, #0
 1004 0094 FFF7FEFF 		bl	__aeabi_fdiv
 1005              	.LVL95:
 1006 0098 00E0     		b	.L80
 1007              	.LVL96:
 1008              	.L84:
 997:.\Generated_Source\PSoC4/ADC.c **** 	uint32 temp;
 1009              		.loc 1 997 0
 1010 009a 0020     		mov	r0, #0
 1011              	.LVL97:
 1012              	.L80:
1040:.\Generated_Source\PSoC4/ADC.c **** 	}
1041:.\Generated_Source\PSoC4/ADC.c **** 	return result_Volts;
1042:.\Generated_Source\PSoC4/ADC.c **** }
 1013              		.loc 1 1042 0
 1014              		@ sp needed
 1015              	.LVL98:
 1016 009c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1017              	.L86:
 1018 009e C046     		.align	2
 1019              	.L85:
 1020 00a0 00000000 		.word	.LANCHOR0
 1021 00a4 00000000 		.word	ADC_allConfigs
 1022 00a8 00000000 		.word	.LANCHOR1
 1023 00ac 00000000 		.word	ADC_offset
 1024 00b0 00002041 		.word	1092616192
 1025 00b4 00000000 		.word	ADC_countsPer10Volt
 1026              		.cfi_endproc
 1027              	.LFE21:
 1028              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1029              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 1030              		.align	2
 1031              		.global	ADC_CountsTo_mVolts
 1032              		.code	16
 1033              		.thumb_func
 1034              		.type	ADC_CountsTo_mVolts, %function
 1035              	ADC_CountsTo_mVolts:
 1036              	.LFB22:
1043:.\Generated_Source\PSoC4/ADC.c **** 
1044:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1045:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_CountsTo_mVolts
1046:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1047:.\Generated_Source\PSoC4/ADC.c **** *
1048:.\Generated_Source\PSoC4/ADC.c **** * \brief Converts the ADC output to millivolts as a 16-bit integer. 
1049:.\Generated_Source\PSoC4/ADC.c **** * For example, if the ADC measured 0.534 volts, the return value 
1050:.\Generated_Source\PSoC4/ADC.c **** * would be 534. The calculation of voltage depends on the value of the voltage 
1051:.\Generated_Source\PSoC4/ADC.c **** * reference. When the Vref is based on Vdda, the value used for Vdda is set for 
1052:.\Generated_Source\PSoC4/ADC.c **** * the project in the System tab of the DWR.
1053:.\Generated_Source\PSoC4/ADC.c **** *
1054:.\Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number. 
1055:.\Generated_Source\PSoC4/ADC.c **** *
1056:.\Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1057:.\Generated_Source\PSoC4/ADC.c **** * 
1058:.\Generated_Source\PSoC4/ADC.c **** * \return Result in mV.
1059:.\Generated_Source\PSoC4/ADC.c **** * 
1060:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None.
1061:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 39


1062:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1063:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_CountsTo_mVolts
1064:.\Generated_Source\PSoC4/ADC.c **** *
1065:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1066:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
1067:.\Generated_Source\PSoC4/ADC.c **** {   
 1037              		.loc 1 1067 0
 1038              		.cfi_startproc
 1039              	.LVL99:
 1040 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1041              		.cfi_def_cfa_offset 24
 1042              		.cfi_offset 3, -24
 1043              		.cfi_offset 4, -20
 1044              		.cfi_offset 5, -16
 1045              		.cfi_offset 6, -12
 1046              		.cfi_offset 7, -8
 1047              		.cfi_offset 14, -4
 1048 0002 061C     		mov	r6, r0
 1049 0004 0C1C     		mov	r4, r1
 1050              	.LVL100:
1068:.\Generated_Source\PSoC4/ADC.c ****     int16 result_mVolts = 0;
1069:.\Generated_Source\PSoC4/ADC.c **** 	uint32 temp;
1070:.\Generated_Source\PSoC4/ADC.c **** 	uint32 averageAdcSamplesDiv;
1071:.\Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1072:.\Generated_Source\PSoC4/ADC.c ****     
1073:.\Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 1051              		.loc 1 1073 0
 1052 0006 2B4B     		ldr	r3, .L95
 1053 0008 1968     		ldr	r1, [r3]
 1054              	.LVL101:
 1055 000a 2B4F     		ldr	r7, .L95+4
 1056 000c CA00     		lsl	r2, r1, #3
 1057 000e 501A     		sub	r0, r2, r1
 1058              	.LVL102:
 1059 0010 C000     		lsl	r0, r0, #3
 1060 0012 C559     		ldr	r5, [r0, r7]
 1061 0014 AD19     		add	r5, r5, r6
 1062              	.LVL103:
1074:.\Generated_Source\PSoC4/ADC.c **** 	
1075:.\Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1063              		.loc 1 1075 0
 1064 0016 3B18     		add	r3, r7, r0
 1065 0018 DB68     		ldr	r3, [r3, #12]
 1066 001a 9B07     		lsl	r3, r3, #30
 1067 001c 47D4     		bmi	.L94
1076:.\Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
1077:.\Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1078:.\Generated_Source\PSoC4/ADC.c **** 	{
1079:.\Generated_Source\PSoC4/ADC.c **** 		/* Halt CPU in debug mode if channel is out of valid range */
1080:.\Generated_Source\PSoC4/ADC.c **** 	    CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1068              		.loc 1 1080 0
 1069 001e 022E     		cmp	r6, #2
 1070 0020 02D9     		bls	.L89
 1071              		.loc 1 1080 0 is_stmt 0 discriminator 1
 1072 0022 0020     		mov	r0, #0
 1073 0024 FFF7FEFF 		bl	CyHalt
 1074              	.LVL104:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 40


 1075              	.L89:
1081:.\Generated_Source\PSoC4/ADC.c **** 
1082:.\Generated_Source\PSoC4/ADC.c **** 	    /* Divide the adcCount when accumulate averaging mode selected */
1083:.\Generated_Source\PSoC4/ADC.c **** 		if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1076              		.loc 1 1083 0 is_stmt 1
 1077 0028 224B     		ldr	r3, .L95
 1078 002a 1A68     		ldr	r2, [r3]
 1079 002c D300     		lsl	r3, r2, #3
 1080 002e 9B1A     		sub	r3, r3, r2
 1081 0030 DB00     		lsl	r3, r3, #3
 1082 0032 214A     		ldr	r2, .L95+4
 1083 0034 D318     		add	r3, r2, r3
 1084 0036 DB68     		ldr	r3, [r3, #12]
 1085 0038 1A06     		lsl	r2, r3, #24
 1086 003a 19D4     		bmi	.L90
1084:.\Generated_Source\PSoC4/ADC.c **** 			& ADC_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK) 
1085:.\Generated_Source\PSoC4/ADC.c **** 			!= ADC_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1086:.\Generated_Source\PSoC4/ADC.c **** 		{
1087:.\Generated_Source\PSoC4/ADC.c **** 	        if((ADC_channelsConfig[rawChannel] 
 1087              		.loc 1 1087 0
 1088 003c AA00     		lsl	r2, r5, #2
 1089 003e 1F49     		ldr	r1, .L95+8
 1090 0040 5258     		ldr	r2, [r2, r1]
 1091 0042 5205     		lsl	r2, r2, #21
 1092 0044 14D5     		bpl	.L90
1088:.\Generated_Source\PSoC4/ADC.c **** 				& ADC_SAR_CHAN_CONFIG_AVG_EN_MSK) != 0u)
1089:.\Generated_Source\PSoC4/ADC.c **** 	        {
1090:.\Generated_Source\PSoC4/ADC.c ****                 /* Divide by 2^(AVG_CNT + 1) */
1091:.\Generated_Source\PSoC4/ADC.c **** 	            averageAdcSamplesDiv = ((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
1092:.\Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_AVG_CNT_MSK) 
 1093              		.loc 1 1092 0
 1094 0046 5B06     		lsl	r3, r3, #25
1091:.\Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_AVG_CNT_MSK) 
 1095              		.loc 1 1091 0
 1096 0048 5B0F     		lsr	r3, r3, #29
 1097              	.LVL105:
1093:.\Generated_Source\PSoC4/ADC.c **** 					>> ADC_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
1094:.\Generated_Source\PSoC4/ADC.c ****                 averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 1098              		.loc 1 1094 0
 1099 004a 0133     		add	r3, r3, #1
 1100              	.LVL106:
 1101 004c 0127     		mov	r7, #1
 1102 004e 9F40     		lsl	r7, r7, r3
 1103              	.LVL107:
1095:.\Generated_Source\PSoC4/ADC.c ****                 
1096:.\Generated_Source\PSoC4/ADC.c ****                 /* If unsigned format, prevent sign extension */
1097:.\Generated_Source\PSoC4/ADC.c ****                 if(0 == ADC_IsChannelSigned(chan))
 1104              		.loc 1 1097 0
 1105 0050 301C     		mov	r0, r6
 1106 0052 FFF7FEFF 		bl	ADC_IsChannelSigned
 1107              	.LVL108:
 1108 0056 0028     		cmp	r0, #0
 1109 0058 05D1     		bne	.L91
1098:.\Generated_Source\PSoC4/ADC.c ****                 {
1099:.\Generated_Source\PSoC4/ADC.c **** 					temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 1110              		.loc 1 1099 0
 1111 005a A0B2     		uxth	r0, r4
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 41


 1112 005c 391C     		mov	r1, r7
 1113 005e FFF7FEFF 		bl	__aeabi_uidiv
 1114              	.LVL109:
1100:.\Generated_Source\PSoC4/ADC.c ****                     adcCounts = (int16) temp;
 1115              		.loc 1 1100 0
 1116 0062 04B2     		sxth	r4, r0
 1117              	.LVL110:
 1118 0064 04E0     		b	.L90
 1119              	.LVL111:
 1120              	.L91:
1101:.\Generated_Source\PSoC4/ADC.c ****                 }
1102:.\Generated_Source\PSoC4/ADC.c ****                 else
1103:.\Generated_Source\PSoC4/ADC.c ****                 {
1104:.\Generated_Source\PSoC4/ADC.c ****                     adcCounts /= (int16) averageAdcSamplesDiv;
 1121              		.loc 1 1104 0
 1122 0066 39B2     		sxth	r1, r7
 1123 0068 201C     		mov	r0, r4
 1124 006a FFF7FEFF 		bl	__aeabi_idiv
 1125              	.LVL112:
 1126 006e 04B2     		sxth	r4, r0
 1127              	.LVL113:
 1128              	.L90:
1105:.\Generated_Source\PSoC4/ADC.c ****                 }
1106:.\Generated_Source\PSoC4/ADC.c **** 	        }
1107:.\Generated_Source\PSoC4/ADC.c **** 	    }
1108:.\Generated_Source\PSoC4/ADC.c **** 
1109:.\Generated_Source\PSoC4/ADC.c **** 	    /* Subtract ADC offset */
1110:.\Generated_Source\PSoC4/ADC.c **** 	    adcCounts -= ADC_offset[rawChannel];
 1129              		.loc 1 1110 0
 1130 0070 6B00     		lsl	r3, r5, #1
 1131 0072 134A     		ldr	r2, .L95+12
 1132 0074 985A     		ldrh	r0, [r3, r2]
 1133 0076 241A     		sub	r4, r4, r0
 1134              	.LVL114:
 1135 0078 24B2     		sxth	r4, r4
 1136              	.LVL115:
1111:.\Generated_Source\PSoC4/ADC.c **** 
1112:.\Generated_Source\PSoC4/ADC.c **** 	    result_mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 1137              		.loc 1 1112 0
 1138 007a 1248     		ldr	r0, .L95+16
 1139 007c 6043     		mul	r0, r4
1113:.\Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
1114:.\Generated_Source\PSoC4/ADC.c **** 				: (-(ADC_countsPer10Volt[rawChannel] / 2)) )) 
 1140              		.loc 1 1114 0
 1141 007e 002C     		cmp	r4, #0
 1142 0080 06DD     		ble	.L92
1113:.\Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
 1143              		.loc 1 1113 0 discriminator 1
 1144 0082 AB00     		lsl	r3, r5, #2
 1145 0084 104A     		ldr	r2, .L95+20
 1146 0086 9B58     		ldr	r3, [r3, r2]
 1147              		.loc 1 1114 0 discriminator 1
 1148 0088 DA0F     		lsr	r2, r3, #31
 1149 008a D318     		add	r3, r2, r3
 1150 008c 5B10     		asr	r3, r3, #1
 1151 008e 06E0     		b	.L93
 1152              	.L92:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 42


 1153              		.loc 1 1114 0 is_stmt 0 discriminator 2
 1154 0090 AB00     		lsl	r3, r5, #2
 1155 0092 0D4A     		ldr	r2, .L95+20
 1156 0094 9A58     		ldr	r2, [r3, r2]
 1157 0096 D30F     		lsr	r3, r2, #31
 1158 0098 9A18     		add	r2, r3, r2
 1159 009a 5210     		asr	r2, r2, #1
 1160 009c 5342     		neg	r3, r2
 1161              	.L93:
1112:.\Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
 1162              		.loc 1 1112 0 is_stmt 1
 1163 009e C018     		add	r0, r0, r3
1115:.\Generated_Source\PSoC4/ADC.c **** 	             / ADC_countsPer10Volt[rawChannel]);
 1164              		.loc 1 1115 0
 1165 00a0 AD00     		lsl	r5, r5, #2
 1166              	.LVL116:
 1167 00a2 094B     		ldr	r3, .L95+20
 1168 00a4 E958     		ldr	r1, [r5, r3]
 1169 00a6 FFF7FEFF 		bl	__aeabi_idiv
 1170              	.LVL117:
1112:.\Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
 1171              		.loc 1 1112 0
 1172 00aa 80B2     		uxth	r0, r0
 1173              	.LVL118:
 1174 00ac 00E0     		b	.L88
 1175              	.LVL119:
 1176              	.L94:
1068:.\Generated_Source\PSoC4/ADC.c **** 	uint32 temp;
 1177              		.loc 1 1068 0
 1178 00ae 0020     		mov	r0, #0
 1179              	.LVL120:
 1180              	.L88:
1116:.\Generated_Source\PSoC4/ADC.c **** 	}
1117:.\Generated_Source\PSoC4/ADC.c ****     return result_mVolts;
 1181              		.loc 1 1117 0
 1182 00b0 00B2     		sxth	r0, r0
1118:.\Generated_Source\PSoC4/ADC.c **** }
 1183              		.loc 1 1118 0
 1184              		@ sp needed
 1185              	.LVL121:
 1186 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1187              	.L96:
 1188              		.align	2
 1189              	.L95:
 1190 00b4 00000000 		.word	.LANCHOR0
 1191 00b8 00000000 		.word	ADC_allConfigs
 1192 00bc 00000000 		.word	.LANCHOR1
 1193 00c0 00000000 		.word	ADC_offset
 1194 00c4 10270000 		.word	10000
 1195 00c8 00000000 		.word	ADC_countsPer10Volt
 1196              		.cfi_endproc
 1197              	.LFE22:
 1198              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1199              		.global	__aeabi_lmul
 1200              		.global	__aeabi_ldivmod
 1201              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1202              		.align	2
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 43


 1203              		.global	ADC_CountsTo_uVolts
 1204              		.code	16
 1205              		.thumb_func
 1206              		.type	ADC_CountsTo_uVolts, %function
 1207              	ADC_CountsTo_uVolts:
 1208              	.LFB23:
1119:.\Generated_Source\PSoC4/ADC.c **** 
1120:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1121:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_CountsTo_uVolts
1122:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1123:.\Generated_Source\PSoC4/ADC.c **** *
1124:.\Generated_Source\PSoC4/ADC.c **** * \brief Converts the ADC output to microvolts as a 32-bit integer. 
1125:.\Generated_Source\PSoC4/ADC.c **** * For example, if the ADC measured 0.534 volts, the return value 
1126:.\Generated_Source\PSoC4/ADC.c **** * would be 534000. The calculation of voltage depends on the value of the voltage 
1127:.\Generated_Source\PSoC4/ADC.c **** * reference. When the Vref is based on Vdda, the value used for Vdda is set for 
1128:.\Generated_Source\PSoC4/ADC.c **** * the project in the System tab of the DWR.
1129:.\Generated_Source\PSoC4/ADC.c **** *
1130:.\Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.   
1131:.\Generated_Source\PSoC4/ADC.c **** *
1132:.\Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1133:.\Generated_Source\PSoC4/ADC.c **** *
1134:.\Generated_Source\PSoC4/ADC.c **** * \return Result in microvolts.
1135:.\Generated_Source\PSoC4/ADC.c **** * 
1136:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1137:.\Generated_Source\PSoC4/ADC.c **** *
1138:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1139:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_CountsTo_uVolts
1140:.\Generated_Source\PSoC4/ADC.c **** *
1141:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1142:.\Generated_Source\PSoC4/ADC.c **** int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
1143:.\Generated_Source\PSoC4/ADC.c **** {   
 1209              		.loc 1 1143 0
 1210              		.cfi_startproc
 1211              	.LVL122:
 1212 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1213              		.cfi_def_cfa_offset 24
 1214              		.cfi_offset 3, -24
 1215              		.cfi_offset 4, -20
 1216              		.cfi_offset 5, -16
 1217              		.cfi_offset 6, -12
 1218              		.cfi_offset 7, -8
 1219              		.cfi_offset 14, -4
 1220 0002 061C     		mov	r6, r0
 1221 0004 0C1C     		mov	r4, r1
 1222              	.LVL123:
1144:.\Generated_Source\PSoC4/ADC.c ****     int64 result_uVolts = 0;
1145:.\Generated_Source\PSoC4/ADC.c **** 	uint32 temp;
1146:.\Generated_Source\PSoC4/ADC.c **** 	uint32 averageAdcSamplesDiv;
1147:.\Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1148:.\Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 1223              		.loc 1 1148 0
 1224 0006 244B     		ldr	r3, .L103
 1225 0008 1968     		ldr	r1, [r3]
 1226              	.LVL124:
 1227 000a 244F     		ldr	r7, .L103+4
 1228 000c CA00     		lsl	r2, r1, #3
 1229 000e 501A     		sub	r0, r2, r1
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 44


 1230              	.LVL125:
 1231 0010 C000     		lsl	r0, r0, #3
 1232 0012 C559     		ldr	r5, [r0, r7]
 1233 0014 AD19     		add	r5, r5, r6
 1234              	.LVL126:
1149:.\Generated_Source\PSoC4/ADC.c **** 
1150:.\Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1235              		.loc 1 1150 0
 1236 0016 3B18     		add	r3, r7, r0
 1237 0018 DB68     		ldr	r3, [r3, #12]
 1238 001a 9B07     		lsl	r3, r3, #30
 1239 001c 39D4     		bmi	.L102
1151:.\Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
1152:.\Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1153:.\Generated_Source\PSoC4/ADC.c **** 	{
1154:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
1155:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1240              		.loc 1 1155 0
 1241 001e 022E     		cmp	r6, #2
 1242 0020 02D9     		bls	.L99
 1243              		.loc 1 1155 0 is_stmt 0 discriminator 1
 1244 0022 0020     		mov	r0, #0
 1245 0024 FFF7FEFF 		bl	CyHalt
 1246              	.LVL127:
 1247              	.L99:
1156:.\Generated_Source\PSoC4/ADC.c **** 
1157:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
1158:.\Generated_Source\PSoC4/ADC.c **** 		if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1248              		.loc 1 1158 0 is_stmt 1
 1249 0028 1B4B     		ldr	r3, .L103
 1250 002a 1A68     		ldr	r2, [r3]
 1251 002c D300     		lsl	r3, r2, #3
 1252 002e 9B1A     		sub	r3, r3, r2
 1253 0030 DB00     		lsl	r3, r3, #3
 1254 0032 1A4A     		ldr	r2, .L103+4
 1255 0034 D318     		add	r3, r2, r3
 1256 0036 DB68     		ldr	r3, [r3, #12]
 1257 0038 1A06     		lsl	r2, r3, #24
 1258 003a 19D4     		bmi	.L100
1159:.\Generated_Source\PSoC4/ADC.c **** 			& ADC_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK) 
1160:.\Generated_Source\PSoC4/ADC.c **** 			!= ADC_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1161:.\Generated_Source\PSoC4/ADC.c **** 		{
1162:.\Generated_Source\PSoC4/ADC.c **** 	        if((ADC_channelsConfig[rawChannel] & ADC_SAR_CHAN_CONFIG_AVG_EN_MSK) != 0u)
 1259              		.loc 1 1162 0
 1260 003c AA00     		lsl	r2, r5, #2
 1261 003e 1849     		ldr	r1, .L103+8
 1262 0040 5258     		ldr	r2, [r2, r1]
 1263 0042 5205     		lsl	r2, r2, #21
 1264 0044 14D5     		bpl	.L100
1163:.\Generated_Source\PSoC4/ADC.c **** 	        {
1164:.\Generated_Source\PSoC4/ADC.c ****                 /* Divide by 2^(AVG_CNT + 1) */
1165:.\Generated_Source\PSoC4/ADC.c **** 				averageAdcSamplesDiv = ((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
1166:.\Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_AVG_CNT_MSK) 
 1265              		.loc 1 1166 0
 1266 0046 5B06     		lsl	r3, r3, #25
1165:.\Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_AVG_CNT_MSK) 
 1267              		.loc 1 1165 0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 45


 1268 0048 5B0F     		lsr	r3, r3, #29
 1269              	.LVL128:
1167:.\Generated_Source\PSoC4/ADC.c **** 					>> ADC_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
1168:.\Generated_Source\PSoC4/ADC.c ****                 averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 1270              		.loc 1 1168 0
 1271 004a 0133     		add	r3, r3, #1
 1272              	.LVL129:
 1273 004c 0127     		mov	r7, #1
 1274 004e 9F40     		lsl	r7, r7, r3
 1275              	.LVL130:
1169:.\Generated_Source\PSoC4/ADC.c ****                 
1170:.\Generated_Source\PSoC4/ADC.c ****                 /* If unsigned format, prevent sign extension */
1171:.\Generated_Source\PSoC4/ADC.c ****                 if(0 == ADC_IsChannelSigned(chan))
 1276              		.loc 1 1171 0
 1277 0050 301C     		mov	r0, r6
 1278 0052 FFF7FEFF 		bl	ADC_IsChannelSigned
 1279              	.LVL131:
 1280 0056 0028     		cmp	r0, #0
 1281 0058 05D1     		bne	.L101
1172:.\Generated_Source\PSoC4/ADC.c ****                 {
1173:.\Generated_Source\PSoC4/ADC.c **** 					temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 1282              		.loc 1 1173 0
 1283 005a A0B2     		uxth	r0, r4
 1284 005c 391C     		mov	r1, r7
 1285 005e FFF7FEFF 		bl	__aeabi_uidiv
 1286              	.LVL132:
1174:.\Generated_Source\PSoC4/ADC.c ****                     adcCounts = (int16) temp;
 1287              		.loc 1 1174 0
 1288 0062 04B2     		sxth	r4, r0
 1289              	.LVL133:
 1290 0064 04E0     		b	.L100
 1291              	.LVL134:
 1292              	.L101:
1175:.\Generated_Source\PSoC4/ADC.c ****                 }
1176:.\Generated_Source\PSoC4/ADC.c ****                 else
1177:.\Generated_Source\PSoC4/ADC.c ****                 {
1178:.\Generated_Source\PSoC4/ADC.c ****                     adcCounts /= (int16) averageAdcSamplesDiv;
 1293              		.loc 1 1178 0
 1294 0066 39B2     		sxth	r1, r7
 1295 0068 201C     		mov	r0, r4
 1296 006a FFF7FEFF 		bl	__aeabi_idiv
 1297              	.LVL135:
 1298 006e 04B2     		sxth	r4, r0
 1299              	.LVL136:
 1300              	.L100:
1179:.\Generated_Source\PSoC4/ADC.c ****                 }
1180:.\Generated_Source\PSoC4/ADC.c ****             }
1181:.\Generated_Source\PSoC4/ADC.c ****         }
1182:.\Generated_Source\PSoC4/ADC.c **** 
1183:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
1184:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[rawChannel];
 1301              		.loc 1 1184 0
 1302 0070 6A00     		lsl	r2, r5, #1
 1303 0072 0C4B     		ldr	r3, .L103+12
 1304 0074 D05A     		ldrh	r0, [r2, r3]
 1305 0076 201A     		sub	r0, r4, r0
 1306 0078 00B2     		sxth	r0, r0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 46


 1307              	.LVL137:
1185:.\Generated_Source\PSoC4/ADC.c **** 
1186:.\Generated_Source\PSoC4/ADC.c ****         result_uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) 
 1308              		.loc 1 1186 0
 1309 007a C117     		asr	r1, r0, #31
 1310 007c 0A4A     		ldr	r2, .L103+16
 1311 007e 0023     		mov	r3, #0
 1312 0080 FFF7FEFF 		bl	__aeabi_lmul
 1313              	.LVL138:
1187:.\Generated_Source\PSoC4/ADC.c **** 			/ ADC_countsPer10Volt[rawChannel];
 1314              		.loc 1 1187 0
 1315 0084 AD00     		lsl	r5, r5, #2
 1316              	.LVL139:
 1317 0086 094B     		ldr	r3, .L103+20
 1318 0088 EA58     		ldr	r2, [r5, r3]
 1319 008a D317     		asr	r3, r2, #31
1186:.\Generated_Source\PSoC4/ADC.c **** 			/ ADC_countsPer10Volt[rawChannel];
 1320              		.loc 1 1186 0
 1321 008c FFF7FEFF 		bl	__aeabi_ldivmod
 1322              	.LVL140:
 1323 0090 00E0     		b	.L98
 1324              	.LVL141:
 1325              	.L102:
1144:.\Generated_Source\PSoC4/ADC.c **** 	uint32 temp;
 1326              		.loc 1 1144 0
 1327 0092 0020     		mov	r0, #0
 1328              	.LVL142:
 1329              	.L98:
1188:.\Generated_Source\PSoC4/ADC.c **** 	}
1189:.\Generated_Source\PSoC4/ADC.c **** 	return ( (int32)result_uVolts );
1190:.\Generated_Source\PSoC4/ADC.c **** }
 1330              		.loc 1 1190 0
 1331              		@ sp needed
 1332              	.LVL143:
 1333 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1334              	.L104:
 1335 0096 C046     		.align	2
 1336              	.L103:
 1337 0098 00000000 		.word	.LANCHOR0
 1338 009c 00000000 		.word	ADC_allConfigs
 1339 00a0 00000000 		.word	.LANCHOR1
 1340 00a4 00000000 		.word	ADC_offset
 1341 00a8 80969800 		.word	10000000
 1342 00ac 00000000 		.word	ADC_countsPer10Volt
 1343              		.cfi_endproc
 1344              	.LFE23:
 1345              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1346              		.section	.text.ADC_Init,"ax",%progbits
 1347              		.align	2
 1348              		.global	ADC_Init
 1349              		.code	16
 1350              		.thumb_func
 1351              		.type	ADC_Init, %function
 1352              	ADC_Init:
 1353              	.LFB24:
1191:.\Generated_Source\PSoC4/ADC.c **** 
1192:.\Generated_Source\PSoC4/ADC.c **** #if(0u != ADC_ANY_CONFIG_USES_FILTER)		
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 47


1193:.\Generated_Source\PSoC4/ADC.c ****     /* ****************************************************************************
1194:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_TrimOffset
1195:.\Generated_Source\PSoC4/ADC.c ****     ****************************************************************************//*
1196:.\Generated_Source\PSoC4/ADC.c ****     *
1197:.\Generated_Source\PSoC4/ADC.c ****     * \brief Runs an algorithm to reduce offset using the UAB's opamp trim.
1198:.\Generated_Source\PSoC4/ADC.c ****     *
1199:.\Generated_Source\PSoC4/ADC.c ****     * \param None
1200:.\Generated_Source\PSoC4/ADC.c ****     * 
1201:.\Generated_Source\PSoC4/ADC.c ****     * \return None
1202:.\Generated_Source\PSoC4/ADC.c ****     *
1203:.\Generated_Source\PSoC4/ADC.c ****     * \sideeffect None
1204:.\Generated_Source\PSoC4/ADC.c ****     *
1205:.\Generated_Source\PSoC4/ADC.c ****     * <b>Code Snippet</b>
1206:.\Generated_Source\PSoC4/ADC.c ****     *  \snippet main.c snippet_ADC_TrimOffset
1207:.\Generated_Source\PSoC4/ADC.c ****     *
1208:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
1209:.\Generated_Source\PSoC4/ADC.c ****     void ADC_TrimOffset(void)
1210:.\Generated_Source\PSoC4/ADC.c ****     {
1211:.\Generated_Source\PSoC4/ADC.c ****         uint32 curTrim = 0uL;
1212:.\Generated_Source\PSoC4/ADC.c ****         uint32 bestTrim = 0uL;
1213:.\Generated_Source\PSoC4/ADC.c ****         int16 curResult = 0;
1214:.\Generated_Source\PSoC4/ADC.c ****         int16 bestResult = (int16)0x7fff; /* Max positive 16-bit number */
1215:.\Generated_Source\PSoC4/ADC.c ****         int16 targResult = 0;
1216:.\Generated_Source\PSoC4/ADC.c **** 
1217:.\Generated_Source\PSoC4/ADC.c ****         ADC_Stop();
1218:.\Generated_Source\PSoC4/ADC.c ****         ADC_Start();
1219:.\Generated_Source\PSoC4/ADC.c ****         ADC_StartConvert();
1220:.\Generated_Source\PSoC4/ADC.c ****         /* Set firmware modbit. */
1221:.\Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_CAP_ABCF_VAL_REG |= (0x1uL << CyUAB_SIGN_VAL_SHIFT);
1222:.\Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_CAP_ABCF_VAL_REG |= (0x1uL << CyUAB_SIGN_VAL_SHIFT);
1223:.\Generated_Source\PSoC4/ADC.c ****         /* Unsigned mode zero is 0x800, signed mode zero is 0 */
1224:.\Generated_Source\PSoC4/ADC.c ****         targResult = (0u != (ADC_SAR_SAMPLE_CTRL_REG 
1225:.\Generated_Source\PSoC4/ADC.c ****                                  & ADC_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK))
1226:.\Generated_Source\PSoC4/ADC.c ****                            ? 0
1227:.\Generated_Source\PSoC4/ADC.c ****                            : (int16)0x0800;
1228:.\Generated_Source\PSoC4/ADC.c ****                         
1229:.\Generated_Source\PSoC4/ADC.c ****         /* Check each trim value. Remember trim that created smallest offset.*/
1230:.\Generated_Source\PSoC4/ADC.c ****         for(curTrim = 0uL; curTrim < 0x10uL; curTrim++)
1231:.\Generated_Source\PSoC4/ADC.c ****         {
1232:.\Generated_Source\PSoC4/ADC.c ****             /* Use defines from cydevice_trm to set trim. */
1233:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32(CYREG_UAB0_OA_TRIM0, 
1234:.\Generated_Source\PSoC4/ADC.c ****                 CY_GET_REG32(CYREG_UAB0_OA_TRIM0) & ~(0xfuL << CyUAB_OA_OFFSET_SHIFT));
1235:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32(CYREG_UAB0_OA_TRIM0, 
1236:.\Generated_Source\PSoC4/ADC.c ****                 CY_GET_REG32(CYREG_UAB0_OA_TRIM0) | (curTrim << CyUAB_OA_OFFSET_SHIFT));
1237:.\Generated_Source\PSoC4/ADC.c ****             CyDelayUs(100u);
1238:.\Generated_Source\PSoC4/ADC.c ****             (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
1239:.\Generated_Source\PSoC4/ADC.c ****             curResult = ADC_GetResult16(0uL) - targResult;
1240:.\Generated_Source\PSoC4/ADC.c ****             if (curResult < 0)
1241:.\Generated_Source\PSoC4/ADC.c ****             {
1242:.\Generated_Source\PSoC4/ADC.c ****                 curResult *= -1;
1243:.\Generated_Source\PSoC4/ADC.c ****             }
1244:.\Generated_Source\PSoC4/ADC.c ****             if (curResult < bestResult)
1245:.\Generated_Source\PSoC4/ADC.c ****             {
1246:.\Generated_Source\PSoC4/ADC.c ****                 bestResult = curResult;
1247:.\Generated_Source\PSoC4/ADC.c ****                 bestTrim = curTrim;
1248:.\Generated_Source\PSoC4/ADC.c ****             }
1249:.\Generated_Source\PSoC4/ADC.c ****         }
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 48


1250:.\Generated_Source\PSoC4/ADC.c ****         
1251:.\Generated_Source\PSoC4/ADC.c ****         /* Set the best trim. */
1252:.\Generated_Source\PSoC4/ADC.c ****         CY_SET_REG32(CYREG_UAB0_OA_TRIM0, 
1253:.\Generated_Source\PSoC4/ADC.c ****             CY_GET_REG32(CYREG_UAB0_OA_TRIM0) & ~(0xfuL << CyUAB_OA_OFFSET_SHIFT));
1254:.\Generated_Source\PSoC4/ADC.c ****         CY_SET_REG32(CYREG_UAB0_OA_TRIM0, 
1255:.\Generated_Source\PSoC4/ADC.c ****             CY_GET_REG32(CYREG_UAB0_OA_TRIM0) | (bestTrim << CyUAB_OA_OFFSET_SHIFT));
1256:.\Generated_Source\PSoC4/ADC.c ****         
1257:.\Generated_Source\PSoC4/ADC.c ****         /* Clear the modbit */
1258:.\Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_CAP_ABCF_VAL_REG &= ~(0x1uL << CyUAB_SIGN_VAL_SHIFT);
1259:.\Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_CAP_ABCF_VAL_REG &= ~(0x1uL << CyUAB_SIGN_VAL_SHIFT);
1260:.\Generated_Source\PSoC4/ADC.c ****     }
1261:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
1262:.\Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
1263:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
1264:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
1265:.\Generated_Source\PSoC4/ADC.c **** *
1266:.\Generated_Source\PSoC4/ADC.c **** * \brief Initialize the component according to parameters defined in the 
1267:.\Generated_Source\PSoC4/ADC.c **** * customizer.
1268:.\Generated_Source\PSoC4/ADC.c **** *
1269:.\Generated_Source\PSoC4/ADC.c **** * \param None
1270:.\Generated_Source\PSoC4/ADC.c **** * 
1271:.\Generated_Source\PSoC4/ADC.c **** * \return None
1272:.\Generated_Source\PSoC4/ADC.c **** *
1273:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1274:.\Generated_Source\PSoC4/ADC.c **** *
1275:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1276:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Init
1277:.\Generated_Source\PSoC4/ADC.c **** *
1278:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1279:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
1280:.\Generated_Source\PSoC4/ADC.c **** {
 1354              		.loc 1 1280 0
 1355              		.cfi_startproc
 1356 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1357              		.cfi_def_cfa_offset 20
 1358              		.cfi_offset 4, -20
 1359              		.cfi_offset 5, -16
 1360              		.cfi_offset 6, -12
 1361              		.cfi_offset 7, -8
 1362              		.cfi_offset 14, -4
 1363 0002 4746     		mov	r7, r8
 1364 0004 80B4     		push	{r7}
 1365              		.cfi_def_cfa_offset 24
 1366              		.cfi_offset 8, -24
 1367              	.LVL144:
1281:.\Generated_Source\PSoC4/ADC.c **** 	uint32 chNum = 0ul;
1282:.\Generated_Source\PSoC4/ADC.c **** 	uint32 configNum = 0u;
1283:.\Generated_Source\PSoC4/ADC.c **** 	int32 counts;
1284:.\Generated_Source\PSoC4/ADC.c **** 	
1285:.\Generated_Source\PSoC4/ADC.c **** 	if(0u == ADC_initVar)
 1368              		.loc 1 1285 0
 1369 0006 424B     		ldr	r3, .L119
 1370 0008 1B7A     		ldrb	r3, [r3, #8]
 1371 000a 002B     		cmp	r3, #0
 1372 000c 55D0     		beq	.L116
 1373 000e 7CE0     		b	.L105
 1374              	.LVL145:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 49


 1375              	.L113:
1286:.\Generated_Source\PSoC4/ADC.c **** 	{
1287:.\Generated_Source\PSoC4/ADC.c **** 		/* Set offset and countsPer10Volt for all channels */
1288:.\Generated_Source\PSoC4/ADC.c **** 		for(chNum = 0ul; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
1289:.\Generated_Source\PSoC4/ADC.c **** 		{      
1290:.\Generated_Source\PSoC4/ADC.c **** 			if((ADC_channelsConfig[chNum] & ADC_SAR_CHAN_CONFIG_RESOLUTION_MSK) != 0u)
 1376              		.loc 1 1290 0
 1377 0010 A300     		lsl	r3, r4, #2
 1378 0012 404A     		ldr	r2, .L119+4
 1379 0014 9A58     		ldr	r2, [r3, r2]
 1380 0016 9305     		lsl	r3, r2, #22
 1381 0018 0AD5     		bpl	.L117
1291:.\Generated_Source\PSoC4/ADC.c ****         	{
1292:.\Generated_Source\PSoC4/ADC.c **** 				if((ADC_allConfigs[configNum].sampleCtrl 
 1382              		.loc 1 1292 0
 1383 001a FB00     		lsl	r3, r7, #3
 1384 001c DB1B     		sub	r3, r3, r7
 1385 001e DB00     		lsl	r3, r3, #3
 1386 0020 3D49     		ldr	r1, .L119+8
 1387 0022 CB18     		add	r3, r1, r3
 1388 0024 DB68     		ldr	r3, [r3, #12]
 1389 0026 DB07     		lsl	r3, r3, #31
 1390 0028 05D5     		bpl	.L118
1293:.\Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_SUB_RESOLUTION_MSK) 
1294:.\Generated_Source\PSoC4/ADC.c **** 					== ADC_SUB_RESOLUTION_10B)
1295:.\Generated_Source\PSoC4/ADC.c **** 				{
1296:.\Generated_Source\PSoC4/ADC.c **** 					counts = (int32) ADC_SAR_WRK_MAX_10BIT;
 1391              		.loc 1 1296 0
 1392 002a 8020     		mov	r0, #128
 1393 002c C000     		lsl	r0, r0, #3
 1394 002e 04E0     		b	.L108
 1395              	.L117:
1297:.\Generated_Source\PSoC4/ADC.c **** 				}
1298:.\Generated_Source\PSoC4/ADC.c **** 				else
1299:.\Generated_Source\PSoC4/ADC.c **** 				{
1300:.\Generated_Source\PSoC4/ADC.c **** 					counts = (int32) ADC_SAR_WRK_MAX_8BIT;
1301:.\Generated_Source\PSoC4/ADC.c **** 				}
1302:.\Generated_Source\PSoC4/ADC.c ****         	}
1303:.\Generated_Source\PSoC4/ADC.c ****         	else
1304:.\Generated_Source\PSoC4/ADC.c ****         	{
1305:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 1396              		.loc 1 1305 0
 1397 0030 8020     		mov	r0, #128
 1398 0032 4001     		lsl	r0, r0, #5
 1399 0034 01E0     		b	.L108
 1400              	.L118:
1300:.\Generated_Source\PSoC4/ADC.c **** 				}
 1401              		.loc 1 1300 0
 1402 0036 8020     		mov	r0, #128
 1403 0038 4000     		lsl	r0, r0, #1
 1404              	.L108:
 1405              	.LVL146:
1306:.\Generated_Source\PSoC4/ADC.c ****         	}
1307:.\Generated_Source\PSoC4/ADC.c **** 			
1308:.\Generated_Source\PSoC4/ADC.c **** 			/* Single Ended Channel */
1309:.\Generated_Source\PSoC4/ADC.c **** 			if((ADC_channelsConfig[chNum] & ADC_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK) == 0u)
 1406              		.loc 1 1309 0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 50


 1407 003a D305     		lsl	r3, r2, #23
 1408 003c 1DD4     		bmi	.L109
1310:.\Generated_Source\PSoC4/ADC.c ****         	{
1311:.\Generated_Source\PSoC4/ADC.c **** 				if(((ADC_allConfigs[configNum].sampleCtrl 
 1409              		.loc 1 1311 0
 1410 003e FB00     		lsl	r3, r7, #3
 1411 0040 DB1B     		sub	r3, r3, r7
 1412 0042 DB00     		lsl	r3, r3, #3
 1413 0044 344A     		ldr	r2, .L119+8
 1414 0046 D318     		add	r3, r2, r3
 1415 0048 DB68     		ldr	r3, [r3, #12]
 1416 004a 5B07     		lsl	r3, r3, #29
 1417 004c 10D5     		bpl	.L110
1312:.\Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) 
1313:.\Generated_Source\PSoC4/ADC.c **** 					== ADC_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) && 
1314:.\Generated_Source\PSoC4/ADC.c **** 					((ADC_allConfigs[configNum].ctrl & ADC_SAR_CTRL_NEG_SEL_MSK) 
 1418              		.loc 1 1314 0
 1419 004e FB00     		lsl	r3, r7, #3
 1420 0050 DB1B     		sub	r3, r3, r7
 1421 0052 DB00     		lsl	r3, r3, #3
 1422 0054 D318     		add	r3, r2, r3
 1423 0056 9B68     		ldr	r3, [r3, #8]
 1424 0058 E022     		mov	r2, #224
 1425 005a 1201     		lsl	r2, r2, #4
 1426 005c 1340     		and	r3, r2
1313:.\Generated_Source\PSoC4/ADC.c **** 					((ADC_allConfigs[configNum].ctrl & ADC_SAR_CTRL_NEG_SEL_MSK) 
 1427              		.loc 1 1313 0
 1428 005e 9342     		cmp	r3, r2
 1429 0060 06D1     		bne	.L110
1315:.\Generated_Source\PSoC4/ADC.c **** 					== ADC_NEG_VREF_SHIFTED))
1316:.\Generated_Source\PSoC4/ADC.c **** 				{
1317:.\Generated_Source\PSoC4/ADC.c **** 					/* Set offset to the minus half scale to convert results to unsigned format */
1318:.\Generated_Source\PSoC4/ADC.c ****                 	ADC_offset[chNum] = (int16)(counts / -2);		
 1430              		.loc 1 1318 0
 1431 0062 4308     		lsr	r3, r0, #1
 1432 0064 5B42     		neg	r3, r3
 1433 0066 9BB2     		uxth	r3, r3
 1434 0068 6200     		lsl	r2, r4, #1
 1435 006a 2C49     		ldr	r1, .L119+12
 1436 006c 5352     		strh	r3, [r2, r1]
 1437 006e 08E0     		b	.L111
 1438              	.L110:
1319:.\Generated_Source\PSoC4/ADC.c ****             	}
1320:.\Generated_Source\PSoC4/ADC.c **** 				else
1321:.\Generated_Source\PSoC4/ADC.c **** 				{
1322:.\Generated_Source\PSoC4/ADC.c ****                 	ADC_offset[chNum] = 0;	
 1439              		.loc 1 1322 0
 1440 0070 6300     		lsl	r3, r4, #1
 1441 0072 0021     		mov	r1, #0
 1442 0074 294A     		ldr	r2, .L119+12
 1443 0076 9952     		strh	r1, [r3, r2]
 1444 0078 03E0     		b	.L111
 1445              	.L109:
1323:.\Generated_Source\PSoC4/ADC.c **** 				}
1324:.\Generated_Source\PSoC4/ADC.c **** 			}
1325:.\Generated_Source\PSoC4/ADC.c **** 			else    /* Differential channel */
1326:.\Generated_Source\PSoC4/ADC.c ****         	{
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 51


1327:.\Generated_Source\PSoC4/ADC.c ****                	ADC_offset[chNum] = 0; 
 1446              		.loc 1 1327 0
 1447 007a 6300     		lsl	r3, r4, #1
 1448 007c 0021     		mov	r1, #0
 1449 007e 274A     		ldr	r2, .L119+12
 1450 0080 9952     		strh	r1, [r3, r2]
 1451              	.L111:
1328:.\Generated_Source\PSoC4/ADC.c **** 			}
1329:.\Generated_Source\PSoC4/ADC.c ****             
1330:.\Generated_Source\PSoC4/ADC.c **** 			/* Calculate gain in counts per 10 volts with rounding */
1331:.\Generated_Source\PSoC4/ADC.c ****         	ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) \
 1452              		.loc 1 1331 0
 1453 0082 274B     		ldr	r3, .L119+16
 1454 0084 5843     		mul	r0, r3
 1455              	.LVL147:
1332:.\Generated_Source\PSoC4/ADC.c ****                             + ADC_allConfigs[configNum].vrefMvValue) \
 1456              		.loc 1 1332 0
 1457 0086 244B     		ldr	r3, .L119+8
 1458 0088 9846     		mov	r8, r3
 1459 008a FE00     		lsl	r6, r7, #3
 1460 008c F51B     		sub	r5, r6, r7
 1461 008e ED00     		lsl	r5, r5, #3
 1462 0090 4544     		add	r5, r5, r8
 1463 0092 E96A     		ldr	r1, [r5, #44]
 1464 0094 4018     		add	r0, r0, r1
1333:.\Generated_Source\PSoC4/ADC.c **** 							/ (ADC_allConfigs[configNum].vrefMvValue * 2));
 1465              		.loc 1 1333 0
 1466 0096 4900     		lsl	r1, r1, #1
 1467 0098 FFF7FEFF 		bl	__aeabi_idiv
 1468              	.LVL148:
1331:.\Generated_Source\PSoC4/ADC.c ****                             + ADC_allConfigs[configNum].vrefMvValue) \
 1469              		.loc 1 1331 0
 1470 009c 00B2     		sxth	r0, r0
 1471 009e A300     		lsl	r3, r4, #2
 1472 00a0 204A     		ldr	r2, .L119+20
 1473 00a2 9850     		str	r0, [r3, r2]
1334:.\Generated_Source\PSoC4/ADC.c ****             
1335:.\Generated_Source\PSoC4/ADC.c ****             /* Increment configuration number after rolling over to the next configuration*/
1336:.\Generated_Source\PSoC4/ADC.c **** 			if((ADC_allConfigs[configNum].channelBase
 1474              		.loc 1 1336 0
 1475 00a4 F31B     		sub	r3, r6, r7
 1476 00a6 DB00     		lsl	r3, r3, #3
 1477 00a8 4246     		mov	r2, r8
 1478 00aa 9A58     		ldr	r2, [r3, r2]
1337:.\Generated_Source\PSoC4/ADC.c **** 				+ ADC_allConfigs[configNum].numChannels) == chNum)
 1479              		.loc 1 1337 0
 1480 00ac 6B68     		ldr	r3, [r5, #4]
 1481 00ae D318     		add	r3, r2, r3
1336:.\Generated_Source\PSoC4/ADC.c **** 				+ ADC_allConfigs[configNum].numChannels) == chNum)
 1482              		.loc 1 1336 0
 1483 00b0 A342     		cmp	r3, r4
 1484 00b2 00D1     		bne	.L112
1338:.\Generated_Source\PSoC4/ADC.c **** 			{
1339:.\Generated_Source\PSoC4/ADC.c **** 				configNum++;
 1485              		.loc 1 1339 0
 1486 00b4 0137     		add	r7, r7, #1
 1487              	.LVL149:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 52


 1488              	.L112:
1288:.\Generated_Source\PSoC4/ADC.c **** 		{      
 1489              		.loc 1 1288 0 discriminator 2
 1490 00b6 0134     		add	r4, r4, #1
 1491              	.LVL150:
 1492 00b8 01E0     		b	.L106
 1493              	.LVL151:
 1494              	.L116:
 1495 00ba 0027     		mov	r7, #0
 1496 00bc 0024     		mov	r4, #0
 1497              	.LVL152:
 1498              	.L106:
1288:.\Generated_Source\PSoC4/ADC.c **** 		{      
 1499              		.loc 1 1288 0 is_stmt 0 discriminator 1
 1500 00be 022C     		cmp	r4, #2
 1501 00c0 A6D9     		bls	.L113
1340:.\Generated_Source\PSoC4/ADC.c **** 			}
1341:.\Generated_Source\PSoC4/ADC.c **** 		} /* for(chNum = 0ul; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++) */
1342:.\Generated_Source\PSoC4/ADC.c ****         
1343:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_IRQ_REMOVE == 0u)
1344:.\Generated_Source\PSoC4/ADC.c ****             /* Start and set interrupt vector */
1345:.\Generated_Source\PSoC4/ADC.c ****             CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
 1502              		.loc 1 1345 0 is_stmt 1
 1503 00c2 0F20     		mov	r0, #15
 1504 00c4 0021     		mov	r1, #0
 1505 00c6 FFF7FEFF 		bl	CyIntSetPriority
 1506              	.LVL153:
1346:.\Generated_Source\PSoC4/ADC.c ****             (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 1507              		.loc 1 1346 0
 1508 00ca 0F20     		mov	r0, #15
 1509 00cc 1649     		ldr	r1, .L119+24
 1510 00ce FFF7FEFF 		bl	CyIntSetVector
 1511              	.LVL154:
1347:.\Generated_Source\PSoC4/ADC.c ****         #endif   /* End ADC_IRQ_REMOVE */
1348:.\Generated_Source\PSoC4/ADC.c ****         
1349:.\Generated_Source\PSoC4/ADC.c ****         /* Initialize the channel enable masks for each configuration */
1350:.\Generated_Source\PSoC4/ADC.c ****         for(configNum=0u; configNum < ADC_TOTAL_CONFIGS; configNum++)
 1512              		.loc 1 1350 0
 1513 00d2 0023     		mov	r3, #0
 1514 00d4 0AE0     		b	.L114
 1515              	.LVL155:
 1516              	.L115:
1351:.\Generated_Source\PSoC4/ADC.c **** 		{
1352:.\Generated_Source\PSoC4/ADC.c **** 			ADC_channelEnMasks[configNum] = ADC_allConfigs[configNum].chanEn;
 1517              		.loc 1 1352 0 discriminator 3
 1518 00d6 DA00     		lsl	r2, r3, #3
 1519 00d8 D21A     		sub	r2, r2, r3
 1520 00da D200     		lsl	r2, r2, #3
 1521 00dc 0E49     		ldr	r1, .L119+8
 1522 00de 8A18     		add	r2, r1, r2
 1523 00e0 116A     		ldr	r1, [r2, #32]
 1524 00e2 9A00     		lsl	r2, r3, #2
 1525 00e4 0A48     		ldr	r0, .L119
 1526 00e6 8218     		add	r2, r0, r2
 1527 00e8 5160     		str	r1, [r2, #4]
1350:.\Generated_Source\PSoC4/ADC.c **** 		{
 1528              		.loc 1 1350 0 discriminator 3
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 53


 1529 00ea 0133     		add	r3, r3, #1
 1530              	.LVL156:
 1531              	.L114:
1350:.\Generated_Source\PSoC4/ADC.c **** 		{
 1532              		.loc 1 1350 0 is_stmt 0 discriminator 1
 1533 00ec 002B     		cmp	r3, #0
 1534 00ee F2D0     		beq	.L115
1353:.\Generated_Source\PSoC4/ADC.c **** 		}
1354:.\Generated_Source\PSoC4/ADC.c ****         
1355:.\Generated_Source\PSoC4/ADC.c ****         #if(0u != ADC_ANY_CONFIG_USES_FILTER)		
1356:.\Generated_Source\PSoC4/ADC.c **** 		    /* Configure the common filter settings if any configuration filters */
1357:.\Generated_Source\PSoC4/ADC.c **** 		    ADC_UABH_A_Init(&ADC_UABH_A_FILTER_config);
1358:.\Generated_Source\PSoC4/ADC.c **** 		    ADC_UABH_B_Init(&ADC_UABH_B_FILTER_config);
1359:.\Generated_Source\PSoC4/ADC.c ****             ADC_FILTERAGND2SAR_BUFFER_Init();
1360:.\Generated_Source\PSoC4/ADC.c ****             /* Set several of the UAB switches or buffers based on what source is used as Vagnd/Vre
1361:.\Generated_Source\PSoC4/ADC.c ****             #if ADC_UABH_A_halfuab__VAGND_SRC != ADC_UABH_A_halfuab__SRC_AGNDBUF
1362:.\Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_SetStaticSwitch(ADC_SW_EXTAGND, CyUAB_SW_CLOSED);
1363:.\Generated_Source\PSoC4/ADC.c ****             #else
1364:.\Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_SetAgndPower(CyUAB_PWR_HIGH);
1365:.\Generated_Source\PSoC4/ADC.c ****             #endif
1366:.\Generated_Source\PSoC4/ADC.c ****             
1367:.\Generated_Source\PSoC4/ADC.c ****             /* Control UAB filter output switch with PHI3 "11" (always closed). */
1368:.\Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_SRAM0_REG |= 0x4u;
1369:.\Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_SRAM1_REG |= 0x4u;
1370:.\Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_SetSwitch(CyUAB_SW_PO, CyUAB_CLK_PHI3);
1371:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
1372:.\Generated_Source\PSoC4/ADC.c ****         
1373:.\Generated_Source\PSoC4/ADC.c ****         /* Initialize configuration zero if SelectConfig has not been called */
1374:.\Generated_Source\PSoC4/ADC.c ****         if(0u == ADC_selected)
 1535              		.loc 1 1374 0 is_stmt 1
 1536 00f0 074B     		ldr	r3, .L119
 1537              	.LVL157:
 1538 00f2 5B7A     		ldrb	r3, [r3, #9]
 1539 00f4 002B     		cmp	r3, #0
 1540 00f6 08D1     		bne	.L105
1375:.\Generated_Source\PSoC4/ADC.c **** 	    {
1376:.\Generated_Source\PSoC4/ADC.c ****             ADC_selected = 1u;
 1541              		.loc 1 1376 0
 1542 00f8 054C     		ldr	r4, .L119
 1543              	.LVL158:
 1544 00fa 0133     		add	r3, r3, #1
 1545 00fc 6372     		strb	r3, [r4, #9]
 1546              	.LVL159:
1377:.\Generated_Source\PSoC4/ADC.c ****             configNum = 0u;
1378:.\Generated_Source\PSoC4/ADC.c ****             /* Change Vref selection if is was routed by Creator */
1379:.\Generated_Source\PSoC4/ADC.c ****             #if (ADC_VREF_ROUTED)
1380:.\Generated_Source\PSoC4/ADC.c ****             ADC_vrefAMux_Select((uint8)configNum);
1381:.\Generated_Source\PSoC4/ADC.c ****             #endif
1382:.\Generated_Source\PSoC4/ADC.c ****             ADC_InitConfig(&ADC_allConfigs[configNum]);
 1547              		.loc 1 1382 0
 1548 00fe 0648     		ldr	r0, .L119+8
 1549 0100 FFF7FEFF 		bl	ADC_InitConfig
 1550              	.LVL160:
1383:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_CHAN_EN_REG = ADC_channelEnMasks[configNum];
 1551              		.loc 1 1383 0
 1552 0104 6268     		ldr	r2, [r4, #4]
 1553 0106 094B     		ldr	r3, .L119+28
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 54


 1554 0108 1A60     		str	r2, [r3]
 1555              	.LVL161:
 1556              	.L105:
1384:.\Generated_Source\PSoC4/ADC.c ****             #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
1385:.\Generated_Source\PSoC4/ADC.c ****                 ADC_filterVinMux_Select((uint8)configNum);
1386:.\Generated_Source\PSoC4/ADC.c ****             #endif
1387:.\Generated_Source\PSoC4/ADC.c ****         }           
1388:.\Generated_Source\PSoC4/ADC.c **** 	}
1389:.\Generated_Source\PSoC4/ADC.c ****     return;
1390:.\Generated_Source\PSoC4/ADC.c **** }
 1557              		.loc 1 1390 0
 1558              		@ sp needed
 1559 010a 04BC     		pop	{r2}
 1560 010c 9046     		mov	r8, r2
 1561 010e F0BD     		pop	{r4, r5, r6, r7, pc}
 1562              	.L120:
 1563              		.align	2
 1564              	.L119:
 1565 0110 00000000 		.word	.LANCHOR0
 1566 0114 00000000 		.word	.LANCHOR1
 1567 0118 00000000 		.word	ADC_allConfigs
 1568 011c 00000000 		.word	ADC_offset
 1569 0120 10270000 		.word	10000
 1570 0124 00000000 		.word	ADC_countsPer10Volt
 1571 0128 00000000 		.word	ADC_ISR
 1572 012c 20003A40 		.word	1077542944
 1573              		.cfi_endproc
 1574              	.LFE24:
 1575              		.size	ADC_Init, .-ADC_Init
 1576              		.section	.text.ADC_Enable,"ax",%progbits
 1577              		.align	2
 1578              		.global	ADC_Enable
 1579              		.code	16
 1580              		.thumb_func
 1581              		.type	ADC_Enable, %function
 1582              	ADC_Enable:
 1583              	.LFB25:
1391:.\Generated_Source\PSoC4/ADC.c **** 
1392:.\Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
1393:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Enable
1394:.\Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
1395:.\Generated_Source\PSoC4/ADC.c **** *
1396:.\Generated_Source\PSoC4/ADC.c **** * \brief Enables the component. 
1397:.\Generated_Source\PSoC4/ADC.c **** *
1398:.\Generated_Source\PSoC4/ADC.c **** * \param None
1399:.\Generated_Source\PSoC4/ADC.c **** * 
1400:.\Generated_Source\PSoC4/ADC.c **** * \return None
1401:.\Generated_Source\PSoC4/ADC.c **** * 
1402:.\Generated_Source\PSoC4/ADC.c **** * \sideeffect
1403:.\Generated_Source\PSoC4/ADC.c **** *  None
1404:.\Generated_Source\PSoC4/ADC.c **** *
1405:.\Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1406:.\Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Enable
1407:.\Generated_Source\PSoC4/ADC.c **** *
1408:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1409:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void) 
1410:.\Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 55


 1584              		.loc 1 1410 0
 1585              		.cfi_startproc
 1586 0000 08B5     		push	{r3, lr}
 1587              		.cfi_def_cfa_offset 8
 1588              		.cfi_offset 3, -8
 1589              		.cfi_offset 14, -4
1411:.\Generated_Source\PSoC4/ADC.c **** 
1412:.\Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
1413:.\Generated_Source\PSoC4/ADC.c ****     	if((ADC_allConfigs[ADC_currentConfig].miscConfig
1414:.\Generated_Source\PSoC4/ADC.c ****     		& ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
1415:.\Generated_Source\PSoC4/ADC.c ****     		== ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
1416:.\Generated_Source\PSoC4/ADC.c ****     	{
1417:.\Generated_Source\PSoC4/ADC.c ****             ADC_FILTERAGND2SAR_BUFFER_Enable();
1418:.\Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_A_Enable();
1419:.\Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_B_Enable();
1420:.\Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_SetModbitSource(31u, 31u);
1421:.\Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_SetModbitSource(31u, 31u);
1422:.\Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_SetStartupDelay(ADC_allConfigs[ADC_currentConfig].filterStartDelay);
1423:.\Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_SetStartupDelay(ADC_allConfigs[ADC_currentConfig].filterStartDelay);
1424:.\Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_Run(1u);
1425:.\Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_Run(1u);
1426:.\Generated_Source\PSoC4/ADC.c ****     	}
1427:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
1428:.\Generated_Source\PSoC4/ADC.c ****         
1429:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_SAR_CTRL_ENABLED_MSK))
 1590              		.loc 1 1429 0
 1591 0002 094B     		ldr	r3, .L124
 1592 0004 1B68     		ldr	r3, [r3]
 1593 0006 002B     		cmp	r3, #0
 1594 0008 0CDB     		blt	.L121
 1595              	.L123:
1430:.\Generated_Source\PSoC4/ADC.c ****     {
1431:.\Generated_Source\PSoC4/ADC.c ****         while (0u != (ADC_SAR_STATUS_REG & ADC_BUSY_MSK))
 1596              		.loc 1 1431 0 discriminator 1
 1597 000a 084B     		ldr	r3, .L124+4
 1598 000c 1B68     		ldr	r3, [r3]
 1599 000e 002B     		cmp	r3, #0
 1600 0010 FBDB     		blt	.L123
1432:.\Generated_Source\PSoC4/ADC.c ****         {
1433:.\Generated_Source\PSoC4/ADC.c ****             /* wait for SAR to go idle to avoid deadlock */
1434:.\Generated_Source\PSoC4/ADC.c ****         }
1435:.\Generated_Source\PSoC4/ADC.c ****         
1436:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_SAR_CTRL_ENABLED_MSK;
 1601              		.loc 1 1436 0
 1602 0012 054A     		ldr	r2, .L124
 1603 0014 1368     		ldr	r3, [r2]
 1604 0016 8021     		mov	r1, #128
 1605 0018 0906     		lsl	r1, r1, #24
 1606 001a 0B43     		orr	r3, r1
 1607 001c 1360     		str	r3, [r2]
1437:.\Generated_Source\PSoC4/ADC.c ****         
1438:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
1439:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);
 1608              		.loc 1 1439 0
 1609 001e 0A20     		mov	r0, #10
 1610 0020 FFF7FEFF 		bl	CyDelayUs
 1611              	.LVL162:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 56


 1612              	.L121:
1440:.\Generated_Source\PSoC4/ADC.c ****     }
1441:.\Generated_Source\PSoC4/ADC.c ****     return;
1442:.\Generated_Source\PSoC4/ADC.c **** }
 1613              		.loc 1 1442 0
 1614              		@ sp needed
 1615 0024 08BD     		pop	{r3, pc}
 1616              	.L125:
 1617 0026 C046     		.align	2
 1618              	.L124:
 1619 0028 00003A40 		.word	1077542912
 1620 002c A0023A40 		.word	1077543584
 1621              		.cfi_endproc
 1622              	.LFE25:
 1623              		.size	ADC_Enable, .-ADC_Enable
 1624              		.section	.text.ADC_Start,"ax",%progbits
 1625              		.align	2
 1626              		.global	ADC_Start
 1627              		.code	16
 1628              		.thumb_func
 1629              		.type	ADC_Start, %function
 1630              	ADC_Start:
 1631              	.LFB1:
 198:.\Generated_Source\PSoC4/ADC.c ****     if (1u != (1u & ADC_initVar))
 1632              		.loc 1 198 0
 1633              		.cfi_startproc
 1634 0000 08B5     		push	{r3, lr}
 1635              		.cfi_def_cfa_offset 8
 1636              		.cfi_offset 3, -8
 1637              		.cfi_offset 14, -4
 199:.\Generated_Source\PSoC4/ADC.c ****     {
 1638              		.loc 1 199 0
 1639 0002 074B     		ldr	r3, .L128
 1640 0004 1B7A     		ldrb	r3, [r3, #8]
 1641 0006 DB07     		lsl	r3, r3, #31
 1642 0008 06D4     		bmi	.L127
 201:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar |= 1u;
 1643              		.loc 1 201 0
 1644 000a FFF7FEFF 		bl	ADC_Init
 1645              	.LVL163:
 202:.\Generated_Source\PSoC4/ADC.c ****     }
 1646              		.loc 1 202 0
 1647 000e 044A     		ldr	r2, .L128
 1648 0010 117A     		ldrb	r1, [r2, #8]
 1649 0012 0123     		mov	r3, #1
 1650 0014 0B43     		orr	r3, r1
 1651 0016 1372     		strb	r3, [r2, #8]
 1652              	.L127:
 205:.\Generated_Source\PSoC4/ADC.c ****     
 1653              		.loc 1 205 0
 1654 0018 FFF7FEFF 		bl	ADC_Enable
 1655              	.LVL164:
 208:.\Generated_Source\PSoC4/ADC.c **** 
 1656              		.loc 1 208 0
 1657              		@ sp needed
 1658 001c 08BD     		pop	{r3, pc}
 1659              	.L129:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 57


 1660 001e C046     		.align	2
 1661              	.L128:
 1662 0020 00000000 		.word	.LANCHOR0
 1663              		.cfi_endproc
 1664              	.LFE1:
 1665              		.size	ADC_Start, .-ADC_Start
 1666              		.section	.text.ADC_StartEx,"ax",%progbits
 1667              		.align	2
 1668              		.global	ADC_StartEx
 1669              		.code	16
 1670              		.thumb_func
 1671              		.type	ADC_StartEx, %function
 1672              	ADC_StartEx:
 1673              	.LFB2:
 230:.\Generated_Source\PSoC4/ADC.c ****     ADC_Start();
 1674              		.loc 1 230 0
 1675              		.cfi_startproc
 1676              	.LVL165:
 1677 0000 10B5     		push	{r4, lr}
 1678              		.cfi_def_cfa_offset 8
 1679              		.cfi_offset 4, -8
 1680              		.cfi_offset 14, -4
 1681 0002 041C     		mov	r4, r0
 231:.\Generated_Source\PSoC4/ADC.c ****     ADC_IRQ_StartEx(address);
 1682              		.loc 1 231 0
 1683 0004 FFF7FEFF 		bl	ADC_Start
 1684              	.LVL166:
 232:.\Generated_Source\PSoC4/ADC.c ****     return;
 1685              		.loc 1 232 0
 1686 0008 201C     		mov	r0, r4
 1687 000a FFF7FEFF 		bl	ADC_IRQ_StartEx
 1688              	.LVL167:
 234:.\Generated_Source\PSoC4/ADC.c **** 
 1689              		.loc 1 234 0
 1690              		@ sp needed
 1691              	.LVL168:
 1692 000e 10BD     		pop	{r4, pc}
 1693              		.cfi_endproc
 1694              	.LFE2:
 1695              		.size	ADC_StartEx, .-ADC_StartEx
 1696              		.section	.text.ADC_SelectConfig,"ax",%progbits
 1697              		.align	2
 1698              		.global	ADC_SelectConfig
 1699              		.code	16
 1700              		.thumb_func
 1701              		.type	ADC_SelectConfig, %function
 1702              	ADC_SelectConfig:
 1703              	.LFB5:
 399:.\Generated_Source\PSoC4/ADC.c ****     /* Check whether the configuration number is valid or not */
 1704              		.loc 1 399 0
 1705              		.cfi_startproc
 1706              	.LVL169:
 1707 0000 38B5     		push	{r3, r4, r5, lr}
 1708              		.cfi_def_cfa_offset 16
 1709              		.cfi_offset 3, -16
 1710              		.cfi_offset 4, -12
 1711              		.cfi_offset 5, -8
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 58


 1712              		.cfi_offset 14, -4
 401:.\Generated_Source\PSoC4/ADC.c ****     {
 1713              		.loc 1 401 0
 1714 0002 0028     		cmp	r0, #0
 1715 0004 1FD1     		bne	.L131
 1716 0006 0D1C     		mov	r5, r1
 1717 0008 041C     		mov	r4, r0
 404:.\Generated_Source\PSoC4/ADC.c ****         ADC_selected = 1u;
 1718              		.loc 1 404 0
 1719 000a FFF7FEFF 		bl	ADC_Stop
 1720              	.LVL170:
 405:.\Generated_Source\PSoC4/ADC.c ****         
 1721              		.loc 1 405 0
 1722 000e 0E4B     		ldr	r3, .L134
 1723 0010 0122     		mov	r2, #1
 1724 0012 5A72     		strb	r2, [r3, #9]
 407:.\Generated_Source\PSoC4/ADC.c ****     	{
 1725              		.loc 1 407 0
 1726 0014 1B7A     		ldrb	r3, [r3, #8]
 1727 0016 002B     		cmp	r3, #0
 1728 0018 01D1     		bne	.L133
 409:.\Generated_Source\PSoC4/ADC.c ****     	}
 1729              		.loc 1 409 0
 1730 001a FFF7FEFF 		bl	ADC_Init
 1731              	.LVL171:
 1732              	.L133:
 414:.\Generated_Source\PSoC4/ADC.c ****         #if(0u != ADC_ANY_CONFIG_USES_FILTER)
 1733              		.loc 1 414 0
 1734 001e E300     		lsl	r3, r4, #3
 1735 0020 1B1B     		sub	r3, r3, r4
 1736 0022 DB00     		lsl	r3, r3, #3
 1737 0024 0948     		ldr	r0, .L134+4
 1738 0026 1818     		add	r0, r3, r0
 1739 0028 FFF7FEFF 		bl	ADC_InitConfig
 1740              	.LVL172:
 418:.\Generated_Source\PSoC4/ADC.c ****     	ADC_currentConfig = config;
 1741              		.loc 1 418 0
 1742 002c 064A     		ldr	r2, .L134
 1743 002e A300     		lsl	r3, r4, #2
 1744 0030 D318     		add	r3, r2, r3
 1745 0032 5968     		ldr	r1, [r3, #4]
 1746 0034 064B     		ldr	r3, .L134+8
 1747 0036 1960     		str	r1, [r3]
 419:.\Generated_Source\PSoC4/ADC.c ****         
 1748              		.loc 1 419 0
 1749 0038 1460     		str	r4, [r2]
 421:.\Generated_Source\PSoC4/ADC.c ****         {
 1750              		.loc 1 421 0
 1751 003a 012D     		cmp	r5, #1
 1752 003c 03D1     		bne	.L131
 424:.\Generated_Source\PSoC4/ADC.c ****             
 1753              		.loc 1 424 0
 1754 003e FFF7FEFF 		bl	ADC_Start
 1755              	.LVL173:
 427:.\Generated_Source\PSoC4/ADC.c ****         }
 1756              		.loc 1 427 0
 1757 0042 FFF7FEFF 		bl	ADC_StartConvert
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 59


 1758              	.LVL174:
 1759              	.L131:
 431:.\Generated_Source\PSoC4/ADC.c **** 
 1760              		.loc 1 431 0
 1761              		@ sp needed
 1762 0046 38BD     		pop	{r3, r4, r5, pc}
 1763              	.L135:
 1764              		.align	2
 1765              	.L134:
 1766 0048 00000000 		.word	.LANCHOR0
 1767 004c 00000000 		.word	ADC_allConfigs
 1768 0050 20003A40 		.word	1077542944
 1769              		.cfi_endproc
 1770              	.LFE5:
 1771              		.size	ADC_SelectConfig, .-ADC_SelectConfig
 1772              		.section	.text.ADC_StopConvert,"ax",%progbits
 1773              		.align	2
 1774              		.global	ADC_StopConvert
 1775              		.code	16
 1776              		.thumb_func
 1777              		.type	ADC_StopConvert, %function
 1778              	ADC_StopConvert:
 1779              	.LFB7:
 498:.\Generated_Source\PSoC4/ADC.c ****     if((ADC_SAR_SAMPLE_CTRL_REG  
 1780              		.loc 1 498 0
 1781              		.cfi_startproc
 1782 0000 08B5     		push	{r3, lr}
 1783              		.cfi_def_cfa_offset 8
 1784              		.cfi_offset 3, -8
 1785              		.cfi_offset 14, -4
 499:.\Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 1786              		.loc 1 499 0
 1787 0002 0C4B     		ldr	r3, .L138
 1788 0004 1B68     		ldr	r3, [r3]
 1789 0006 5B03     		lsl	r3, r3, #13
 1790 0008 12D5     		bpl	.L136
 503:.\Generated_Source\PSoC4/ADC.c ****         
 1791              		.loc 1 503 0
 1792 000a 0A4A     		ldr	r2, .L138
 1793 000c 1168     		ldr	r1, [r2]
 1794 000e 0A4B     		ldr	r3, .L138+4
 1795 0010 0B40     		and	r3, r1
 1796 0012 1360     		str	r3, [r2]
 505:.\Generated_Source\PSoC4/ADC.c ****             & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 1797              		.loc 1 505 0
 1798 0014 094B     		ldr	r3, .L138+8
 1799 0016 1A68     		ldr	r2, [r3]
 1800 0018 D300     		lsl	r3, r2, #3
 1801 001a 9B1A     		sub	r3, r3, r2
 1802 001c DB00     		lsl	r3, r3, #3
 1803 001e 084A     		ldr	r2, .L138+12
 1804 0020 D318     		add	r3, r2, r3
 1805 0022 1B6B     		ldr	r3, [r3, #48]
 1806 0024 9B07     		lsl	r3, r3, #30
 1807 0026 03D5     		bpl	.L136
 510:.\Generated_Source\PSoC4/ADC.c ****             ADC_Start();
 1808              		.loc 1 510 0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 60


 1809 0028 FFF7FEFF 		bl	ADC_Stop
 1810              	.LVL175:
 511:.\Generated_Source\PSoC4/ADC.c ****         }
 1811              		.loc 1 511 0
 1812 002c FFF7FEFF 		bl	ADC_Start
 1813              	.LVL176:
 1814              	.L136:
 516:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 1815              		.loc 1 516 0
 1816              		@ sp needed
 1817 0030 08BD     		pop	{r3, pc}
 1818              	.L139:
 1819 0032 C046     		.align	2
 1820              	.L138:
 1821 0034 04003A40 		.word	1077542916
 1822 0038 FFFFFEFF 		.word	-65537
 1823 003c 00000000 		.word	.LANCHOR0
 1824 0040 00000000 		.word	ADC_allConfigs
 1825              		.cfi_endproc
 1826              	.LFE7:
 1827              		.size	ADC_StopConvert, .-ADC_StopConvert
 1828              		.comm	ADC_countsPer10Volt,12,4
 1829              		.comm	ADC_offset,6,4
 1830              		.global	ADC_selected
 1831              		.global	ADC_initVar
 1832              		.section	.rodata
 1833              		.align	2
 1834              		.set	.LANCHOR1,. + 0
 1835              		.type	ADC_channelsConfig, %object
 1836              		.size	ADC_channelsConfig, 12
 1837              	ADC_channelsConfig:
 1838 0000 00150000 		.word	5376
 1839 0004 00020000 		.word	512
 1840 0008 00100000 		.word	4096
 1841              		.bss
 1842              		.align	2
 1843              		.set	.LANCHOR0,. + 0
 1844              		.type	ADC_currentConfig, %object
 1845              		.size	ADC_currentConfig, 4
 1846              	ADC_currentConfig:
 1847 0000 00000000 		.space	4
 1848              		.type	ADC_channelEnMasks, %object
 1849              		.size	ADC_channelEnMasks, 4
 1850              	ADC_channelEnMasks:
 1851 0004 00000000 		.space	4
 1852              		.type	ADC_initVar, %object
 1853              		.size	ADC_initVar, 1
 1854              	ADC_initVar:
 1855 0008 00       		.space	1
 1856              		.type	ADC_selected, %object
 1857              		.size	ADC_selected, 1
 1858              	ADC_selected:
 1859 0009 00       		.space	1
 1860 000a 0000     		.text
 1861              	.Letext0:
 1862              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1863              		.file 3 ".\\Generated_Source\\PSoC4\\ADC.h"
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 61


 1864              		.file 4 ".\\Generated_Source\\PSoC4\\ADC_intSarClock.h"
 1865              		.file 5 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1866              		.file 6 ".\\Generated_Source\\PSoC4\\ADC_IRQ.h"
 1867              		.section	.debug_info,"",%progbits
 1868              	.Ldebug_info0:
 1869 0000 110A0000 		.4byte	0xa11
 1870 0004 0400     		.2byte	0x4
 1871 0006 00000000 		.4byte	.Ldebug_abbrev0
 1872 000a 04       		.byte	0x4
 1873 000b 01       		.uleb128 0x1
 1874 000c 73050000 		.4byte	.LASF103
 1875 0010 01       		.byte	0x1
 1876 0011 B0030000 		.4byte	.LASF104
 1877 0015 0F000000 		.4byte	.LASF105
 1878 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1879 001d 00000000 		.4byte	0
 1880 0021 00000000 		.4byte	.Ldebug_line0
 1881 0025 02       		.uleb128 0x2
 1882 0026 01       		.byte	0x1
 1883 0027 06       		.byte	0x6
 1884 0028 DA000000 		.4byte	.LASF0
 1885 002c 02       		.uleb128 0x2
 1886 002d 01       		.byte	0x1
 1887 002e 08       		.byte	0x8
 1888 002f CF030000 		.4byte	.LASF1
 1889 0033 02       		.uleb128 0x2
 1890 0034 02       		.byte	0x2
 1891 0035 05       		.byte	0x5
 1892 0036 FB030000 		.4byte	.LASF2
 1893 003a 02       		.uleb128 0x2
 1894 003b 02       		.byte	0x2
 1895 003c 07       		.byte	0x7
 1896 003d 28020000 		.4byte	.LASF3
 1897 0041 02       		.uleb128 0x2
 1898 0042 04       		.byte	0x4
 1899 0043 05       		.byte	0x5
 1900 0044 17010000 		.4byte	.LASF4
 1901 0048 02       		.uleb128 0x2
 1902 0049 04       		.byte	0x4
 1903 004a 07       		.byte	0x7
 1904 004b F7010000 		.4byte	.LASF5
 1905 004f 02       		.uleb128 0x2
 1906 0050 08       		.byte	0x8
 1907 0051 05       		.byte	0x5
 1908 0052 CC000000 		.4byte	.LASF6
 1909 0056 02       		.uleb128 0x2
 1910 0057 08       		.byte	0x8
 1911 0058 07       		.byte	0x7
 1912 0059 90000000 		.4byte	.LASF7
 1913 005d 03       		.uleb128 0x3
 1914 005e 04       		.byte	0x4
 1915 005f 05       		.byte	0x5
 1916 0060 696E7400 		.ascii	"int\000"
 1917 0064 02       		.uleb128 0x2
 1918 0065 04       		.byte	0x4
 1919 0066 07       		.byte	0x7
 1920 0067 D3010000 		.4byte	.LASF8
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 62


 1921 006b 04       		.uleb128 0x4
 1922 006c 48010000 		.4byte	.LASF9
 1923 0070 02       		.byte	0x2
 1924 0071 9801     		.2byte	0x198
 1925 0073 2C000000 		.4byte	0x2c
 1926 0077 04       		.uleb128 0x4
 1927 0078 00000000 		.4byte	.LASF10
 1928 007c 02       		.byte	0x2
 1929 007d 9901     		.2byte	0x199
 1930 007f 3A000000 		.4byte	0x3a
 1931 0083 04       		.uleb128 0x4
 1932 0084 8E010000 		.4byte	.LASF11
 1933 0088 02       		.byte	0x2
 1934 0089 9A01     		.2byte	0x19a
 1935 008b 48000000 		.4byte	0x48
 1936 008f 04       		.uleb128 0x4
 1937 0090 25050000 		.4byte	.LASF12
 1938 0094 02       		.byte	0x2
 1939 0095 9C01     		.2byte	0x19c
 1940 0097 33000000 		.4byte	0x33
 1941 009b 04       		.uleb128 0x4
 1942 009c F1000000 		.4byte	.LASF13
 1943 00a0 02       		.byte	0x2
 1944 00a1 9D01     		.2byte	0x19d
 1945 00a3 41000000 		.4byte	0x41
 1946 00a7 04       		.uleb128 0x4
 1947 00a8 B9020000 		.4byte	.LASF14
 1948 00ac 02       		.byte	0x2
 1949 00ad 9E01     		.2byte	0x19e
 1950 00af B3000000 		.4byte	0xb3
 1951 00b3 02       		.uleb128 0x2
 1952 00b4 04       		.byte	0x4
 1953 00b5 04       		.byte	0x4
 1954 00b6 6E030000 		.4byte	.LASF15
 1955 00ba 02       		.uleb128 0x2
 1956 00bb 08       		.byte	0x8
 1957 00bc 04       		.byte	0x4
 1958 00bd 58010000 		.4byte	.LASF16
 1959 00c1 04       		.uleb128 0x4
 1960 00c2 3B030000 		.4byte	.LASF17
 1961 00c6 02       		.byte	0x2
 1962 00c7 A301     		.2byte	0x1a3
 1963 00c9 4F000000 		.4byte	0x4f
 1964 00cd 02       		.uleb128 0x2
 1965 00ce 01       		.byte	0x1
 1966 00cf 08       		.byte	0x8
 1967 00d0 6B040000 		.4byte	.LASF18
 1968 00d4 04       		.uleb128 0x4
 1969 00d5 8D020000 		.4byte	.LASF19
 1970 00d9 02       		.byte	0x2
 1971 00da 4402     		.2byte	0x244
 1972 00dc E0000000 		.4byte	0xe0
 1973 00e0 05       		.uleb128 0x5
 1974 00e1 83000000 		.4byte	0x83
 1975 00e5 04       		.uleb128 0x4
 1976 00e6 75040000 		.4byte	.LASF20
 1977 00ea 02       		.byte	0x2
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 63


 1978 00eb 5402     		.2byte	0x254
 1979 00ed F1000000 		.4byte	0xf1
 1980 00f1 06       		.uleb128 0x6
 1981 00f2 04       		.byte	0x4
 1982 00f3 F7000000 		.4byte	0xf7
 1983 00f7 07       		.uleb128 0x7
 1984 00f8 02       		.uleb128 0x2
 1985 00f9 04       		.byte	0x4
 1986 00fa 07       		.byte	0x7
 1987 00fb C1020000 		.4byte	.LASF21
 1988 00ff 08       		.uleb128 0x8
 1989 0100 38       		.byte	0x38
 1990 0101 03       		.byte	0x3
 1991 0102 5E       		.byte	0x5e
 1992 0103 B0010000 		.4byte	0x1b0
 1993 0107 09       		.uleb128 0x9
 1994 0108 57050000 		.4byte	.LASF22
 1995 010c 03       		.byte	0x3
 1996 010d 60       		.byte	0x60
 1997 010e 83000000 		.4byte	0x83
 1998 0112 00       		.byte	0
 1999 0113 09       		.uleb128 0x9
 2000 0114 6D020000 		.4byte	.LASF23
 2001 0118 03       		.byte	0x3
 2002 0119 61       		.byte	0x61
 2003 011a 83000000 		.4byte	0x83
 2004 011e 04       		.byte	0x4
 2005 011f 09       		.uleb128 0x9
 2006 0120 E1040000 		.4byte	.LASF24
 2007 0124 03       		.byte	0x3
 2008 0125 62       		.byte	0x62
 2009 0126 83000000 		.4byte	0x83
 2010 012a 08       		.byte	0x8
 2011 012b 09       		.uleb128 0x9
 2012 012c 1A050000 		.4byte	.LASF25
 2013 0130 03       		.byte	0x3
 2014 0131 65       		.byte	0x65
 2015 0132 83000000 		.4byte	0x83
 2016 0136 0C       		.byte	0xc
 2017 0137 09       		.uleb128 0x9
 2018 0138 81010000 		.4byte	.LASF26
 2019 013c 03       		.byte	0x3
 2020 013d 66       		.byte	0x66
 2021 013e 83000000 		.4byte	0x83
 2022 0142 10       		.byte	0x10
 2023 0143 09       		.uleb128 0x9
 2024 0144 00030000 		.4byte	.LASF27
 2025 0148 03       		.byte	0x3
 2026 0149 67       		.byte	0x67
 2027 014a 83000000 		.4byte	0x83
 2028 014e 14       		.byte	0x14
 2029 014f 09       		.uleb128 0x9
 2030 0150 3B020000 		.4byte	.LASF28
 2031 0154 03       		.byte	0x3
 2032 0155 68       		.byte	0x68
 2033 0156 83000000 		.4byte	0x83
 2034 015a 18       		.byte	0x18
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 64


 2035 015b 09       		.uleb128 0x9
 2036 015c 05050000 		.4byte	.LASF29
 2037 0160 03       		.byte	0x3
 2038 0161 69       		.byte	0x69
 2039 0162 83000000 		.4byte	0x83
 2040 0166 1C       		.byte	0x1c
 2041 0167 09       		.uleb128 0x9
 2042 0168 92030000 		.4byte	.LASF30
 2043 016c 03       		.byte	0x3
 2044 016d 6A       		.byte	0x6a
 2045 016e 83000000 		.4byte	0x83
 2046 0172 20       		.byte	0x20
 2047 0173 09       		.uleb128 0x9
 2048 0174 E0010000 		.4byte	.LASF31
 2049 0178 03       		.byte	0x3
 2050 0179 6B       		.byte	0x6b
 2051 017a 83000000 		.4byte	0x83
 2052 017e 24       		.byte	0x24
 2053 017f 09       		.uleb128 0x9
 2054 0180 0D030000 		.4byte	.LASF32
 2055 0184 03       		.byte	0x3
 2056 0185 6C       		.byte	0x6c
 2057 0186 83000000 		.4byte	0x83
 2058 018a 28       		.byte	0x28
 2059 018b 09       		.uleb128 0x9
 2060 018c 5A040000 		.4byte	.LASF33
 2061 0190 03       		.byte	0x3
 2062 0191 6D       		.byte	0x6d
 2063 0192 9B000000 		.4byte	0x9b
 2064 0196 2C       		.byte	0x2c
 2065 0197 09       		.uleb128 0x9
 2066 0198 E6040000 		.4byte	.LASF34
 2067 019c 03       		.byte	0x3
 2068 019d 6F       		.byte	0x6f
 2069 019e 83000000 		.4byte	0x83
 2070 01a2 30       		.byte	0x30
 2071 01a3 09       		.uleb128 0x9
 2072 01a4 E6000000 		.4byte	.LASF35
 2073 01a8 03       		.byte	0x3
 2074 01a9 76       		.byte	0x76
 2075 01aa 77000000 		.4byte	0x77
 2076 01ae 34       		.byte	0x34
 2077 01af 00       		.byte	0
 2078 01b0 0A       		.uleb128 0xa
 2079 01b1 6F010000 		.4byte	.LASF36
 2080 01b5 03       		.byte	0x3
 2081 01b6 8B       		.byte	0x8b
 2082 01b7 FF000000 		.4byte	0xff
 2083 01bb 0B       		.uleb128 0xb
 2084 01bc EC020000 		.4byte	.LASF106
 2085 01c0 01       		.byte	0x1
 2086 01c1 B902     		.2byte	0x2b9
 2087 01c3 9B000000 		.4byte	0x9b
 2088 01c7 00000000 		.4byte	.LFB12
 2089 01cb 58000000 		.4byte	.LFE12-.LFB12
 2090 01cf 01       		.uleb128 0x1
 2091 01d0 9C       		.byte	0x9c
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 65


 2092 01d1 06020000 		.4byte	0x206
 2093 01d5 0C       		.uleb128 0xc
 2094 01d6 66040000 		.4byte	.LASF39
 2095 01da 01       		.byte	0x1
 2096 01db B902     		.2byte	0x2b9
 2097 01dd 83000000 		.4byte	0x83
 2098 01e1 00000000 		.4byte	.LLST0
 2099 01e5 0D       		.uleb128 0xd
 2100 01e6 93020000 		.4byte	.LASF37
 2101 01ea 01       		.byte	0x1
 2102 01eb BB02     		.2byte	0x2bb
 2103 01ed 9B000000 		.4byte	0x9b
 2104 01f1 21000000 		.4byte	.LLST1
 2105 01f5 0D       		.uleb128 0xd
 2106 01f6 79020000 		.4byte	.LASF38
 2107 01fa 01       		.byte	0x1
 2108 01fb BC02     		.2byte	0x2bc
 2109 01fd 83000000 		.4byte	0x83
 2110 0201 40000000 		.4byte	.LLST2
 2111 0205 00       		.byte	0
 2112 0206 0E       		.uleb128 0xe
 2113 0207 32040000 		.4byte	.LASF43
 2114 020b 01       		.byte	0x1
 2115 020c 0601     		.2byte	0x106
 2116 020e 00000000 		.4byte	.LFB3
 2117 0212 10000000 		.4byte	.LFE3-.LFB3
 2118 0216 01       		.uleb128 0x1
 2119 0217 9C       		.byte	0x9c
 2120 0218 0F       		.uleb128 0xf
 2121 0219 2C030000 		.4byte	.LASF45
 2122 021d 01       		.byte	0x1
 2123 021e 2601     		.2byte	0x126
 2124 0220 00000000 		.4byte	.LFB4
 2125 0224 00010000 		.4byte	.LFE4-.LFB4
 2126 0228 01       		.uleb128 0x1
 2127 0229 9C       		.byte	0x9c
 2128 022a 6E020000 		.4byte	0x26e
 2129 022e 0C       		.uleb128 0xc
 2130 022f 91040000 		.4byte	.LASF40
 2131 0233 01       		.byte	0x1
 2132 0234 2601     		.2byte	0x126
 2133 0236 6E020000 		.4byte	0x26e
 2134 023a 5E000000 		.4byte	.LLST3
 2135 023e 0D       		.uleb128 0xd
 2136 023f 54040000 		.4byte	.LASF41
 2137 0243 01       		.byte	0x1
 2138 0244 2801     		.2byte	0x128
 2139 0246 83000000 		.4byte	0x83
 2140 024a 8A000000 		.4byte	.LLST4
 2141 024e 0D       		.uleb128 0xd
 2142 024f 09020000 		.4byte	.LASF42
 2143 0253 01       		.byte	0x1
 2144 0254 2901     		.2byte	0x129
 2145 0256 83000000 		.4byte	0x83
 2146 025a A9000000 		.4byte	.LLST5
 2147 025e 10       		.uleb128 0x10
 2148 025f 0C000000 		.4byte	.LVL9
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 66


 2149 0263 9F090000 		.4byte	0x99f
 2150 0267 11       		.uleb128 0x11
 2151 0268 01       		.uleb128 0x1
 2152 0269 51       		.byte	0x51
 2153 026a 01       		.uleb128 0x1
 2154 026b 30       		.byte	0x30
 2155 026c 00       		.byte	0
 2156 026d 00       		.byte	0
 2157 026e 06       		.uleb128 0x6
 2158 026f 04       		.byte	0x4
 2159 0270 74020000 		.4byte	0x274
 2160 0274 12       		.uleb128 0x12
 2161 0275 B0010000 		.4byte	0x1b0
 2162 0279 0E       		.uleb128 0xe
 2163 027a BB000000 		.4byte	.LASF44
 2164 027e 01       		.byte	0x1
 2165 027f C701     		.2byte	0x1c7
 2166 0281 00000000 		.4byte	.LFB6
 2167 0285 28000000 		.4byte	.LFE6-.LFB6
 2168 0289 01       		.uleb128 0x1
 2169 028a 9C       		.byte	0x9c
 2170 028b 0F       		.uleb128 0xf
 2171 028c A6020000 		.4byte	.LASF46
 2172 0290 01       		.byte	0x1
 2173 0291 1B02     		.2byte	0x21b
 2174 0293 00000000 		.4byte	.LFB8
 2175 0297 28000000 		.4byte	.LFE8-.LFB8
 2176 029b 01       		.uleb128 0x1
 2177 029c 9C       		.byte	0x9c
 2178 029d B0020000 		.4byte	0x2b0
 2179 02a1 13       		.uleb128 0x13
 2180 02a2 70040000 		.4byte	.LASF47
 2181 02a6 01       		.byte	0x1
 2182 02a7 1B02     		.2byte	0x21b
 2183 02a9 83000000 		.4byte	0x83
 2184 02ad 01       		.uleb128 0x1
 2185 02ae 50       		.byte	0x50
 2186 02af 00       		.byte	0
 2187 02b0 0F       		.uleb128 0xf
 2188 02b1 81000000 		.4byte	.LASF48
 2189 02b5 01       		.byte	0x1
 2190 02b6 5B02     		.2byte	0x25b
 2191 02b8 00000000 		.4byte	.LFB9
 2192 02bc 10000000 		.4byte	.LFE9-.LFB9
 2193 02c0 01       		.uleb128 0x1
 2194 02c1 9C       		.byte	0x9c
 2195 02c2 D7020000 		.4byte	0x2d7
 2196 02c6 0C       		.uleb128 0xc
 2197 02c7 A4010000 		.4byte	.LASF49
 2198 02cb 01       		.byte	0x1
 2199 02cc 5B02     		.2byte	0x25b
 2200 02ce 83000000 		.4byte	0x83
 2201 02d2 E3000000 		.4byte	.LLST6
 2202 02d6 00       		.byte	0
 2203 02d7 0F       		.uleb128 0xf
 2204 02d8 52030000 		.4byte	.LASF50
 2205 02dc 01       		.byte	0x1
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 67


 2206 02dd 7302     		.2byte	0x273
 2207 02df 00000000 		.4byte	.LFB10
 2208 02e3 1C000000 		.4byte	.LFE10-.LFB10
 2209 02e7 01       		.uleb128 0x1
 2210 02e8 9C       		.byte	0x9c
 2211 02e9 FE020000 		.4byte	0x2fe
 2212 02ed 0C       		.uleb128 0xc
 2213 02ee 84020000 		.4byte	.LASF51
 2214 02f2 01       		.byte	0x1
 2215 02f3 7302     		.2byte	0x273
 2216 02f5 83000000 		.4byte	0x83
 2217 02f9 04010000 		.4byte	.LLST7
 2218 02fd 00       		.byte	0
 2219 02fe 14       		.uleb128 0x14
 2220 02ff 18030000 		.4byte	.LASF54
 2221 0303 01       		.byte	0x1
 2222 0304 9302     		.2byte	0x293
 2223 0306 83000000 		.4byte	0x83
 2224 030a 00000000 		.4byte	.LFB11
 2225 030e 38000000 		.4byte	.LFE11-.LFB11
 2226 0312 01       		.uleb128 0x1
 2227 0313 9C       		.byte	0x9c
 2228 0314 49030000 		.4byte	0x349
 2229 0318 0C       		.uleb128 0xc
 2230 0319 BA010000 		.4byte	.LASF52
 2231 031d 01       		.byte	0x1
 2232 031e 9302     		.2byte	0x293
 2233 0320 83000000 		.4byte	0x83
 2234 0324 25010000 		.4byte	.LLST8
 2235 0328 0D       		.uleb128 0xd
 2236 0329 63050000 		.4byte	.LASF53
 2237 032d 01       		.byte	0x1
 2238 032e 9502     		.2byte	0x295
 2239 0330 83000000 		.4byte	0x83
 2240 0334 59010000 		.4byte	.LLST9
 2241 0338 15       		.uleb128 0x15
 2242 0339 77647400 		.ascii	"wdt\000"
 2243 033d 01       		.byte	0x1
 2244 033e 9602     		.2byte	0x296
 2245 0340 83000000 		.4byte	0x83
 2246 0344 8F010000 		.4byte	.LLST10
 2247 0348 00       		.byte	0
 2248 0349 14       		.uleb128 0x14
 2249 034a 05060000 		.4byte	.LASF55
 2250 034e 01       		.byte	0x1
 2251 034f E502     		.2byte	0x2e5
 2252 0351 8F000000 		.4byte	0x8f
 2253 0355 00000000 		.4byte	.LFB13
 2254 0359 2C000000 		.4byte	.LFE13-.LFB13
 2255 035d 01       		.uleb128 0x1
 2256 035e 9C       		.byte	0x9c
 2257 035f 93030000 		.4byte	0x393
 2258 0363 0C       		.uleb128 0xc
 2259 0364 66040000 		.4byte	.LASF39
 2260 0368 01       		.byte	0x1
 2261 0369 E502     		.2byte	0x2e5
 2262 036b 83000000 		.4byte	0x83
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 68


 2263 036f C2010000 		.4byte	.LLST11
 2264 0373 0D       		.uleb128 0xd
 2265 0374 9C020000 		.4byte	.LASF56
 2266 0378 01       		.byte	0x1
 2267 0379 E702     		.2byte	0x2e7
 2268 037b 83000000 		.4byte	0x83
 2269 037f 07020000 		.4byte	.LLST12
 2270 0383 10       		.uleb128 0x10
 2271 0384 0E000000 		.4byte	.LVL39
 2272 0388 B5090000 		.4byte	0x9b5
 2273 038c 11       		.uleb128 0x11
 2274 038d 01       		.uleb128 0x1
 2275 038e 50       		.byte	0x50
 2276 038f 01       		.uleb128 0x1
 2277 0390 30       		.byte	0x30
 2278 0391 00       		.byte	0
 2279 0392 00       		.byte	0
 2280 0393 14       		.uleb128 0x14
 2281 0394 5F010000 		.4byte	.LASF57
 2282 0398 01       		.byte	0x1
 2283 0399 0B03     		.2byte	0x30b
 2284 039b 9B000000 		.4byte	0x9b
 2285 039f 00000000 		.4byte	.LFB14
 2286 03a3 3C000000 		.4byte	.LFE14-.LFB14
 2287 03a7 01       		.uleb128 0x1
 2288 03a8 9C       		.byte	0x9c
 2289 03a9 11040000 		.4byte	0x411
 2290 03ad 0C       		.uleb128 0xc
 2291 03ae 66040000 		.4byte	.LASF39
 2292 03b2 01       		.byte	0x1
 2293 03b3 0B03     		.2byte	0x30b
 2294 03b5 83000000 		.4byte	0x83
 2295 03b9 25020000 		.4byte	.LLST13
 2296 03bd 0D       		.uleb128 0xd
 2297 03be 9C020000 		.4byte	.LASF56
 2298 03c2 01       		.byte	0x1
 2299 03c3 0D03     		.2byte	0x30d
 2300 03c5 83000000 		.4byte	0x83
 2301 03c9 51020000 		.4byte	.LLST14
 2302 03cd 0D       		.uleb128 0xd
 2303 03ce 48040000 		.4byte	.LASF58
 2304 03d2 01       		.byte	0x1
 2305 03d3 0E03     		.2byte	0x30e
 2306 03d5 8F000000 		.4byte	0x8f
 2307 03d9 6F020000 		.4byte	.LLST15
 2308 03dd 0D       		.uleb128 0xd
 2309 03de 56020000 		.4byte	.LASF59
 2310 03e2 01       		.byte	0x1
 2311 03e3 0F03     		.2byte	0x30f
 2312 03e5 9B000000 		.4byte	0x9b
 2313 03e9 82020000 		.4byte	.LLST16
 2314 03ed 16       		.uleb128 0x16
 2315 03ee 0E000000 		.4byte	.LVL47
 2316 03f2 B5090000 		.4byte	0x9b5
 2317 03f6 00040000 		.4byte	0x400
 2318 03fa 11       		.uleb128 0x11
 2319 03fb 01       		.uleb128 0x1
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 69


 2320 03fc 50       		.byte	0x50
 2321 03fd 01       		.uleb128 0x1
 2322 03fe 30       		.byte	0x30
 2323 03ff 00       		.byte	0
 2324 0400 10       		.uleb128 0x10
 2325 0401 2A000000 		.4byte	.LVL51
 2326 0405 BB010000 		.4byte	0x1bb
 2327 0409 11       		.uleb128 0x11
 2328 040a 01       		.uleb128 0x1
 2329 040b 50       		.byte	0x50
 2330 040c 02       		.uleb128 0x2
 2331 040d 75       		.byte	0x75
 2332 040e 00       		.sleb128 0
 2333 040f 00       		.byte	0
 2334 0410 00       		.byte	0
 2335 0411 0F       		.uleb128 0xf
 2336 0412 99030000 		.4byte	.LASF60
 2337 0416 01       		.byte	0x1
 2338 0417 3A03     		.2byte	0x33a
 2339 0419 00000000 		.4byte	.LFB15
 2340 041d 1C000000 		.4byte	.LFE15-.LFB15
 2341 0421 01       		.uleb128 0x1
 2342 0422 9C       		.byte	0x9c
 2343 0423 38040000 		.4byte	0x438
 2344 0427 0C       		.uleb128 0xc
 2345 0428 CA020000 		.4byte	.LASF61
 2346 042c 01       		.byte	0x1
 2347 042d 3A03     		.2byte	0x33a
 2348 042f 83000000 		.4byte	0x83
 2349 0433 A0020000 		.4byte	.LLST17
 2350 0437 00       		.byte	0
 2351 0438 0F       		.uleb128 0xf
 2352 0439 D3020000 		.4byte	.LASF62
 2353 043d 01       		.byte	0x1
 2354 043e 5103     		.2byte	0x351
 2355 0440 00000000 		.4byte	.LFB16
 2356 0444 18000000 		.4byte	.LFE16-.LFB16
 2357 0448 01       		.uleb128 0x1
 2358 0449 9C       		.byte	0x9c
 2359 044a 5F040000 		.4byte	0x45f
 2360 044e 0C       		.uleb128 0xc
 2361 044f 74030000 		.4byte	.LASF63
 2362 0453 01       		.byte	0x1
 2363 0454 5103     		.2byte	0x351
 2364 0456 83000000 		.4byte	0x83
 2365 045a C1020000 		.4byte	.LLST18
 2366 045e 00       		.byte	0
 2367 045f 0F       		.uleb128 0xf
 2368 0460 C2010000 		.4byte	.LASF64
 2369 0464 01       		.byte	0x1
 2370 0465 6C03     		.2byte	0x36c
 2371 0467 00000000 		.4byte	.LFB17
 2372 046b 10000000 		.4byte	.LFE17-.LFB17
 2373 046f 01       		.uleb128 0x1
 2374 0470 9C       		.byte	0x9c
 2375 0471 86040000 		.4byte	0x486
 2376 0475 0C       		.uleb128 0xc
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 70


 2377 0476 A4010000 		.4byte	.LASF49
 2378 047a 01       		.byte	0x1
 2379 047b 6C03     		.2byte	0x36c
 2380 047d 83000000 		.4byte	0x83
 2381 0481 E2020000 		.4byte	.LLST19
 2382 0485 00       		.byte	0
 2383 0486 0F       		.uleb128 0xf
 2384 0487 08010000 		.4byte	.LASF65
 2385 048b 01       		.byte	0x1
 2386 048c 8603     		.2byte	0x386
 2387 048e 00000000 		.4byte	.LFB18
 2388 0492 10000000 		.4byte	.LFE18-.LFB18
 2389 0496 01       		.uleb128 0x1
 2390 0497 9C       		.byte	0x9c
 2391 0498 AD040000 		.4byte	0x4ad
 2392 049c 0C       		.uleb128 0xc
 2393 049d A4010000 		.4byte	.LASF49
 2394 04a1 01       		.byte	0x1
 2395 04a2 8603     		.2byte	0x386
 2396 04a4 83000000 		.4byte	0x83
 2397 04a8 03030000 		.4byte	.LLST20
 2398 04ac 00       		.byte	0
 2399 04ad 0F       		.uleb128 0xf
 2400 04ae 39050000 		.4byte	.LASF66
 2401 04b2 01       		.byte	0x1
 2402 04b3 A203     		.2byte	0x3a2
 2403 04b5 00000000 		.4byte	.LFB19
 2404 04b9 34000000 		.4byte	.LFE19-.LFB19
 2405 04bd 01       		.uleb128 0x1
 2406 04be 9C       		.byte	0x9c
 2407 04bf F3040000 		.4byte	0x4f3
 2408 04c3 0C       		.uleb128 0xc
 2409 04c4 66040000 		.4byte	.LASF39
 2410 04c8 01       		.byte	0x1
 2411 04c9 A203     		.2byte	0x3a2
 2412 04cb 83000000 		.4byte	0x83
 2413 04cf 24030000 		.4byte	.LLST21
 2414 04d3 0C       		.uleb128 0xc
 2415 04d4 DA040000 		.4byte	.LASF67
 2416 04d8 01       		.byte	0x1
 2417 04d9 A203     		.2byte	0x3a2
 2418 04db 8F000000 		.4byte	0x8f
 2419 04df 50030000 		.4byte	.LLST22
 2420 04e3 10       		.uleb128 0x10
 2421 04e4 10000000 		.4byte	.LVL68
 2422 04e8 B5090000 		.4byte	0x9b5
 2423 04ec 11       		.uleb128 0x11
 2424 04ed 01       		.uleb128 0x1
 2425 04ee 50       		.byte	0x50
 2426 04ef 01       		.uleb128 0x1
 2427 04f0 30       		.byte	0x30
 2428 04f1 00       		.byte	0
 2429 04f2 00       		.byte	0
 2430 04f3 0F       		.uleb128 0xf
 2431 04f4 62030000 		.4byte	.LASF68
 2432 04f8 01       		.byte	0x1
 2433 04f9 C303     		.2byte	0x3c3
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 71


 2434 04fb 00000000 		.4byte	.LFB20
 2435 04ff 34000000 		.4byte	.LFE20-.LFB20
 2436 0503 01       		.uleb128 0x1
 2437 0504 9C       		.byte	0x9c
 2438 0505 39050000 		.4byte	0x539
 2439 0509 0C       		.uleb128 0xc
 2440 050a 66040000 		.4byte	.LASF39
 2441 050e 01       		.byte	0x1
 2442 050f C303     		.2byte	0x3c3
 2443 0511 83000000 		.4byte	0x83
 2444 0515 71030000 		.4byte	.LLST23
 2445 0519 0C       		.uleb128 0xc
 2446 051a 07000000 		.4byte	.LASF69
 2447 051e 01       		.byte	0x1
 2448 051f C303     		.2byte	0x3c3
 2449 0521 9B000000 		.4byte	0x9b
 2450 0525 9D030000 		.4byte	.LLST24
 2451 0529 10       		.uleb128 0x10
 2452 052a 10000000 		.4byte	.LVL72
 2453 052e B5090000 		.4byte	0x9b5
 2454 0532 11       		.uleb128 0x11
 2455 0533 01       		.uleb128 0x1
 2456 0534 50       		.byte	0x50
 2457 0535 01       		.uleb128 0x1
 2458 0536 30       		.byte	0x30
 2459 0537 00       		.byte	0
 2460 0538 00       		.byte	0
 2461 0539 17       		.uleb128 0x17
 2462 053a 53000000 		.4byte	.LASF70
 2463 053e 01       		.byte	0x1
 2464 053f E303     		.2byte	0x3e3
 2465 0541 A7000000 		.4byte	0xa7
 2466 0545 00000000 		.4byte	.LFB21
 2467 0549 B8000000 		.4byte	.LFE21-.LFB21
 2468 054d 01       		.uleb128 0x1
 2469 054e 9C       		.byte	0x9c
 2470 054f D7050000 		.4byte	0x5d7
 2471 0553 0C       		.uleb128 0xc
 2472 0554 66040000 		.4byte	.LASF39
 2473 0558 01       		.byte	0x1
 2474 0559 E303     		.2byte	0x3e3
 2475 055b 83000000 		.4byte	0x83
 2476 055f E3030000 		.4byte	.LLST25
 2477 0563 0C       		.uleb128 0xc
 2478 0564 F1040000 		.4byte	.LASF71
 2479 0568 01       		.byte	0x1
 2480 0569 E303     		.2byte	0x3e3
 2481 056b 8F000000 		.4byte	0x8f
 2482 056f 0F040000 		.4byte	.LLST26
 2483 0573 0D       		.uleb128 0xd
 2484 0574 3B040000 		.4byte	.LASF72
 2485 0578 01       		.byte	0x1
 2486 0579 E503     		.2byte	0x3e5
 2487 057b A7000000 		.4byte	0xa7
 2488 057f 6D040000 		.4byte	.LLST27
 2489 0583 0D       		.uleb128 0xd
 2490 0584 B5010000 		.4byte	.LASF73
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 72


 2491 0588 01       		.byte	0x1
 2492 0589 E603     		.2byte	0x3e6
 2493 058b 83000000 		.4byte	0x83
 2494 058f AB040000 		.4byte	.LLST28
 2495 0593 0D       		.uleb128 0xd
 2496 0594 13020000 		.4byte	.LASF74
 2497 0598 01       		.byte	0x1
 2498 0599 E703     		.2byte	0x3e7
 2499 059b 83000000 		.4byte	0x83
 2500 059f BE040000 		.4byte	.LLST29
 2501 05a3 0D       		.uleb128 0xd
 2502 05a4 62020000 		.4byte	.LASF75
 2503 05a8 01       		.byte	0x1
 2504 05a9 E803     		.2byte	0x3e8
 2505 05ab 83000000 		.4byte	0x83
 2506 05af E9040000 		.4byte	.LLST30
 2507 05b3 16       		.uleb128 0x16
 2508 05b4 28000000 		.4byte	.LVL80
 2509 05b8 B5090000 		.4byte	0x9b5
 2510 05bc C6050000 		.4byte	0x5c6
 2511 05c0 11       		.uleb128 0x11
 2512 05c1 01       		.uleb128 0x1
 2513 05c2 50       		.byte	0x50
 2514 05c3 01       		.uleb128 0x1
 2515 05c4 30       		.byte	0x30
 2516 05c5 00       		.byte	0
 2517 05c6 10       		.uleb128 0x10
 2518 05c7 56000000 		.4byte	.LVL84
 2519 05cb BB010000 		.4byte	0x1bb
 2520 05cf 11       		.uleb128 0x11
 2521 05d0 01       		.uleb128 0x1
 2522 05d1 50       		.byte	0x50
 2523 05d2 02       		.uleb128 0x2
 2524 05d3 76       		.byte	0x76
 2525 05d4 00       		.sleb128 0
 2526 05d5 00       		.byte	0
 2527 05d6 00       		.byte	0
 2528 05d7 17       		.uleb128 0x17
 2529 05d8 7E030000 		.4byte	.LASF76
 2530 05dc 01       		.byte	0x1
 2531 05dd 2A04     		.2byte	0x42a
 2532 05df 8F000000 		.4byte	0x8f
 2533 05e3 00000000 		.4byte	.LFB22
 2534 05e7 CC000000 		.4byte	.LFE22-.LFB22
 2535 05eb 01       		.uleb128 0x1
 2536 05ec 9C       		.byte	0x9c
 2537 05ed 75060000 		.4byte	0x675
 2538 05f1 0C       		.uleb128 0xc
 2539 05f2 66040000 		.4byte	.LASF39
 2540 05f6 01       		.byte	0x1
 2541 05f7 2A04     		.2byte	0x42a
 2542 05f9 83000000 		.4byte	0x83
 2543 05fd 07050000 		.4byte	.LLST31
 2544 0601 0C       		.uleb128 0xc
 2545 0602 F1040000 		.4byte	.LASF71
 2546 0606 01       		.byte	0x1
 2547 0607 2A04     		.2byte	0x42a
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 73


 2548 0609 8F000000 		.4byte	0x8f
 2549 060d 33050000 		.4byte	.LLST32
 2550 0611 0D       		.uleb128 0xd
 2551 0612 2B050000 		.4byte	.LASF77
 2552 0616 01       		.byte	0x1
 2553 0617 2C04     		.2byte	0x42c
 2554 0619 8F000000 		.4byte	0x8f
 2555 061d 91050000 		.4byte	.LLST33
 2556 0621 0D       		.uleb128 0xd
 2557 0622 B5010000 		.4byte	.LASF73
 2558 0626 01       		.byte	0x1
 2559 0627 2D04     		.2byte	0x42d
 2560 0629 83000000 		.4byte	0x83
 2561 062d C7050000 		.4byte	.LLST34
 2562 0631 0D       		.uleb128 0xd
 2563 0632 13020000 		.4byte	.LASF74
 2564 0636 01       		.byte	0x1
 2565 0637 2E04     		.2byte	0x42e
 2566 0639 83000000 		.4byte	0x83
 2567 063d DA050000 		.4byte	.LLST35
 2568 0641 0D       		.uleb128 0xd
 2569 0642 62020000 		.4byte	.LASF75
 2570 0646 01       		.byte	0x1
 2571 0647 2F04     		.2byte	0x42f
 2572 0649 83000000 		.4byte	0x83
 2573 064d 05060000 		.4byte	.LLST36
 2574 0651 16       		.uleb128 0x16
 2575 0652 28000000 		.4byte	.LVL104
 2576 0656 B5090000 		.4byte	0x9b5
 2577 065a 64060000 		.4byte	0x664
 2578 065e 11       		.uleb128 0x11
 2579 065f 01       		.uleb128 0x1
 2580 0660 50       		.byte	0x50
 2581 0661 01       		.uleb128 0x1
 2582 0662 30       		.byte	0x30
 2583 0663 00       		.byte	0
 2584 0664 10       		.uleb128 0x10
 2585 0665 56000000 		.4byte	.LVL108
 2586 0669 BB010000 		.4byte	0x1bb
 2587 066d 11       		.uleb128 0x11
 2588 066e 01       		.uleb128 0x1
 2589 066f 50       		.byte	0x50
 2590 0670 02       		.uleb128 0x2
 2591 0671 76       		.byte	0x76
 2592 0672 00       		.sleb128 0
 2593 0673 00       		.byte	0
 2594 0674 00       		.byte	0
 2595 0675 17       		.uleb128 0x17
 2596 0676 20010000 		.4byte	.LASF78
 2597 067a 01       		.byte	0x1
 2598 067b 7604     		.2byte	0x476
 2599 067d 9B000000 		.4byte	0x9b
 2600 0681 00000000 		.4byte	.LFB23
 2601 0685 B0000000 		.4byte	.LFE23-.LFB23
 2602 0689 01       		.uleb128 0x1
 2603 068a 9C       		.byte	0x9c
 2604 068b 13070000 		.4byte	0x713
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 74


 2605 068f 0C       		.uleb128 0xc
 2606 0690 66040000 		.4byte	.LASF39
 2607 0694 01       		.byte	0x1
 2608 0695 7604     		.2byte	0x476
 2609 0697 83000000 		.4byte	0x83
 2610 069b 23060000 		.4byte	.LLST37
 2611 069f 0C       		.uleb128 0xc
 2612 06a0 F1040000 		.4byte	.LASF71
 2613 06a4 01       		.byte	0x1
 2614 06a5 7604     		.2byte	0x476
 2615 06a7 8F000000 		.4byte	0x8f
 2616 06ab 4F060000 		.4byte	.LLST38
 2617 06af 0D       		.uleb128 0xd
 2618 06b0 C4040000 		.4byte	.LASF79
 2619 06b4 01       		.byte	0x1
 2620 06b5 7804     		.2byte	0x478
 2621 06b7 C1000000 		.4byte	0xc1
 2622 06bb AD060000 		.4byte	.LLST39
 2623 06bf 0D       		.uleb128 0xd
 2624 06c0 B5010000 		.4byte	.LASF73
 2625 06c4 01       		.byte	0x1
 2626 06c5 7904     		.2byte	0x479
 2627 06c7 83000000 		.4byte	0x83
 2628 06cb DD060000 		.4byte	.LLST40
 2629 06cf 0D       		.uleb128 0xd
 2630 06d0 13020000 		.4byte	.LASF74
 2631 06d4 01       		.byte	0x1
 2632 06d5 7A04     		.2byte	0x47a
 2633 06d7 83000000 		.4byte	0x83
 2634 06db F0060000 		.4byte	.LLST41
 2635 06df 0D       		.uleb128 0xd
 2636 06e0 62020000 		.4byte	.LASF75
 2637 06e4 01       		.byte	0x1
 2638 06e5 7B04     		.2byte	0x47b
 2639 06e7 83000000 		.4byte	0x83
 2640 06eb 1B070000 		.4byte	.LLST42
 2641 06ef 16       		.uleb128 0x16
 2642 06f0 28000000 		.4byte	.LVL127
 2643 06f4 B5090000 		.4byte	0x9b5
 2644 06f8 02070000 		.4byte	0x702
 2645 06fc 11       		.uleb128 0x11
 2646 06fd 01       		.uleb128 0x1
 2647 06fe 50       		.byte	0x50
 2648 06ff 01       		.uleb128 0x1
 2649 0700 30       		.byte	0x30
 2650 0701 00       		.byte	0
 2651 0702 10       		.uleb128 0x10
 2652 0703 56000000 		.4byte	.LVL131
 2653 0707 BB010000 		.4byte	0x1bb
 2654 070b 11       		.uleb128 0x11
 2655 070c 01       		.uleb128 0x1
 2656 070d 50       		.byte	0x50
 2657 070e 02       		.uleb128 0x2
 2658 070f 76       		.byte	0x76
 2659 0710 00       		.sleb128 0
 2660 0711 00       		.byte	0
 2661 0712 00       		.byte	0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 75


 2662 0713 18       		.uleb128 0x18
 2663 0714 66000000 		.4byte	.LASF80
 2664 0718 01       		.byte	0x1
 2665 0719 FF04     		.2byte	0x4ff
 2666 071b 00000000 		.4byte	.LFB24
 2667 071f 30010000 		.4byte	.LFE24-.LFB24
 2668 0723 01       		.uleb128 0x1
 2669 0724 9C       		.byte	0x9c
 2670 0725 8E070000 		.4byte	0x78e
 2671 0729 0D       		.uleb128 0xd
 2672 072a 54040000 		.4byte	.LASF41
 2673 072e 01       		.byte	0x1
 2674 072f 0105     		.2byte	0x501
 2675 0731 83000000 		.4byte	0x83
 2676 0735 39070000 		.4byte	.LLST43
 2677 0739 0D       		.uleb128 0xd
 2678 073a ED010000 		.4byte	.LASF81
 2679 073e 01       		.byte	0x1
 2680 073f 0205     		.2byte	0x502
 2681 0741 83000000 		.4byte	0x83
 2682 0745 6F070000 		.4byte	.LLST44
 2683 0749 0D       		.uleb128 0xd
 2684 074a 4C000000 		.4byte	.LASF82
 2685 074e 01       		.byte	0x1
 2686 074f 0305     		.2byte	0x503
 2687 0751 9B000000 		.4byte	0x9b
 2688 0755 C8070000 		.4byte	.LLST45
 2689 0759 16       		.uleb128 0x16
 2690 075a CA000000 		.4byte	.LVL153
 2691 075e C6090000 		.4byte	0x9c6
 2692 0762 71070000 		.4byte	0x771
 2693 0766 11       		.uleb128 0x11
 2694 0767 01       		.uleb128 0x1
 2695 0768 51       		.byte	0x51
 2696 0769 01       		.uleb128 0x1
 2697 076a 30       		.byte	0x30
 2698 076b 11       		.uleb128 0x11
 2699 076c 01       		.uleb128 0x1
 2700 076d 50       		.byte	0x50
 2701 076e 01       		.uleb128 0x1
 2702 076f 3F       		.byte	0x3f
 2703 0770 00       		.byte	0
 2704 0771 16       		.uleb128 0x16
 2705 0772 D2000000 		.4byte	.LVL154
 2706 0776 DC090000 		.4byte	0x9dc
 2707 077a 84070000 		.4byte	0x784
 2708 077e 11       		.uleb128 0x11
 2709 077f 01       		.uleb128 0x1
 2710 0780 50       		.byte	0x50
 2711 0781 01       		.uleb128 0x1
 2712 0782 3F       		.byte	0x3f
 2713 0783 00       		.byte	0
 2714 0784 19       		.uleb128 0x19
 2715 0785 04010000 		.4byte	.LVL160
 2716 0789 18020000 		.4byte	0x218
 2717 078d 00       		.byte	0
 2718 078e 0F       		.uleb128 0xf
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 76


 2719 078f 0F050000 		.4byte	.LASF83
 2720 0793 01       		.byte	0x1
 2721 0794 8105     		.2byte	0x581
 2722 0796 00000000 		.4byte	.LFB25
 2723 079a 30000000 		.4byte	.LFE25-.LFB25
 2724 079e 01       		.uleb128 0x1
 2725 079f 9C       		.byte	0x9c
 2726 07a0 B4070000 		.4byte	0x7b4
 2727 07a4 10       		.uleb128 0x10
 2728 07a5 24000000 		.4byte	.LVL162
 2729 07a9 F6090000 		.4byte	0x9f6
 2730 07ad 11       		.uleb128 0x11
 2731 07ae 01       		.uleb128 0x1
 2732 07af 50       		.byte	0x50
 2733 07b0 01       		.uleb128 0x1
 2734 07b1 3A       		.byte	0x3a
 2735 07b2 00       		.byte	0
 2736 07b3 00       		.byte	0
 2737 07b4 1A       		.uleb128 0x1a
 2738 07b5 FB040000 		.4byte	.LASF84
 2739 07b9 01       		.byte	0x1
 2740 07ba C5       		.byte	0xc5
 2741 07bb 00000000 		.4byte	.LFB1
 2742 07bf 24000000 		.4byte	.LFE1-.LFB1
 2743 07c3 01       		.uleb128 0x1
 2744 07c4 9C       		.byte	0x9c
 2745 07c5 DC070000 		.4byte	0x7dc
 2746 07c9 19       		.uleb128 0x19
 2747 07ca 0E000000 		.4byte	.LVL163
 2748 07ce 13070000 		.4byte	0x713
 2749 07d2 19       		.uleb128 0x19
 2750 07d3 1C000000 		.4byte	.LVL164
 2751 07d7 8E070000 		.4byte	0x78e
 2752 07db 00       		.byte	0
 2753 07dc 1A       		.uleb128 0x1a
 2754 07dd B8040000 		.4byte	.LASF85
 2755 07e1 01       		.byte	0x1
 2756 07e2 E5       		.byte	0xe5
 2757 07e3 00000000 		.4byte	.LFB2
 2758 07e7 10000000 		.4byte	.LFE2-.LFB2
 2759 07eb 01       		.uleb128 0x1
 2760 07ec 9C       		.byte	0x9c
 2761 07ed 1A080000 		.4byte	0x81a
 2762 07f1 1B       		.uleb128 0x1b
 2763 07f2 E4020000 		.4byte	.LASF86
 2764 07f6 01       		.byte	0x1
 2765 07f7 E5       		.byte	0xe5
 2766 07f8 E5000000 		.4byte	0xe5
 2767 07fc DB070000 		.4byte	.LLST46
 2768 0800 19       		.uleb128 0x19
 2769 0801 08000000 		.4byte	.LVL166
 2770 0805 B4070000 		.4byte	0x7b4
 2771 0809 10       		.uleb128 0x10
 2772 080a 0E000000 		.4byte	.LVL167
 2773 080e 070A0000 		.4byte	0xa07
 2774 0812 11       		.uleb128 0x11
 2775 0813 01       		.uleb128 0x1
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 77


 2776 0814 50       		.byte	0x50
 2777 0815 02       		.uleb128 0x2
 2778 0816 74       		.byte	0x74
 2779 0817 00       		.sleb128 0
 2780 0818 00       		.byte	0
 2781 0819 00       		.byte	0
 2782 081a 0F       		.uleb128 0xf
 2783 081b F7000000 		.4byte	.LASF87
 2784 081f 01       		.byte	0x1
 2785 0820 8E01     		.2byte	0x18e
 2786 0822 00000000 		.4byte	.LFB5
 2787 0826 54000000 		.4byte	.LFE5-.LFB5
 2788 082a 01       		.uleb128 0x1
 2789 082b 9C       		.byte	0x9c
 2790 082c 7E080000 		.4byte	0x87e
 2791 0830 0C       		.uleb128 0xc
 2792 0831 91040000 		.4byte	.LASF40
 2793 0835 01       		.byte	0x1
 2794 0836 8E01     		.2byte	0x18e
 2795 0838 83000000 		.4byte	0x83
 2796 083c 07080000 		.4byte	.LLST47
 2797 0840 0C       		.uleb128 0xc
 2798 0841 D2040000 		.4byte	.LASF88
 2799 0845 01       		.byte	0x1
 2800 0846 8E01     		.2byte	0x18e
 2801 0848 83000000 		.4byte	0x83
 2802 084c 33080000 		.4byte	.LLST48
 2803 0850 19       		.uleb128 0x19
 2804 0851 0E000000 		.4byte	.LVL170
 2805 0855 06020000 		.4byte	0x206
 2806 0859 19       		.uleb128 0x19
 2807 085a 1E000000 		.4byte	.LVL171
 2808 085e 13070000 		.4byte	0x713
 2809 0862 19       		.uleb128 0x19
 2810 0863 2C000000 		.4byte	.LVL172
 2811 0867 18020000 		.4byte	0x218
 2812 086b 19       		.uleb128 0x19
 2813 086c 42000000 		.4byte	.LVL173
 2814 0870 B4070000 		.4byte	0x7b4
 2815 0874 19       		.uleb128 0x19
 2816 0875 46000000 		.4byte	.LVL174
 2817 0879 79020000 		.4byte	0x279
 2818 087d 00       		.byte	0
 2819 087e 0F       		.uleb128 0xf
 2820 087f 46020000 		.4byte	.LASF89
 2821 0883 01       		.byte	0x1
 2822 0884 F101     		.2byte	0x1f1
 2823 0886 00000000 		.4byte	.LFB7
 2824 088a 44000000 		.4byte	.LFE7-.LFB7
 2825 088e 01       		.uleb128 0x1
 2826 088f 9C       		.byte	0x9c
 2827 0890 A7080000 		.4byte	0x8a7
 2828 0894 19       		.uleb128 0x19
 2829 0895 2C000000 		.4byte	.LVL175
 2830 0899 06020000 		.4byte	0x206
 2831 089d 19       		.uleb128 0x19
 2832 089e 30000000 		.4byte	.LVL176
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 78


 2833 08a2 B4070000 		.4byte	0x7b4
 2834 08a6 00       		.byte	0
 2835 08a7 1C       		.uleb128 0x1c
 2836 08a8 6F000000 		.4byte	.LASF90
 2837 08ac 01       		.byte	0x1
 2838 08ad 31       		.byte	0x31
 2839 08ae 83000000 		.4byte	0x83
 2840 08b2 05       		.uleb128 0x5
 2841 08b3 03       		.byte	0x3
 2842 08b4 00000000 		.4byte	ADC_currentConfig
 2843 08b8 1D       		.uleb128 0x1d
 2844 08b9 83000000 		.4byte	0x83
 2845 08bd C8080000 		.4byte	0x8c8
 2846 08c1 1E       		.uleb128 0x1e
 2847 08c2 F8000000 		.4byte	0xf8
 2848 08c6 00       		.byte	0
 2849 08c7 00       		.byte	0
 2850 08c8 1C       		.uleb128 0x1c
 2851 08c9 E8030000 		.4byte	.LASF91
 2852 08cd 01       		.byte	0x1
 2853 08ce 32       		.byte	0x32
 2854 08cf B8080000 		.4byte	0x8b8
 2855 08d3 05       		.uleb128 0x5
 2856 08d4 03       		.byte	0x3
 2857 08d5 04000000 		.4byte	ADC_channelEnMasks
 2858 08d9 1D       		.uleb128 0x1d
 2859 08da 83000000 		.4byte	0x83
 2860 08de E9080000 		.4byte	0x8e9
 2861 08e2 1E       		.uleb128 0x1e
 2862 08e3 F8000000 		.4byte	0xf8
 2863 08e7 02       		.byte	0x2
 2864 08e8 00       		.byte	0
 2865 08e9 1C       		.uleb128 0x1c
 2866 08ea 98040000 		.4byte	.LASF92
 2867 08ee 01       		.byte	0x1
 2868 08ef 38       		.byte	0x38
 2869 08f0 FA080000 		.4byte	0x8fa
 2870 08f4 05       		.uleb128 0x5
 2871 08f5 03       		.byte	0x3
 2872 08f6 00000000 		.4byte	ADC_channelsConfig
 2873 08fa 12       		.uleb128 0x12
 2874 08fb D9080000 		.4byte	0x8d9
 2875 08ff 1F       		.uleb128 0x1f
 2876 0900 A9010000 		.4byte	.LASF93
 2877 0904 01       		.byte	0x1
 2878 0905 2B       		.byte	0x2b
 2879 0906 6B000000 		.4byte	0x6b
 2880 090a 05       		.uleb128 0x5
 2881 090b 03       		.byte	0x3
 2882 090c 00000000 		.4byte	ADC_initVar
 2883 0910 1F       		.uleb128 0x1f
 2884 0911 AB040000 		.4byte	.LASF94
 2885 0915 01       		.byte	0x1
 2886 0916 2D       		.byte	0x2d
 2887 0917 6B000000 		.4byte	0x6b
 2888 091b 05       		.uleb128 0x5
 2889 091c 03       		.byte	0x3
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 79


 2890 091d 00000000 		.4byte	ADC_selected
 2891 0921 1D       		.uleb128 0x1d
 2892 0922 8F000000 		.4byte	0x8f
 2893 0926 31090000 		.4byte	0x931
 2894 092a 1E       		.uleb128 0x1e
 2895 092b F8000000 		.4byte	0xf8
 2896 092f 02       		.byte	0x2
 2897 0930 00       		.byte	0
 2898 0931 1F       		.uleb128 0x1f
 2899 0932 DD030000 		.4byte	.LASF95
 2900 0936 01       		.byte	0x1
 2901 0937 2E       		.byte	0x2e
 2902 0938 42090000 		.4byte	0x942
 2903 093c 05       		.uleb128 0x5
 2904 093d 03       		.byte	0x3
 2905 093e 00000000 		.4byte	ADC_offset
 2906 0942 05       		.uleb128 0x5
 2907 0943 21090000 		.4byte	0x921
 2908 0947 1D       		.uleb128 0x1d
 2909 0948 9B000000 		.4byte	0x9b
 2910 094c 57090000 		.4byte	0x957
 2911 0950 1E       		.uleb128 0x1e
 2912 0951 F8000000 		.4byte	0xf8
 2913 0955 02       		.byte	0x2
 2914 0956 00       		.byte	0
 2915 0957 1F       		.uleb128 0x1f
 2916 0958 34010000 		.4byte	.LASF96
 2917 095c 01       		.byte	0x1
 2918 095d 2F       		.byte	0x2f
 2919 095e 68090000 		.4byte	0x968
 2920 0962 05       		.uleb128 0x5
 2921 0963 03       		.byte	0x3
 2922 0964 00000000 		.4byte	ADC_countsPer10Volt
 2923 0968 05       		.uleb128 0x5
 2924 0969 47090000 		.4byte	0x947
 2925 096d 1D       		.uleb128 0x1d
 2926 096e B0010000 		.4byte	0x1b0
 2927 0972 7D090000 		.4byte	0x97d
 2928 0976 1E       		.uleb128 0x1e
 2929 0977 F8000000 		.4byte	0xf8
 2930 097b 00       		.byte	0
 2931 097c 00       		.byte	0
 2932 097d 20       		.uleb128 0x20
 2933 097e 82040000 		.4byte	.LASF97
 2934 0982 03       		.byte	0x3
 2935 0983 3D02     		.2byte	0x23d
 2936 0985 89090000 		.4byte	0x989
 2937 0989 12       		.uleb128 0x12
 2938 098a 6D090000 		.4byte	0x96d
 2939 098e 20       		.uleb128 0x20
 2940 098f A7000000 		.4byte	.LASF98
 2941 0993 03       		.byte	0x3
 2942 0994 3E02     		.2byte	0x23e
 2943 0996 9A090000 		.4byte	0x99a
 2944 099a 12       		.uleb128 0x12
 2945 099b D9080000 		.4byte	0x8d9
 2946 099f 21       		.uleb128 0x21
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 80


 2947 09a0 05040000 		.4byte	.LASF99
 2948 09a4 04       		.byte	0x4
 2949 09a5 29       		.byte	0x29
 2950 09a6 B5090000 		.4byte	0x9b5
 2951 09aa 22       		.uleb128 0x22
 2952 09ab 77000000 		.4byte	0x77
 2953 09af 22       		.uleb128 0x22
 2954 09b0 6B000000 		.4byte	0x6b
 2955 09b4 00       		.byte	0
 2956 09b5 21       		.uleb128 0x21
 2957 09b6 A9030000 		.4byte	.LASF100
 2958 09ba 05       		.byte	0x5
 2959 09bb E5       		.byte	0xe5
 2960 09bc C6090000 		.4byte	0x9c6
 2961 09c0 22       		.uleb128 0x22
 2962 09c1 6B000000 		.4byte	0x6b
 2963 09c5 00       		.byte	0
 2964 09c6 21       		.uleb128 0x21
 2965 09c7 41030000 		.4byte	.LASF101
 2966 09cb 05       		.byte	0x5
 2967 09cc BE       		.byte	0xbe
 2968 09cd DC090000 		.4byte	0x9dc
 2969 09d1 22       		.uleb128 0x22
 2970 09d2 6B000000 		.4byte	0x6b
 2971 09d6 22       		.uleb128 0x22
 2972 09d7 6B000000 		.4byte	0x6b
 2973 09db 00       		.byte	0
 2974 09dc 23       		.uleb128 0x23
 2975 09dd 95010000 		.4byte	.LASF107
 2976 09e1 05       		.byte	0x5
 2977 09e2 BB       		.byte	0xbb
 2978 09e3 E5000000 		.4byte	0xe5
 2979 09e7 F6090000 		.4byte	0x9f6
 2980 09eb 22       		.uleb128 0x22
 2981 09ec 6B000000 		.4byte	0x6b
 2982 09f0 22       		.uleb128 0x22
 2983 09f1 E5000000 		.4byte	0xe5
 2984 09f5 00       		.byte	0
 2985 09f6 21       		.uleb128 0x21
 2986 09f7 4E010000 		.4byte	.LASF102
 2987 09fb 05       		.byte	0x5
 2988 09fc D8       		.byte	0xd8
 2989 09fd 070A0000 		.4byte	0xa07
 2990 0a01 22       		.uleb128 0x22
 2991 0a02 77000000 		.4byte	0x77
 2992 0a06 00       		.byte	0
 2993 0a07 24       		.uleb128 0x24
 2994 0a08 47050000 		.4byte	.LASF108
 2995 0a0c 06       		.byte	0x6
 2996 0a0d 18       		.byte	0x18
 2997 0a0e 22       		.uleb128 0x22
 2998 0a0f E5000000 		.4byte	0xe5
 2999 0a13 00       		.byte	0
 3000 0a14 00       		.byte	0
 3001              		.section	.debug_abbrev,"",%progbits
 3002              	.Ldebug_abbrev0:
 3003 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 81


 3004 0001 11       		.uleb128 0x11
 3005 0002 01       		.byte	0x1
 3006 0003 25       		.uleb128 0x25
 3007 0004 0E       		.uleb128 0xe
 3008 0005 13       		.uleb128 0x13
 3009 0006 0B       		.uleb128 0xb
 3010 0007 03       		.uleb128 0x3
 3011 0008 0E       		.uleb128 0xe
 3012 0009 1B       		.uleb128 0x1b
 3013 000a 0E       		.uleb128 0xe
 3014 000b 55       		.uleb128 0x55
 3015 000c 17       		.uleb128 0x17
 3016 000d 11       		.uleb128 0x11
 3017 000e 01       		.uleb128 0x1
 3018 000f 10       		.uleb128 0x10
 3019 0010 17       		.uleb128 0x17
 3020 0011 00       		.byte	0
 3021 0012 00       		.byte	0
 3022 0013 02       		.uleb128 0x2
 3023 0014 24       		.uleb128 0x24
 3024 0015 00       		.byte	0
 3025 0016 0B       		.uleb128 0xb
 3026 0017 0B       		.uleb128 0xb
 3027 0018 3E       		.uleb128 0x3e
 3028 0019 0B       		.uleb128 0xb
 3029 001a 03       		.uleb128 0x3
 3030 001b 0E       		.uleb128 0xe
 3031 001c 00       		.byte	0
 3032 001d 00       		.byte	0
 3033 001e 03       		.uleb128 0x3
 3034 001f 24       		.uleb128 0x24
 3035 0020 00       		.byte	0
 3036 0021 0B       		.uleb128 0xb
 3037 0022 0B       		.uleb128 0xb
 3038 0023 3E       		.uleb128 0x3e
 3039 0024 0B       		.uleb128 0xb
 3040 0025 03       		.uleb128 0x3
 3041 0026 08       		.uleb128 0x8
 3042 0027 00       		.byte	0
 3043 0028 00       		.byte	0
 3044 0029 04       		.uleb128 0x4
 3045 002a 16       		.uleb128 0x16
 3046 002b 00       		.byte	0
 3047 002c 03       		.uleb128 0x3
 3048 002d 0E       		.uleb128 0xe
 3049 002e 3A       		.uleb128 0x3a
 3050 002f 0B       		.uleb128 0xb
 3051 0030 3B       		.uleb128 0x3b
 3052 0031 05       		.uleb128 0x5
 3053 0032 49       		.uleb128 0x49
 3054 0033 13       		.uleb128 0x13
 3055 0034 00       		.byte	0
 3056 0035 00       		.byte	0
 3057 0036 05       		.uleb128 0x5
 3058 0037 35       		.uleb128 0x35
 3059 0038 00       		.byte	0
 3060 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 82


 3061 003a 13       		.uleb128 0x13
 3062 003b 00       		.byte	0
 3063 003c 00       		.byte	0
 3064 003d 06       		.uleb128 0x6
 3065 003e 0F       		.uleb128 0xf
 3066 003f 00       		.byte	0
 3067 0040 0B       		.uleb128 0xb
 3068 0041 0B       		.uleb128 0xb
 3069 0042 49       		.uleb128 0x49
 3070 0043 13       		.uleb128 0x13
 3071 0044 00       		.byte	0
 3072 0045 00       		.byte	0
 3073 0046 07       		.uleb128 0x7
 3074 0047 15       		.uleb128 0x15
 3075 0048 00       		.byte	0
 3076 0049 27       		.uleb128 0x27
 3077 004a 19       		.uleb128 0x19
 3078 004b 00       		.byte	0
 3079 004c 00       		.byte	0
 3080 004d 08       		.uleb128 0x8
 3081 004e 13       		.uleb128 0x13
 3082 004f 01       		.byte	0x1
 3083 0050 0B       		.uleb128 0xb
 3084 0051 0B       		.uleb128 0xb
 3085 0052 3A       		.uleb128 0x3a
 3086 0053 0B       		.uleb128 0xb
 3087 0054 3B       		.uleb128 0x3b
 3088 0055 0B       		.uleb128 0xb
 3089 0056 01       		.uleb128 0x1
 3090 0057 13       		.uleb128 0x13
 3091 0058 00       		.byte	0
 3092 0059 00       		.byte	0
 3093 005a 09       		.uleb128 0x9
 3094 005b 0D       		.uleb128 0xd
 3095 005c 00       		.byte	0
 3096 005d 03       		.uleb128 0x3
 3097 005e 0E       		.uleb128 0xe
 3098 005f 3A       		.uleb128 0x3a
 3099 0060 0B       		.uleb128 0xb
 3100 0061 3B       		.uleb128 0x3b
 3101 0062 0B       		.uleb128 0xb
 3102 0063 49       		.uleb128 0x49
 3103 0064 13       		.uleb128 0x13
 3104 0065 38       		.uleb128 0x38
 3105 0066 0B       		.uleb128 0xb
 3106 0067 00       		.byte	0
 3107 0068 00       		.byte	0
 3108 0069 0A       		.uleb128 0xa
 3109 006a 16       		.uleb128 0x16
 3110 006b 00       		.byte	0
 3111 006c 03       		.uleb128 0x3
 3112 006d 0E       		.uleb128 0xe
 3113 006e 3A       		.uleb128 0x3a
 3114 006f 0B       		.uleb128 0xb
 3115 0070 3B       		.uleb128 0x3b
 3116 0071 0B       		.uleb128 0xb
 3117 0072 49       		.uleb128 0x49
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 83


 3118 0073 13       		.uleb128 0x13
 3119 0074 00       		.byte	0
 3120 0075 00       		.byte	0
 3121 0076 0B       		.uleb128 0xb
 3122 0077 2E       		.uleb128 0x2e
 3123 0078 01       		.byte	0x1
 3124 0079 03       		.uleb128 0x3
 3125 007a 0E       		.uleb128 0xe
 3126 007b 3A       		.uleb128 0x3a
 3127 007c 0B       		.uleb128 0xb
 3128 007d 3B       		.uleb128 0x3b
 3129 007e 05       		.uleb128 0x5
 3130 007f 27       		.uleb128 0x27
 3131 0080 19       		.uleb128 0x19
 3132 0081 49       		.uleb128 0x49
 3133 0082 13       		.uleb128 0x13
 3134 0083 11       		.uleb128 0x11
 3135 0084 01       		.uleb128 0x1
 3136 0085 12       		.uleb128 0x12
 3137 0086 06       		.uleb128 0x6
 3138 0087 40       		.uleb128 0x40
 3139 0088 18       		.uleb128 0x18
 3140 0089 9742     		.uleb128 0x2117
 3141 008b 19       		.uleb128 0x19
 3142 008c 01       		.uleb128 0x1
 3143 008d 13       		.uleb128 0x13
 3144 008e 00       		.byte	0
 3145 008f 00       		.byte	0
 3146 0090 0C       		.uleb128 0xc
 3147 0091 05       		.uleb128 0x5
 3148 0092 00       		.byte	0
 3149 0093 03       		.uleb128 0x3
 3150 0094 0E       		.uleb128 0xe
 3151 0095 3A       		.uleb128 0x3a
 3152 0096 0B       		.uleb128 0xb
 3153 0097 3B       		.uleb128 0x3b
 3154 0098 05       		.uleb128 0x5
 3155 0099 49       		.uleb128 0x49
 3156 009a 13       		.uleb128 0x13
 3157 009b 02       		.uleb128 0x2
 3158 009c 17       		.uleb128 0x17
 3159 009d 00       		.byte	0
 3160 009e 00       		.byte	0
 3161 009f 0D       		.uleb128 0xd
 3162 00a0 34       		.uleb128 0x34
 3163 00a1 00       		.byte	0
 3164 00a2 03       		.uleb128 0x3
 3165 00a3 0E       		.uleb128 0xe
 3166 00a4 3A       		.uleb128 0x3a
 3167 00a5 0B       		.uleb128 0xb
 3168 00a6 3B       		.uleb128 0x3b
 3169 00a7 05       		.uleb128 0x5
 3170 00a8 49       		.uleb128 0x49
 3171 00a9 13       		.uleb128 0x13
 3172 00aa 02       		.uleb128 0x2
 3173 00ab 17       		.uleb128 0x17
 3174 00ac 00       		.byte	0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 84


 3175 00ad 00       		.byte	0
 3176 00ae 0E       		.uleb128 0xe
 3177 00af 2E       		.uleb128 0x2e
 3178 00b0 00       		.byte	0
 3179 00b1 3F       		.uleb128 0x3f
 3180 00b2 19       		.uleb128 0x19
 3181 00b3 03       		.uleb128 0x3
 3182 00b4 0E       		.uleb128 0xe
 3183 00b5 3A       		.uleb128 0x3a
 3184 00b6 0B       		.uleb128 0xb
 3185 00b7 3B       		.uleb128 0x3b
 3186 00b8 05       		.uleb128 0x5
 3187 00b9 27       		.uleb128 0x27
 3188 00ba 19       		.uleb128 0x19
 3189 00bb 11       		.uleb128 0x11
 3190 00bc 01       		.uleb128 0x1
 3191 00bd 12       		.uleb128 0x12
 3192 00be 06       		.uleb128 0x6
 3193 00bf 40       		.uleb128 0x40
 3194 00c0 18       		.uleb128 0x18
 3195 00c1 9742     		.uleb128 0x2117
 3196 00c3 19       		.uleb128 0x19
 3197 00c4 00       		.byte	0
 3198 00c5 00       		.byte	0
 3199 00c6 0F       		.uleb128 0xf
 3200 00c7 2E       		.uleb128 0x2e
 3201 00c8 01       		.byte	0x1
 3202 00c9 3F       		.uleb128 0x3f
 3203 00ca 19       		.uleb128 0x19
 3204 00cb 03       		.uleb128 0x3
 3205 00cc 0E       		.uleb128 0xe
 3206 00cd 3A       		.uleb128 0x3a
 3207 00ce 0B       		.uleb128 0xb
 3208 00cf 3B       		.uleb128 0x3b
 3209 00d0 05       		.uleb128 0x5
 3210 00d1 27       		.uleb128 0x27
 3211 00d2 19       		.uleb128 0x19
 3212 00d3 11       		.uleb128 0x11
 3213 00d4 01       		.uleb128 0x1
 3214 00d5 12       		.uleb128 0x12
 3215 00d6 06       		.uleb128 0x6
 3216 00d7 40       		.uleb128 0x40
 3217 00d8 18       		.uleb128 0x18
 3218 00d9 9742     		.uleb128 0x2117
 3219 00db 19       		.uleb128 0x19
 3220 00dc 01       		.uleb128 0x1
 3221 00dd 13       		.uleb128 0x13
 3222 00de 00       		.byte	0
 3223 00df 00       		.byte	0
 3224 00e0 10       		.uleb128 0x10
 3225 00e1 898201   		.uleb128 0x4109
 3226 00e4 01       		.byte	0x1
 3227 00e5 11       		.uleb128 0x11
 3228 00e6 01       		.uleb128 0x1
 3229 00e7 31       		.uleb128 0x31
 3230 00e8 13       		.uleb128 0x13
 3231 00e9 00       		.byte	0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 85


 3232 00ea 00       		.byte	0
 3233 00eb 11       		.uleb128 0x11
 3234 00ec 8A8201   		.uleb128 0x410a
 3235 00ef 00       		.byte	0
 3236 00f0 02       		.uleb128 0x2
 3237 00f1 18       		.uleb128 0x18
 3238 00f2 9142     		.uleb128 0x2111
 3239 00f4 18       		.uleb128 0x18
 3240 00f5 00       		.byte	0
 3241 00f6 00       		.byte	0
 3242 00f7 12       		.uleb128 0x12
 3243 00f8 26       		.uleb128 0x26
 3244 00f9 00       		.byte	0
 3245 00fa 49       		.uleb128 0x49
 3246 00fb 13       		.uleb128 0x13
 3247 00fc 00       		.byte	0
 3248 00fd 00       		.byte	0
 3249 00fe 13       		.uleb128 0x13
 3250 00ff 05       		.uleb128 0x5
 3251 0100 00       		.byte	0
 3252 0101 03       		.uleb128 0x3
 3253 0102 0E       		.uleb128 0xe
 3254 0103 3A       		.uleb128 0x3a
 3255 0104 0B       		.uleb128 0xb
 3256 0105 3B       		.uleb128 0x3b
 3257 0106 05       		.uleb128 0x5
 3258 0107 49       		.uleb128 0x49
 3259 0108 13       		.uleb128 0x13
 3260 0109 02       		.uleb128 0x2
 3261 010a 18       		.uleb128 0x18
 3262 010b 00       		.byte	0
 3263 010c 00       		.byte	0
 3264 010d 14       		.uleb128 0x14
 3265 010e 2E       		.uleb128 0x2e
 3266 010f 01       		.byte	0x1
 3267 0110 3F       		.uleb128 0x3f
 3268 0111 19       		.uleb128 0x19
 3269 0112 03       		.uleb128 0x3
 3270 0113 0E       		.uleb128 0xe
 3271 0114 3A       		.uleb128 0x3a
 3272 0115 0B       		.uleb128 0xb
 3273 0116 3B       		.uleb128 0x3b
 3274 0117 05       		.uleb128 0x5
 3275 0118 27       		.uleb128 0x27
 3276 0119 19       		.uleb128 0x19
 3277 011a 49       		.uleb128 0x49
 3278 011b 13       		.uleb128 0x13
 3279 011c 11       		.uleb128 0x11
 3280 011d 01       		.uleb128 0x1
 3281 011e 12       		.uleb128 0x12
 3282 011f 06       		.uleb128 0x6
 3283 0120 40       		.uleb128 0x40
 3284 0121 18       		.uleb128 0x18
 3285 0122 9742     		.uleb128 0x2117
 3286 0124 19       		.uleb128 0x19
 3287 0125 01       		.uleb128 0x1
 3288 0126 13       		.uleb128 0x13
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 86


 3289 0127 00       		.byte	0
 3290 0128 00       		.byte	0
 3291 0129 15       		.uleb128 0x15
 3292 012a 34       		.uleb128 0x34
 3293 012b 00       		.byte	0
 3294 012c 03       		.uleb128 0x3
 3295 012d 08       		.uleb128 0x8
 3296 012e 3A       		.uleb128 0x3a
 3297 012f 0B       		.uleb128 0xb
 3298 0130 3B       		.uleb128 0x3b
 3299 0131 05       		.uleb128 0x5
 3300 0132 49       		.uleb128 0x49
 3301 0133 13       		.uleb128 0x13
 3302 0134 02       		.uleb128 0x2
 3303 0135 17       		.uleb128 0x17
 3304 0136 00       		.byte	0
 3305 0137 00       		.byte	0
 3306 0138 16       		.uleb128 0x16
 3307 0139 898201   		.uleb128 0x4109
 3308 013c 01       		.byte	0x1
 3309 013d 11       		.uleb128 0x11
 3310 013e 01       		.uleb128 0x1
 3311 013f 31       		.uleb128 0x31
 3312 0140 13       		.uleb128 0x13
 3313 0141 01       		.uleb128 0x1
 3314 0142 13       		.uleb128 0x13
 3315 0143 00       		.byte	0
 3316 0144 00       		.byte	0
 3317 0145 17       		.uleb128 0x17
 3318 0146 2E       		.uleb128 0x2e
 3319 0147 01       		.byte	0x1
 3320 0148 3F       		.uleb128 0x3f
 3321 0149 19       		.uleb128 0x19
 3322 014a 03       		.uleb128 0x3
 3323 014b 0E       		.uleb128 0xe
 3324 014c 3A       		.uleb128 0x3a
 3325 014d 0B       		.uleb128 0xb
 3326 014e 3B       		.uleb128 0x3b
 3327 014f 05       		.uleb128 0x5
 3328 0150 27       		.uleb128 0x27
 3329 0151 19       		.uleb128 0x19
 3330 0152 49       		.uleb128 0x49
 3331 0153 13       		.uleb128 0x13
 3332 0154 11       		.uleb128 0x11
 3333 0155 01       		.uleb128 0x1
 3334 0156 12       		.uleb128 0x12
 3335 0157 06       		.uleb128 0x6
 3336 0158 40       		.uleb128 0x40
 3337 0159 18       		.uleb128 0x18
 3338 015a 9642     		.uleb128 0x2116
 3339 015c 19       		.uleb128 0x19
 3340 015d 01       		.uleb128 0x1
 3341 015e 13       		.uleb128 0x13
 3342 015f 00       		.byte	0
 3343 0160 00       		.byte	0
 3344 0161 18       		.uleb128 0x18
 3345 0162 2E       		.uleb128 0x2e
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 87


 3346 0163 01       		.byte	0x1
 3347 0164 3F       		.uleb128 0x3f
 3348 0165 19       		.uleb128 0x19
 3349 0166 03       		.uleb128 0x3
 3350 0167 0E       		.uleb128 0xe
 3351 0168 3A       		.uleb128 0x3a
 3352 0169 0B       		.uleb128 0xb
 3353 016a 3B       		.uleb128 0x3b
 3354 016b 05       		.uleb128 0x5
 3355 016c 27       		.uleb128 0x27
 3356 016d 19       		.uleb128 0x19
 3357 016e 11       		.uleb128 0x11
 3358 016f 01       		.uleb128 0x1
 3359 0170 12       		.uleb128 0x12
 3360 0171 06       		.uleb128 0x6
 3361 0172 40       		.uleb128 0x40
 3362 0173 18       		.uleb128 0x18
 3363 0174 9642     		.uleb128 0x2116
 3364 0176 19       		.uleb128 0x19
 3365 0177 01       		.uleb128 0x1
 3366 0178 13       		.uleb128 0x13
 3367 0179 00       		.byte	0
 3368 017a 00       		.byte	0
 3369 017b 19       		.uleb128 0x19
 3370 017c 898201   		.uleb128 0x4109
 3371 017f 00       		.byte	0
 3372 0180 11       		.uleb128 0x11
 3373 0181 01       		.uleb128 0x1
 3374 0182 31       		.uleb128 0x31
 3375 0183 13       		.uleb128 0x13
 3376 0184 00       		.byte	0
 3377 0185 00       		.byte	0
 3378 0186 1A       		.uleb128 0x1a
 3379 0187 2E       		.uleb128 0x2e
 3380 0188 01       		.byte	0x1
 3381 0189 3F       		.uleb128 0x3f
 3382 018a 19       		.uleb128 0x19
 3383 018b 03       		.uleb128 0x3
 3384 018c 0E       		.uleb128 0xe
 3385 018d 3A       		.uleb128 0x3a
 3386 018e 0B       		.uleb128 0xb
 3387 018f 3B       		.uleb128 0x3b
 3388 0190 0B       		.uleb128 0xb
 3389 0191 27       		.uleb128 0x27
 3390 0192 19       		.uleb128 0x19
 3391 0193 11       		.uleb128 0x11
 3392 0194 01       		.uleb128 0x1
 3393 0195 12       		.uleb128 0x12
 3394 0196 06       		.uleb128 0x6
 3395 0197 40       		.uleb128 0x40
 3396 0198 18       		.uleb128 0x18
 3397 0199 9742     		.uleb128 0x2117
 3398 019b 19       		.uleb128 0x19
 3399 019c 01       		.uleb128 0x1
 3400 019d 13       		.uleb128 0x13
 3401 019e 00       		.byte	0
 3402 019f 00       		.byte	0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 88


 3403 01a0 1B       		.uleb128 0x1b
 3404 01a1 05       		.uleb128 0x5
 3405 01a2 00       		.byte	0
 3406 01a3 03       		.uleb128 0x3
 3407 01a4 0E       		.uleb128 0xe
 3408 01a5 3A       		.uleb128 0x3a
 3409 01a6 0B       		.uleb128 0xb
 3410 01a7 3B       		.uleb128 0x3b
 3411 01a8 0B       		.uleb128 0xb
 3412 01a9 49       		.uleb128 0x49
 3413 01aa 13       		.uleb128 0x13
 3414 01ab 02       		.uleb128 0x2
 3415 01ac 17       		.uleb128 0x17
 3416 01ad 00       		.byte	0
 3417 01ae 00       		.byte	0
 3418 01af 1C       		.uleb128 0x1c
 3419 01b0 34       		.uleb128 0x34
 3420 01b1 00       		.byte	0
 3421 01b2 03       		.uleb128 0x3
 3422 01b3 0E       		.uleb128 0xe
 3423 01b4 3A       		.uleb128 0x3a
 3424 01b5 0B       		.uleb128 0xb
 3425 01b6 3B       		.uleb128 0x3b
 3426 01b7 0B       		.uleb128 0xb
 3427 01b8 49       		.uleb128 0x49
 3428 01b9 13       		.uleb128 0x13
 3429 01ba 02       		.uleb128 0x2
 3430 01bb 18       		.uleb128 0x18
 3431 01bc 00       		.byte	0
 3432 01bd 00       		.byte	0
 3433 01be 1D       		.uleb128 0x1d
 3434 01bf 01       		.uleb128 0x1
 3435 01c0 01       		.byte	0x1
 3436 01c1 49       		.uleb128 0x49
 3437 01c2 13       		.uleb128 0x13
 3438 01c3 01       		.uleb128 0x1
 3439 01c4 13       		.uleb128 0x13
 3440 01c5 00       		.byte	0
 3441 01c6 00       		.byte	0
 3442 01c7 1E       		.uleb128 0x1e
 3443 01c8 21       		.uleb128 0x21
 3444 01c9 00       		.byte	0
 3445 01ca 49       		.uleb128 0x49
 3446 01cb 13       		.uleb128 0x13
 3447 01cc 2F       		.uleb128 0x2f
 3448 01cd 0B       		.uleb128 0xb
 3449 01ce 00       		.byte	0
 3450 01cf 00       		.byte	0
 3451 01d0 1F       		.uleb128 0x1f
 3452 01d1 34       		.uleb128 0x34
 3453 01d2 00       		.byte	0
 3454 01d3 03       		.uleb128 0x3
 3455 01d4 0E       		.uleb128 0xe
 3456 01d5 3A       		.uleb128 0x3a
 3457 01d6 0B       		.uleb128 0xb
 3458 01d7 3B       		.uleb128 0x3b
 3459 01d8 0B       		.uleb128 0xb
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 89


 3460 01d9 49       		.uleb128 0x49
 3461 01da 13       		.uleb128 0x13
 3462 01db 3F       		.uleb128 0x3f
 3463 01dc 19       		.uleb128 0x19
 3464 01dd 02       		.uleb128 0x2
 3465 01de 18       		.uleb128 0x18
 3466 01df 00       		.byte	0
 3467 01e0 00       		.byte	0
 3468 01e1 20       		.uleb128 0x20
 3469 01e2 34       		.uleb128 0x34
 3470 01e3 00       		.byte	0
 3471 01e4 03       		.uleb128 0x3
 3472 01e5 0E       		.uleb128 0xe
 3473 01e6 3A       		.uleb128 0x3a
 3474 01e7 0B       		.uleb128 0xb
 3475 01e8 3B       		.uleb128 0x3b
 3476 01e9 05       		.uleb128 0x5
 3477 01ea 49       		.uleb128 0x49
 3478 01eb 13       		.uleb128 0x13
 3479 01ec 3F       		.uleb128 0x3f
 3480 01ed 19       		.uleb128 0x19
 3481 01ee 3C       		.uleb128 0x3c
 3482 01ef 19       		.uleb128 0x19
 3483 01f0 00       		.byte	0
 3484 01f1 00       		.byte	0
 3485 01f2 21       		.uleb128 0x21
 3486 01f3 2E       		.uleb128 0x2e
 3487 01f4 01       		.byte	0x1
 3488 01f5 3F       		.uleb128 0x3f
 3489 01f6 19       		.uleb128 0x19
 3490 01f7 03       		.uleb128 0x3
 3491 01f8 0E       		.uleb128 0xe
 3492 01f9 3A       		.uleb128 0x3a
 3493 01fa 0B       		.uleb128 0xb
 3494 01fb 3B       		.uleb128 0x3b
 3495 01fc 0B       		.uleb128 0xb
 3496 01fd 27       		.uleb128 0x27
 3497 01fe 19       		.uleb128 0x19
 3498 01ff 3C       		.uleb128 0x3c
 3499 0200 19       		.uleb128 0x19
 3500 0201 01       		.uleb128 0x1
 3501 0202 13       		.uleb128 0x13
 3502 0203 00       		.byte	0
 3503 0204 00       		.byte	0
 3504 0205 22       		.uleb128 0x22
 3505 0206 05       		.uleb128 0x5
 3506 0207 00       		.byte	0
 3507 0208 49       		.uleb128 0x49
 3508 0209 13       		.uleb128 0x13
 3509 020a 00       		.byte	0
 3510 020b 00       		.byte	0
 3511 020c 23       		.uleb128 0x23
 3512 020d 2E       		.uleb128 0x2e
 3513 020e 01       		.byte	0x1
 3514 020f 3F       		.uleb128 0x3f
 3515 0210 19       		.uleb128 0x19
 3516 0211 03       		.uleb128 0x3
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 90


 3517 0212 0E       		.uleb128 0xe
 3518 0213 3A       		.uleb128 0x3a
 3519 0214 0B       		.uleb128 0xb
 3520 0215 3B       		.uleb128 0x3b
 3521 0216 0B       		.uleb128 0xb
 3522 0217 27       		.uleb128 0x27
 3523 0218 19       		.uleb128 0x19
 3524 0219 49       		.uleb128 0x49
 3525 021a 13       		.uleb128 0x13
 3526 021b 3C       		.uleb128 0x3c
 3527 021c 19       		.uleb128 0x19
 3528 021d 01       		.uleb128 0x1
 3529 021e 13       		.uleb128 0x13
 3530 021f 00       		.byte	0
 3531 0220 00       		.byte	0
 3532 0221 24       		.uleb128 0x24
 3533 0222 2E       		.uleb128 0x2e
 3534 0223 01       		.byte	0x1
 3535 0224 3F       		.uleb128 0x3f
 3536 0225 19       		.uleb128 0x19
 3537 0226 03       		.uleb128 0x3
 3538 0227 0E       		.uleb128 0xe
 3539 0228 3A       		.uleb128 0x3a
 3540 0229 0B       		.uleb128 0xb
 3541 022a 3B       		.uleb128 0x3b
 3542 022b 0B       		.uleb128 0xb
 3543 022c 27       		.uleb128 0x27
 3544 022d 19       		.uleb128 0x19
 3545 022e 3C       		.uleb128 0x3c
 3546 022f 19       		.uleb128 0x19
 3547 0230 00       		.byte	0
 3548 0231 00       		.byte	0
 3549 0232 00       		.byte	0
 3550              		.section	.debug_loc,"",%progbits
 3551              	.Ldebug_loc0:
 3552              	.LLST0:
 3553 0000 00000000 		.4byte	.LVL0
 3554 0004 02000000 		.4byte	.LVL1
 3555 0008 0100     		.2byte	0x1
 3556 000a 50       		.byte	0x50
 3557 000b 02000000 		.4byte	.LVL1
 3558 000f 58000000 		.4byte	.LFE12
 3559 0013 0400     		.2byte	0x4
 3560 0015 F3       		.byte	0xf3
 3561 0016 01       		.uleb128 0x1
 3562 0017 50       		.byte	0x50
 3563 0018 9F       		.byte	0x9f
 3564 0019 00000000 		.4byte	0
 3565 001d 00000000 		.4byte	0
 3566              	.LLST1:
 3567 0021 00000000 		.4byte	.LVL0
 3568 0025 46000000 		.4byte	.LVL6
 3569 0029 0200     		.2byte	0x2
 3570 002b 30       		.byte	0x30
 3571 002c 9F       		.byte	0x9f
 3572 002d 46000000 		.4byte	.LVL6
 3573 0031 58000000 		.4byte	.LFE12
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 91


 3574 0035 0100     		.2byte	0x1
 3575 0037 50       		.byte	0x50
 3576 0038 00000000 		.4byte	0
 3577 003c 00000000 		.4byte	0
 3578              	.LLST2:
 3579 0040 0A000000 		.4byte	.LVL2
 3580 0044 14000000 		.4byte	.LVL3
 3581 0048 0100     		.2byte	0x1
 3582 004a 52       		.byte	0x52
 3583 004b 28000000 		.4byte	.LVL4
 3584 004f 2C000000 		.4byte	.LVL5
 3585 0053 0100     		.2byte	0x1
 3586 0055 52       		.byte	0x52
 3587 0056 00000000 		.4byte	0
 3588 005a 00000000 		.4byte	0
 3589              	.LLST3:
 3590 005e 00000000 		.4byte	.LVL7
 3591 0062 06000000 		.4byte	.LVL8
 3592 0066 0100     		.2byte	0x1
 3593 0068 50       		.byte	0x50
 3594 0069 06000000 		.4byte	.LVL8
 3595 006d BA000000 		.4byte	.LVL23
 3596 0071 0100     		.2byte	0x1
 3597 0073 54       		.byte	0x54
 3598 0074 BA000000 		.4byte	.LVL23
 3599 0078 00010000 		.4byte	.LFE4
 3600 007c 0400     		.2byte	0x4
 3601 007e F3       		.byte	0xf3
 3602 007f 01       		.uleb128 0x1
 3603 0080 50       		.byte	0x50
 3604 0081 9F       		.byte	0x9f
 3605 0082 00000000 		.4byte	0
 3606 0086 00000000 		.4byte	0
 3607              	.LLST4:
 3608 008a 88000000 		.4byte	.LVL16
 3609 008e 8C000000 		.4byte	.LVL17
 3610 0092 0200     		.2byte	0x2
 3611 0094 30       		.byte	0x30
 3612 0095 9F       		.byte	0x9f
 3613 0096 8C000000 		.4byte	.LVL17
 3614 009a 00010000 		.4byte	.LFE4
 3615 009e 0100     		.2byte	0x1
 3616 00a0 51       		.byte	0x51
 3617 00a1 00000000 		.4byte	0
 3618 00a5 00000000 		.4byte	0
 3619              	.LLST5:
 3620 00a9 62000000 		.4byte	.LVL10
 3621 00ad 7A000000 		.4byte	.LVL13
 3622 00b1 0100     		.2byte	0x1
 3623 00b3 53       		.byte	0x53
 3624 00b4 7A000000 		.4byte	.LVL13
 3625 00b8 7E000000 		.4byte	.LVL14
 3626 00bc 0700     		.2byte	0x7
 3627 00be 73       		.byte	0x73
 3628 00bf 00       		.sleb128 0
 3629 00c0 40       		.byte	0x40
 3630 00c1 49       		.byte	0x49
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 92


 3631 00c2 24       		.byte	0x24
 3632 00c3 21       		.byte	0x21
 3633 00c4 9F       		.byte	0x9f
 3634 00c5 84000000 		.4byte	.LVL15
 3635 00c9 8C000000 		.4byte	.LVL17
 3636 00cd 0100     		.2byte	0x1
 3637 00cf 53       		.byte	0x53
 3638 00d0 9A000000 		.4byte	.LVL18
 3639 00d4 B6000000 		.4byte	.LVL22
 3640 00d8 0100     		.2byte	0x1
 3641 00da 53       		.byte	0x53
 3642 00db 00000000 		.4byte	0
 3643 00df 00000000 		.4byte	0
 3644              	.LLST6:
 3645 00e3 00000000 		.4byte	.LVL25
 3646 00e7 04000000 		.4byte	.LVL26
 3647 00eb 0100     		.2byte	0x1
 3648 00ed 50       		.byte	0x50
 3649 00ee 04000000 		.4byte	.LVL26
 3650 00f2 10000000 		.4byte	.LFE9
 3651 00f6 0400     		.2byte	0x4
 3652 00f8 F3       		.byte	0xf3
 3653 00f9 01       		.uleb128 0x1
 3654 00fa 50       		.byte	0x50
 3655 00fb 9F       		.byte	0x9f
 3656 00fc 00000000 		.4byte	0
 3657 0100 00000000 		.4byte	0
 3658              	.LLST7:
 3659 0104 00000000 		.4byte	.LVL27
 3660 0108 04000000 		.4byte	.LVL28
 3661 010c 0100     		.2byte	0x1
 3662 010e 50       		.byte	0x50
 3663 010f 04000000 		.4byte	.LVL28
 3664 0113 1C000000 		.4byte	.LFE10
 3665 0117 0400     		.2byte	0x4
 3666 0119 F3       		.byte	0xf3
 3667 011a 01       		.uleb128 0x1
 3668 011b 50       		.byte	0x50
 3669 011c 9F       		.byte	0x9f
 3670 011d 00000000 		.4byte	0
 3671 0121 00000000 		.4byte	0
 3672              	.LLST8:
 3673 0125 00000000 		.4byte	.LVL29
 3674 0129 0A000000 		.4byte	.LVL31
 3675 012d 0100     		.2byte	0x1
 3676 012f 50       		.byte	0x50
 3677 0130 0A000000 		.4byte	.LVL31
 3678 0134 2C000000 		.4byte	.LVL35
 3679 0138 0100     		.2byte	0x1
 3680 013a 51       		.byte	0x51
 3681 013b 2C000000 		.4byte	.LVL35
 3682 013f 2E000000 		.4byte	.LVL36
 3683 0143 0100     		.2byte	0x1
 3684 0145 50       		.byte	0x50
 3685 0146 2E000000 		.4byte	.LVL36
 3686 014a 38000000 		.4byte	.LFE11
 3687 014e 0100     		.2byte	0x1
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 93


 3688 0150 51       		.byte	0x51
 3689 0151 00000000 		.4byte	0
 3690 0155 00000000 		.4byte	0
 3691              	.LLST9:
 3692 0159 02000000 		.4byte	.LVL30
 3693 015d 0A000000 		.4byte	.LVL31
 3694 0161 0200     		.2byte	0x2
 3695 0163 30       		.byte	0x30
 3696 0164 9F       		.byte	0x9f
 3697 0165 12000000 		.4byte	.LVL32
 3698 0169 2C000000 		.4byte	.LVL35
 3699 016d 0100     		.2byte	0x1
 3700 016f 50       		.byte	0x50
 3701 0170 2C000000 		.4byte	.LVL35
 3702 0174 2E000000 		.4byte	.LVL36
 3703 0178 0200     		.2byte	0x2
 3704 017a 30       		.byte	0x30
 3705 017b 9F       		.byte	0x9f
 3706 017c 2E000000 		.4byte	.LVL36
 3707 0180 38000000 		.4byte	.LFE11
 3708 0184 0100     		.2byte	0x1
 3709 0186 50       		.byte	0x50
 3710 0187 00000000 		.4byte	0
 3711 018b 00000000 		.4byte	0
 3712              	.LLST10:
 3713 018f 02000000 		.4byte	.LVL30
 3714 0193 0A000000 		.4byte	.LVL31
 3715 0197 0600     		.2byte	0x6
 3716 0199 0C       		.byte	0xc
 3717 019a FFFFFF03 		.4byte	0x3ffffff
 3718 019e 9F       		.byte	0x9f
 3719 019f 0A000000 		.4byte	.LVL31
 3720 01a3 26000000 		.4byte	.LVL34
 3721 01a7 0100     		.2byte	0x1
 3722 01a9 52       		.byte	0x52
 3723 01aa 2C000000 		.4byte	.LVL35
 3724 01ae 2E000000 		.4byte	.LVL36
 3725 01b2 0600     		.2byte	0x6
 3726 01b4 0C       		.byte	0xc
 3727 01b5 FFFFFF03 		.4byte	0x3ffffff
 3728 01b9 9F       		.byte	0x9f
 3729 01ba 00000000 		.4byte	0
 3730 01be 00000000 		.4byte	0
 3731              	.LLST11:
 3732 01c2 00000000 		.4byte	.LVL37
 3733 01c6 0A000000 		.4byte	.LVL38
 3734 01ca 0100     		.2byte	0x1
 3735 01cc 50       		.byte	0x50
 3736 01cd 0A000000 		.4byte	.LVL38
 3737 01d1 14000000 		.4byte	.LVL40
 3738 01d5 0100     		.2byte	0x1
 3739 01d7 54       		.byte	0x54
 3740 01d8 14000000 		.4byte	.LVL40
 3741 01dc 22000000 		.4byte	.LVL42
 3742 01e0 0400     		.2byte	0x4
 3743 01e2 F3       		.byte	0xf3
 3744 01e3 01       		.uleb128 0x1
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 94


 3745 01e4 50       		.byte	0x50
 3746 01e5 9F       		.byte	0x9f
 3747 01e6 22000000 		.4byte	.LVL42
 3748 01ea 24000000 		.4byte	.LVL43
 3749 01ee 0100     		.2byte	0x1
 3750 01f0 54       		.byte	0x54
 3751 01f1 24000000 		.4byte	.LVL43
 3752 01f5 2C000000 		.4byte	.LFE13
 3753 01f9 0400     		.2byte	0x4
 3754 01fb F3       		.byte	0xf3
 3755 01fc 01       		.uleb128 0x1
 3756 01fd 50       		.byte	0x50
 3757 01fe 9F       		.byte	0x9f
 3758 01ff 00000000 		.4byte	0
 3759 0203 00000000 		.4byte	0
 3760              	.LLST12:
 3761 0207 20000000 		.4byte	.LVL41
 3762 020b 22000000 		.4byte	.LVL42
 3763 020f 0100     		.2byte	0x1
 3764 0211 50       		.byte	0x50
 3765 0212 24000000 		.4byte	.LVL43
 3766 0216 26000000 		.4byte	.LVL44
 3767 021a 0100     		.2byte	0x1
 3768 021c 50       		.byte	0x50
 3769 021d 00000000 		.4byte	0
 3770 0221 00000000 		.4byte	0
 3771              	.LLST13:
 3772 0225 00000000 		.4byte	.LVL45
 3773 0229 0A000000 		.4byte	.LVL46
 3774 022d 0100     		.2byte	0x1
 3775 022f 50       		.byte	0x50
 3776 0230 0A000000 		.4byte	.LVL46
 3777 0234 34000000 		.4byte	.LVL57
 3778 0238 0100     		.2byte	0x1
 3779 023a 55       		.byte	0x55
 3780 023b 34000000 		.4byte	.LVL57
 3781 023f 3C000000 		.4byte	.LFE14
 3782 0243 0400     		.2byte	0x4
 3783 0245 F3       		.byte	0xf3
 3784 0246 01       		.uleb128 0x1
 3785 0247 50       		.byte	0x50
 3786 0248 9F       		.byte	0x9f
 3787 0249 00000000 		.4byte	0
 3788 024d 00000000 		.4byte	0
 3789              	.LLST14:
 3790 0251 20000000 		.4byte	.LVL48
 3791 0255 22000000 		.4byte	.LVL49
 3792 0259 0100     		.2byte	0x1
 3793 025b 54       		.byte	0x54
 3794 025c 24000000 		.4byte	.LVL50
 3795 0260 34000000 		.4byte	.LVL56
 3796 0264 0100     		.2byte	0x1
 3797 0266 54       		.byte	0x54
 3798 0267 00000000 		.4byte	0
 3799 026b 00000000 		.4byte	0
 3800              	.LLST15:
 3801 026f 2E000000 		.4byte	.LVL52
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 95


 3802 0273 32000000 		.4byte	.LVL54
 3803 0277 0100     		.2byte	0x1
 3804 0279 54       		.byte	0x54
 3805 027a 00000000 		.4byte	0
 3806 027e 00000000 		.4byte	0
 3807              	.LLST16:
 3808 0282 30000000 		.4byte	.LVL53
 3809 0286 32000000 		.4byte	.LVL54
 3810 028a 0100     		.2byte	0x1
 3811 028c 50       		.byte	0x50
 3812 028d 34000000 		.4byte	.LVL55
 3813 0291 3C000000 		.4byte	.LFE14
 3814 0295 0100     		.2byte	0x1
 3815 0297 50       		.byte	0x50
 3816 0298 00000000 		.4byte	0
 3817 029c 00000000 		.4byte	0
 3818              	.LLST17:
 3819 02a0 00000000 		.4byte	.LVL58
 3820 02a4 0E000000 		.4byte	.LVL59
 3821 02a8 0100     		.2byte	0x1
 3822 02aa 50       		.byte	0x50
 3823 02ab 0E000000 		.4byte	.LVL59
 3824 02af 1C000000 		.4byte	.LFE15
 3825 02b3 0400     		.2byte	0x4
 3826 02b5 F3       		.byte	0xf3
 3827 02b6 01       		.uleb128 0x1
 3828 02b7 50       		.byte	0x50
 3829 02b8 9F       		.byte	0x9f
 3830 02b9 00000000 		.4byte	0
 3831 02bd 00000000 		.4byte	0
 3832              	.LLST18:
 3833 02c1 00000000 		.4byte	.LVL60
 3834 02c5 0E000000 		.4byte	.LVL61
 3835 02c9 0100     		.2byte	0x1
 3836 02cb 50       		.byte	0x50
 3837 02cc 0E000000 		.4byte	.LVL61
 3838 02d0 18000000 		.4byte	.LFE16
 3839 02d4 0400     		.2byte	0x4
 3840 02d6 F3       		.byte	0xf3
 3841 02d7 01       		.uleb128 0x1
 3842 02d8 50       		.byte	0x50
 3843 02d9 9F       		.byte	0x9f
 3844 02da 00000000 		.4byte	0
 3845 02de 00000000 		.4byte	0
 3846              	.LLST19:
 3847 02e2 00000000 		.4byte	.LVL62
 3848 02e6 04000000 		.4byte	.LVL63
 3849 02ea 0100     		.2byte	0x1
 3850 02ec 50       		.byte	0x50
 3851 02ed 04000000 		.4byte	.LVL63
 3852 02f1 10000000 		.4byte	.LFE17
 3853 02f5 0400     		.2byte	0x4
 3854 02f7 F3       		.byte	0xf3
 3855 02f8 01       		.uleb128 0x1
 3856 02f9 50       		.byte	0x50
 3857 02fa 9F       		.byte	0x9f
 3858 02fb 00000000 		.4byte	0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 96


 3859 02ff 00000000 		.4byte	0
 3860              	.LLST20:
 3861 0303 00000000 		.4byte	.LVL64
 3862 0307 04000000 		.4byte	.LVL65
 3863 030b 0100     		.2byte	0x1
 3864 030d 50       		.byte	0x50
 3865 030e 04000000 		.4byte	.LVL65
 3866 0312 10000000 		.4byte	.LFE18
 3867 0316 0400     		.2byte	0x4
 3868 0318 F3       		.byte	0xf3
 3869 0319 01       		.uleb128 0x1
 3870 031a 50       		.byte	0x50
 3871 031b 9F       		.byte	0x9f
 3872 031c 00000000 		.4byte	0
 3873 0320 00000000 		.4byte	0
 3874              	.LLST21:
 3875 0324 00000000 		.4byte	.LVL66
 3876 0328 0C000000 		.4byte	.LVL67
 3877 032c 0100     		.2byte	0x1
 3878 032e 50       		.byte	0x50
 3879 032f 0C000000 		.4byte	.LVL67
 3880 0333 20000000 		.4byte	.LVL69
 3881 0337 0100     		.2byte	0x1
 3882 0339 54       		.byte	0x54
 3883 033a 20000000 		.4byte	.LVL69
 3884 033e 34000000 		.4byte	.LFE19
 3885 0342 0400     		.2byte	0x4
 3886 0344 F3       		.byte	0xf3
 3887 0345 01       		.uleb128 0x1
 3888 0346 50       		.byte	0x50
 3889 0347 9F       		.byte	0x9f
 3890 0348 00000000 		.4byte	0
 3891 034c 00000000 		.4byte	0
 3892              	.LLST22:
 3893 0350 00000000 		.4byte	.LVL66
 3894 0354 0F000000 		.4byte	.LVL68-1
 3895 0358 0100     		.2byte	0x1
 3896 035a 51       		.byte	0x51
 3897 035b 0F000000 		.4byte	.LVL68-1
 3898 035f 34000000 		.4byte	.LFE19
 3899 0363 0400     		.2byte	0x4
 3900 0365 F3       		.byte	0xf3
 3901 0366 01       		.uleb128 0x1
 3902 0367 51       		.byte	0x51
 3903 0368 9F       		.byte	0x9f
 3904 0369 00000000 		.4byte	0
 3905 036d 00000000 		.4byte	0
 3906              	.LLST23:
 3907 0371 00000000 		.4byte	.LVL70
 3908 0375 0C000000 		.4byte	.LVL71
 3909 0379 0100     		.2byte	0x1
 3910 037b 50       		.byte	0x50
 3911 037c 0C000000 		.4byte	.LVL71
 3912 0380 20000000 		.4byte	.LVL73
 3913 0384 0100     		.2byte	0x1
 3914 0386 54       		.byte	0x54
 3915 0387 20000000 		.4byte	.LVL73
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 97


 3916 038b 34000000 		.4byte	.LFE20
 3917 038f 0400     		.2byte	0x4
 3918 0391 F3       		.byte	0xf3
 3919 0392 01       		.uleb128 0x1
 3920 0393 50       		.byte	0x50
 3921 0394 9F       		.byte	0x9f
 3922 0395 00000000 		.4byte	0
 3923 0399 00000000 		.4byte	0
 3924              	.LLST24:
 3925 039d 00000000 		.4byte	.LVL70
 3926 03a1 0F000000 		.4byte	.LVL72-1
 3927 03a5 0100     		.2byte	0x1
 3928 03a7 51       		.byte	0x51
 3929 03a8 0F000000 		.4byte	.LVL72-1
 3930 03ac 26000000 		.4byte	.LVL74
 3931 03b0 0100     		.2byte	0x1
 3932 03b2 55       		.byte	0x55
 3933 03b3 26000000 		.4byte	.LVL74
 3934 03b7 34000000 		.4byte	.LFE20
 3935 03bb 1E00     		.2byte	0x1e
 3936 03bd 03       		.byte	0x3
 3937 03be 00000000 		.4byte	ADC_currentConfig
 3938 03c2 06       		.byte	0x6
 3939 03c3 33       		.byte	0x33
 3940 03c4 24       		.byte	0x24
 3941 03c5 03       		.byte	0x3
 3942 03c6 00000000 		.4byte	ADC_currentConfig
 3943 03ca 06       		.byte	0x6
 3944 03cb 1C       		.byte	0x1c
 3945 03cc 33       		.byte	0x33
 3946 03cd 24       		.byte	0x24
 3947 03ce 72       		.byte	0x72
 3948 03cf 00       		.sleb128 0
 3949 03d0 22       		.byte	0x22
 3950 03d1 06       		.byte	0x6
 3951 03d2 F3       		.byte	0xf3
 3952 03d3 01       		.uleb128 0x1
 3953 03d4 50       		.byte	0x50
 3954 03d5 22       		.byte	0x22
 3955 03d6 32       		.byte	0x32
 3956 03d7 24       		.byte	0x24
 3957 03d8 73       		.byte	0x73
 3958 03d9 00       		.sleb128 0
 3959 03da 22       		.byte	0x22
 3960 03db 00000000 		.4byte	0
 3961 03df 00000000 		.4byte	0
 3962              	.LLST25:
 3963 03e3 00000000 		.4byte	.LVL75
 3964 03e7 10000000 		.4byte	.LVL78
 3965 03eb 0100     		.2byte	0x1
 3966 03ed 50       		.byte	0x50
 3967 03ee 10000000 		.4byte	.LVL78
 3968 03f2 9C000000 		.4byte	.LVL98
 3969 03f6 0100     		.2byte	0x1
 3970 03f8 56       		.byte	0x56
 3971 03f9 9C000000 		.4byte	.LVL98
 3972 03fd B8000000 		.4byte	.LFE21
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 98


 3973 0401 0400     		.2byte	0x4
 3974 0403 F3       		.byte	0xf3
 3975 0404 01       		.uleb128 0x1
 3976 0405 50       		.byte	0x50
 3977 0406 9F       		.byte	0x9f
 3978 0407 00000000 		.4byte	0
 3979 040b 00000000 		.4byte	0
 3980              	.LLST26:
 3981 040f 00000000 		.4byte	.LVL75
 3982 0413 0A000000 		.4byte	.LVL77
 3983 0417 0100     		.2byte	0x1
 3984 0419 51       		.byte	0x51
 3985 041a 0A000000 		.4byte	.LVL77
 3986 041e 64000000 		.4byte	.LVL86
 3987 0422 0400     		.2byte	0x4
 3988 0424 F3       		.byte	0xf3
 3989 0425 01       		.uleb128 0x1
 3990 0426 51       		.byte	0x51
 3991 0427 9F       		.byte	0x9f
 3992 0428 64000000 		.4byte	.LVL86
 3993 042c 66000000 		.4byte	.LVL87
 3994 0430 0100     		.2byte	0x1
 3995 0432 54       		.byte	0x54
 3996 0433 66000000 		.4byte	.LVL87
 3997 0437 70000000 		.4byte	.LVL89
 3998 043b 0400     		.2byte	0x4
 3999 043d F3       		.byte	0xf3
 4000 043e 01       		.uleb128 0x1
 4001 043f 51       		.byte	0x51
 4002 0440 9F       		.byte	0x9f
 4003 0441 70000000 		.4byte	.LVL89
 4004 0445 7A000000 		.4byte	.LVL90
 4005 0449 0100     		.2byte	0x1
 4006 044b 54       		.byte	0x54
 4007 044c 7A000000 		.4byte	.LVL90
 4008 0450 7D000000 		.4byte	.LVL91-1
 4009 0454 0100     		.2byte	0x1
 4010 0456 50       		.byte	0x50
 4011 0457 9A000000 		.4byte	.LVL96
 4012 045b 9C000000 		.4byte	.LVL97
 4013 045f 0400     		.2byte	0x4
 4014 0461 F3       		.byte	0xf3
 4015 0462 01       		.uleb128 0x1
 4016 0463 51       		.byte	0x51
 4017 0464 9F       		.byte	0x9f
 4018 0465 00000000 		.4byte	0
 4019 0469 00000000 		.4byte	0
 4020              	.LLST27:
 4021 046d 06000000 		.4byte	.LVL76
 4022 0471 98000000 		.4byte	.LVL95
 4023 0475 0600     		.2byte	0x6
 4024 0477 9E       		.byte	0x9e
 4025 0478 04       		.uleb128 0x4
 4026 0479 00000000 		.4byte	0
 4027 047d 98000000 		.4byte	.LVL95
 4028 0481 9A000000 		.4byte	.LVL96
 4029 0485 0100     		.2byte	0x1
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 99


 4030 0487 50       		.byte	0x50
 4031 0488 9A000000 		.4byte	.LVL96
 4032 048c 9C000000 		.4byte	.LVL97
 4033 0490 0600     		.2byte	0x6
 4034 0492 9E       		.byte	0x9e
 4035 0493 04       		.uleb128 0x4
 4036 0494 00000000 		.4byte	0
 4037 0498 9C000000 		.4byte	.LVL97
 4038 049c B8000000 		.4byte	.LFE21
 4039 04a0 0100     		.2byte	0x1
 4040 04a2 50       		.byte	0x50
 4041 04a3 00000000 		.4byte	0
 4042 04a7 00000000 		.4byte	0
 4043              	.LLST28:
 4044 04ab 62000000 		.4byte	.LVL85
 4045 04af 66000000 		.4byte	.LVL87
 4046 04b3 0100     		.2byte	0x1
 4047 04b5 50       		.byte	0x50
 4048 04b6 00000000 		.4byte	0
 4049 04ba 00000000 		.4byte	0
 4050              	.LLST29:
 4051 04be 4A000000 		.4byte	.LVL81
 4052 04c2 4C000000 		.4byte	.LVL82
 4053 04c6 0100     		.2byte	0x1
 4054 04c8 53       		.byte	0x53
 4055 04c9 4C000000 		.4byte	.LVL82
 4056 04cd 50000000 		.4byte	.LVL83
 4057 04d1 0300     		.2byte	0x3
 4058 04d3 73       		.byte	0x73
 4059 04d4 7F       		.sleb128 -1
 4060 04d5 9F       		.byte	0x9f
 4061 04d6 50000000 		.4byte	.LVL83
 4062 04da 70000000 		.4byte	.LVL89
 4063 04de 0100     		.2byte	0x1
 4064 04e0 57       		.byte	0x57
 4065 04e1 00000000 		.4byte	0
 4066 04e5 00000000 		.4byte	0
 4067              	.LLST30:
 4068 04e9 16000000 		.4byte	.LVL79
 4069 04ed 88000000 		.4byte	.LVL93
 4070 04f1 0100     		.2byte	0x1
 4071 04f3 55       		.byte	0x55
 4072 04f4 9A000000 		.4byte	.LVL96
 4073 04f8 9C000000 		.4byte	.LVL97
 4074 04fc 0100     		.2byte	0x1
 4075 04fe 55       		.byte	0x55
 4076 04ff 00000000 		.4byte	0
 4077 0503 00000000 		.4byte	0
 4078              	.LLST31:
 4079 0507 00000000 		.4byte	.LVL99
 4080 050b 10000000 		.4byte	.LVL102
 4081 050f 0100     		.2byte	0x1
 4082 0511 50       		.byte	0x50
 4083 0512 10000000 		.4byte	.LVL102
 4084 0516 B2000000 		.4byte	.LVL121
 4085 051a 0100     		.2byte	0x1
 4086 051c 56       		.byte	0x56
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 100


 4087 051d B2000000 		.4byte	.LVL121
 4088 0521 CC000000 		.4byte	.LFE22
 4089 0525 0400     		.2byte	0x4
 4090 0527 F3       		.byte	0xf3
 4091 0528 01       		.uleb128 0x1
 4092 0529 50       		.byte	0x50
 4093 052a 9F       		.byte	0x9f
 4094 052b 00000000 		.4byte	0
 4095 052f 00000000 		.4byte	0
 4096              	.LLST32:
 4097 0533 00000000 		.4byte	.LVL99
 4098 0537 0A000000 		.4byte	.LVL101
 4099 053b 0100     		.2byte	0x1
 4100 053d 51       		.byte	0x51
 4101 053e 0A000000 		.4byte	.LVL101
 4102 0542 64000000 		.4byte	.LVL110
 4103 0546 0400     		.2byte	0x4
 4104 0548 F3       		.byte	0xf3
 4105 0549 01       		.uleb128 0x1
 4106 054a 51       		.byte	0x51
 4107 054b 9F       		.byte	0x9f
 4108 054c 64000000 		.4byte	.LVL110
 4109 0550 66000000 		.4byte	.LVL111
 4110 0554 0100     		.2byte	0x1
 4111 0556 54       		.byte	0x54
 4112 0557 66000000 		.4byte	.LVL111
 4113 055b 70000000 		.4byte	.LVL113
 4114 055f 0400     		.2byte	0x4
 4115 0561 F3       		.byte	0xf3
 4116 0562 01       		.uleb128 0x1
 4117 0563 51       		.byte	0x51
 4118 0564 9F       		.byte	0x9f
 4119 0565 70000000 		.4byte	.LVL113
 4120 0569 78000000 		.4byte	.LVL114
 4121 056d 0100     		.2byte	0x1
 4122 056f 54       		.byte	0x54
 4123 0570 7A000000 		.4byte	.LVL115
 4124 0574 AE000000 		.4byte	.LVL119
 4125 0578 0100     		.2byte	0x1
 4126 057a 54       		.byte	0x54
 4127 057b AE000000 		.4byte	.LVL119
 4128 057f B0000000 		.4byte	.LVL120
 4129 0583 0400     		.2byte	0x4
 4130 0585 F3       		.byte	0xf3
 4131 0586 01       		.uleb128 0x1
 4132 0587 51       		.byte	0x51
 4133 0588 9F       		.byte	0x9f
 4134 0589 00000000 		.4byte	0
 4135 058d 00000000 		.4byte	0
 4136              	.LLST33:
 4137 0591 06000000 		.4byte	.LVL100
 4138 0595 AC000000 		.4byte	.LVL118
 4139 0599 0200     		.2byte	0x2
 4140 059b 30       		.byte	0x30
 4141 059c 9F       		.byte	0x9f
 4142 059d AC000000 		.4byte	.LVL118
 4143 05a1 AE000000 		.4byte	.LVL119
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 101


 4144 05a5 0100     		.2byte	0x1
 4145 05a7 50       		.byte	0x50
 4146 05a8 AE000000 		.4byte	.LVL119
 4147 05ac B0000000 		.4byte	.LVL120
 4148 05b0 0200     		.2byte	0x2
 4149 05b2 30       		.byte	0x30
 4150 05b3 9F       		.byte	0x9f
 4151 05b4 B0000000 		.4byte	.LVL120
 4152 05b8 CC000000 		.4byte	.LFE22
 4153 05bc 0100     		.2byte	0x1
 4154 05be 50       		.byte	0x50
 4155 05bf 00000000 		.4byte	0
 4156 05c3 00000000 		.4byte	0
 4157              	.LLST34:
 4158 05c7 62000000 		.4byte	.LVL109
 4159 05cb 66000000 		.4byte	.LVL111
 4160 05cf 0100     		.2byte	0x1
 4161 05d1 50       		.byte	0x50
 4162 05d2 00000000 		.4byte	0
 4163 05d6 00000000 		.4byte	0
 4164              	.LLST35:
 4165 05da 4A000000 		.4byte	.LVL105
 4166 05de 4C000000 		.4byte	.LVL106
 4167 05e2 0100     		.2byte	0x1
 4168 05e4 53       		.byte	0x53
 4169 05e5 4C000000 		.4byte	.LVL106
 4170 05e9 50000000 		.4byte	.LVL107
 4171 05ed 0300     		.2byte	0x3
 4172 05ef 73       		.byte	0x73
 4173 05f0 7F       		.sleb128 -1
 4174 05f1 9F       		.byte	0x9f
 4175 05f2 50000000 		.4byte	.LVL107
 4176 05f6 70000000 		.4byte	.LVL113
 4177 05fa 0100     		.2byte	0x1
 4178 05fc 57       		.byte	0x57
 4179 05fd 00000000 		.4byte	0
 4180 0601 00000000 		.4byte	0
 4181              	.LLST36:
 4182 0605 16000000 		.4byte	.LVL103
 4183 0609 A2000000 		.4byte	.LVL116
 4184 060d 0100     		.2byte	0x1
 4185 060f 55       		.byte	0x55
 4186 0610 AE000000 		.4byte	.LVL119
 4187 0614 B0000000 		.4byte	.LVL120
 4188 0618 0100     		.2byte	0x1
 4189 061a 55       		.byte	0x55
 4190 061b 00000000 		.4byte	0
 4191 061f 00000000 		.4byte	0
 4192              	.LLST37:
 4193 0623 00000000 		.4byte	.LVL122
 4194 0627 10000000 		.4byte	.LVL125
 4195 062b 0100     		.2byte	0x1
 4196 062d 50       		.byte	0x50
 4197 062e 10000000 		.4byte	.LVL125
 4198 0632 94000000 		.4byte	.LVL143
 4199 0636 0100     		.2byte	0x1
 4200 0638 56       		.byte	0x56
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 102


 4201 0639 94000000 		.4byte	.LVL143
 4202 063d B0000000 		.4byte	.LFE23
 4203 0641 0400     		.2byte	0x4
 4204 0643 F3       		.byte	0xf3
 4205 0644 01       		.uleb128 0x1
 4206 0645 50       		.byte	0x50
 4207 0646 9F       		.byte	0x9f
 4208 0647 00000000 		.4byte	0
 4209 064b 00000000 		.4byte	0
 4210              	.LLST38:
 4211 064f 00000000 		.4byte	.LVL122
 4212 0653 0A000000 		.4byte	.LVL124
 4213 0657 0100     		.2byte	0x1
 4214 0659 51       		.byte	0x51
 4215 065a 0A000000 		.4byte	.LVL124
 4216 065e 64000000 		.4byte	.LVL133
 4217 0662 0400     		.2byte	0x4
 4218 0664 F3       		.byte	0xf3
 4219 0665 01       		.uleb128 0x1
 4220 0666 51       		.byte	0x51
 4221 0667 9F       		.byte	0x9f
 4222 0668 64000000 		.4byte	.LVL133
 4223 066c 66000000 		.4byte	.LVL134
 4224 0670 0100     		.2byte	0x1
 4225 0672 54       		.byte	0x54
 4226 0673 66000000 		.4byte	.LVL134
 4227 0677 70000000 		.4byte	.LVL136
 4228 067b 0400     		.2byte	0x4
 4229 067d F3       		.byte	0xf3
 4230 067e 01       		.uleb128 0x1
 4231 067f 51       		.byte	0x51
 4232 0680 9F       		.byte	0x9f
 4233 0681 70000000 		.4byte	.LVL136
 4234 0685 7A000000 		.4byte	.LVL137
 4235 0689 0100     		.2byte	0x1
 4236 068b 54       		.byte	0x54
 4237 068c 7A000000 		.4byte	.LVL137
 4238 0690 83000000 		.4byte	.LVL138-1
 4239 0694 0100     		.2byte	0x1
 4240 0696 50       		.byte	0x50
 4241 0697 92000000 		.4byte	.LVL141
 4242 069b 94000000 		.4byte	.LVL142
 4243 069f 0400     		.2byte	0x4
 4244 06a1 F3       		.byte	0xf3
 4245 06a2 01       		.uleb128 0x1
 4246 06a3 51       		.byte	0x51
 4247 06a4 9F       		.byte	0x9f
 4248 06a5 00000000 		.4byte	0
 4249 06a9 00000000 		.4byte	0
 4250              	.LLST39:
 4251 06ad 06000000 		.4byte	.LVL123
 4252 06b1 90000000 		.4byte	.LVL140
 4253 06b5 0A00     		.2byte	0xa
 4254 06b7 9E       		.byte	0x9e
 4255 06b8 08       		.uleb128 0x8
 4256 06b9 00000000 		.8byte	0
 4256      00000000 
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 103


 4257 06c1 92000000 		.4byte	.LVL141
 4258 06c5 94000000 		.4byte	.LVL142
 4259 06c9 0A00     		.2byte	0xa
 4260 06cb 9E       		.byte	0x9e
 4261 06cc 08       		.uleb128 0x8
 4262 06cd 00000000 		.8byte	0
 4262      00000000 
 4263 06d5 00000000 		.4byte	0
 4264 06d9 00000000 		.4byte	0
 4265              	.LLST40:
 4266 06dd 62000000 		.4byte	.LVL132
 4267 06e1 66000000 		.4byte	.LVL134
 4268 06e5 0100     		.2byte	0x1
 4269 06e7 50       		.byte	0x50
 4270 06e8 00000000 		.4byte	0
 4271 06ec 00000000 		.4byte	0
 4272              	.LLST41:
 4273 06f0 4A000000 		.4byte	.LVL128
 4274 06f4 4C000000 		.4byte	.LVL129
 4275 06f8 0100     		.2byte	0x1
 4276 06fa 53       		.byte	0x53
 4277 06fb 4C000000 		.4byte	.LVL129
 4278 06ff 50000000 		.4byte	.LVL130
 4279 0703 0300     		.2byte	0x3
 4280 0705 73       		.byte	0x73
 4281 0706 7F       		.sleb128 -1
 4282 0707 9F       		.byte	0x9f
 4283 0708 50000000 		.4byte	.LVL130
 4284 070c 70000000 		.4byte	.LVL136
 4285 0710 0100     		.2byte	0x1
 4286 0712 57       		.byte	0x57
 4287 0713 00000000 		.4byte	0
 4288 0717 00000000 		.4byte	0
 4289              	.LLST42:
 4290 071b 16000000 		.4byte	.LVL126
 4291 071f 86000000 		.4byte	.LVL139
 4292 0723 0100     		.2byte	0x1
 4293 0725 55       		.byte	0x55
 4294 0726 92000000 		.4byte	.LVL141
 4295 072a 94000000 		.4byte	.LVL142
 4296 072e 0100     		.2byte	0x1
 4297 0730 55       		.byte	0x55
 4298 0731 00000000 		.4byte	0
 4299 0735 00000000 		.4byte	0
 4300              	.LLST43:
 4301 0739 06000000 		.4byte	.LVL144
 4302 073d 10000000 		.4byte	.LVL145
 4303 0741 0200     		.2byte	0x2
 4304 0743 30       		.byte	0x30
 4305 0744 9F       		.byte	0x9f
 4306 0745 10000000 		.4byte	.LVL145
 4307 0749 BA000000 		.4byte	.LVL151
 4308 074d 0100     		.2byte	0x1
 4309 074f 54       		.byte	0x54
 4310 0750 BA000000 		.4byte	.LVL151
 4311 0754 BE000000 		.4byte	.LVL152
 4312 0758 0200     		.2byte	0x2
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 104


 4313 075a 30       		.byte	0x30
 4314 075b 9F       		.byte	0x9f
 4315 075c BE000000 		.4byte	.LVL152
 4316 0760 FA000000 		.4byte	.LVL158
 4317 0764 0100     		.2byte	0x1
 4318 0766 54       		.byte	0x54
 4319 0767 00000000 		.4byte	0
 4320 076b 00000000 		.4byte	0
 4321              	.LLST44:
 4322 076f 06000000 		.4byte	.LVL144
 4323 0773 10000000 		.4byte	.LVL145
 4324 0777 0200     		.2byte	0x2
 4325 0779 30       		.byte	0x30
 4326 077a 9F       		.byte	0x9f
 4327 077b 10000000 		.4byte	.LVL145
 4328 077f BA000000 		.4byte	.LVL151
 4329 0783 0100     		.2byte	0x1
 4330 0785 57       		.byte	0x57
 4331 0786 BA000000 		.4byte	.LVL151
 4332 078a BE000000 		.4byte	.LVL152
 4333 078e 0200     		.2byte	0x2
 4334 0790 30       		.byte	0x30
 4335 0791 9F       		.byte	0x9f
 4336 0792 BE000000 		.4byte	.LVL152
 4337 0796 D2000000 		.4byte	.LVL154
 4338 079a 0100     		.2byte	0x1
 4339 079c 57       		.byte	0x57
 4340 079d D2000000 		.4byte	.LVL154
 4341 07a1 D6000000 		.4byte	.LVL155
 4342 07a5 0200     		.2byte	0x2
 4343 07a7 30       		.byte	0x30
 4344 07a8 9F       		.byte	0x9f
 4345 07a9 D6000000 		.4byte	.LVL155
 4346 07ad F2000000 		.4byte	.LVL157
 4347 07b1 0100     		.2byte	0x1
 4348 07b3 53       		.byte	0x53
 4349 07b4 FE000000 		.4byte	.LVL159
 4350 07b8 0A010000 		.4byte	.LVL161
 4351 07bc 0200     		.2byte	0x2
 4352 07be 30       		.byte	0x30
 4353 07bf 9F       		.byte	0x9f
 4354 07c0 00000000 		.4byte	0
 4355 07c4 00000000 		.4byte	0
 4356              	.LLST45:
 4357 07c8 3A000000 		.4byte	.LVL146
 4358 07cc 86000000 		.4byte	.LVL147
 4359 07d0 0100     		.2byte	0x1
 4360 07d2 50       		.byte	0x50
 4361 07d3 00000000 		.4byte	0
 4362 07d7 00000000 		.4byte	0
 4363              	.LLST46:
 4364 07db 00000000 		.4byte	.LVL165
 4365 07df 07000000 		.4byte	.LVL166-1
 4366 07e3 0100     		.2byte	0x1
 4367 07e5 50       		.byte	0x50
 4368 07e6 07000000 		.4byte	.LVL166-1
 4369 07ea 0E000000 		.4byte	.LVL168
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 105


 4370 07ee 0100     		.2byte	0x1
 4371 07f0 54       		.byte	0x54
 4372 07f1 0E000000 		.4byte	.LVL168
 4373 07f5 10000000 		.4byte	.LFE2
 4374 07f9 0400     		.2byte	0x4
 4375 07fb F3       		.byte	0xf3
 4376 07fc 01       		.uleb128 0x1
 4377 07fd 50       		.byte	0x50
 4378 07fe 9F       		.byte	0x9f
 4379 07ff 00000000 		.4byte	0
 4380 0803 00000000 		.4byte	0
 4381              	.LLST47:
 4382 0807 00000000 		.4byte	.LVL169
 4383 080b 0D000000 		.4byte	.LVL170-1
 4384 080f 0100     		.2byte	0x1
 4385 0811 50       		.byte	0x50
 4386 0812 0D000000 		.4byte	.LVL170-1
 4387 0816 46000000 		.4byte	.LVL174
 4388 081a 0100     		.2byte	0x1
 4389 081c 54       		.byte	0x54
 4390 081d 46000000 		.4byte	.LVL174
 4391 0821 54000000 		.4byte	.LFE5
 4392 0825 0400     		.2byte	0x4
 4393 0827 F3       		.byte	0xf3
 4394 0828 01       		.uleb128 0x1
 4395 0829 50       		.byte	0x50
 4396 082a 9F       		.byte	0x9f
 4397 082b 00000000 		.4byte	0
 4398 082f 00000000 		.4byte	0
 4399              	.LLST48:
 4400 0833 00000000 		.4byte	.LVL169
 4401 0837 0D000000 		.4byte	.LVL170-1
 4402 083b 0100     		.2byte	0x1
 4403 083d 51       		.byte	0x51
 4404 083e 0D000000 		.4byte	.LVL170-1
 4405 0842 46000000 		.4byte	.LVL174
 4406 0846 0100     		.2byte	0x1
 4407 0848 55       		.byte	0x55
 4408 0849 46000000 		.4byte	.LVL174
 4409 084d 54000000 		.4byte	.LFE5
 4410 0851 0400     		.2byte	0x4
 4411 0853 F3       		.byte	0xf3
 4412 0854 01       		.uleb128 0x1
 4413 0855 51       		.byte	0x51
 4414 0856 9F       		.byte	0x9f
 4415 0857 00000000 		.4byte	0
 4416 085b 00000000 		.4byte	0
 4417              		.section	.debug_aranges,"",%progbits
 4418 0000 DC000000 		.4byte	0xdc
 4419 0004 0200     		.2byte	0x2
 4420 0006 00000000 		.4byte	.Ldebug_info0
 4421 000a 04       		.byte	0x4
 4422 000b 00       		.byte	0
 4423 000c 0000     		.2byte	0
 4424 000e 0000     		.2byte	0
 4425 0010 00000000 		.4byte	.LFB12
 4426 0014 58000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 106


 4427 0018 00000000 		.4byte	.LFB3
 4428 001c 10000000 		.4byte	.LFE3-.LFB3
 4429 0020 00000000 		.4byte	.LFB4
 4430 0024 00010000 		.4byte	.LFE4-.LFB4
 4431 0028 00000000 		.4byte	.LFB6
 4432 002c 28000000 		.4byte	.LFE6-.LFB6
 4433 0030 00000000 		.4byte	.LFB8
 4434 0034 28000000 		.4byte	.LFE8-.LFB8
 4435 0038 00000000 		.4byte	.LFB9
 4436 003c 10000000 		.4byte	.LFE9-.LFB9
 4437 0040 00000000 		.4byte	.LFB10
 4438 0044 1C000000 		.4byte	.LFE10-.LFB10
 4439 0048 00000000 		.4byte	.LFB11
 4440 004c 38000000 		.4byte	.LFE11-.LFB11
 4441 0050 00000000 		.4byte	.LFB13
 4442 0054 2C000000 		.4byte	.LFE13-.LFB13
 4443 0058 00000000 		.4byte	.LFB14
 4444 005c 3C000000 		.4byte	.LFE14-.LFB14
 4445 0060 00000000 		.4byte	.LFB15
 4446 0064 1C000000 		.4byte	.LFE15-.LFB15
 4447 0068 00000000 		.4byte	.LFB16
 4448 006c 18000000 		.4byte	.LFE16-.LFB16
 4449 0070 00000000 		.4byte	.LFB17
 4450 0074 10000000 		.4byte	.LFE17-.LFB17
 4451 0078 00000000 		.4byte	.LFB18
 4452 007c 10000000 		.4byte	.LFE18-.LFB18
 4453 0080 00000000 		.4byte	.LFB19
 4454 0084 34000000 		.4byte	.LFE19-.LFB19
 4455 0088 00000000 		.4byte	.LFB20
 4456 008c 34000000 		.4byte	.LFE20-.LFB20
 4457 0090 00000000 		.4byte	.LFB21
 4458 0094 B8000000 		.4byte	.LFE21-.LFB21
 4459 0098 00000000 		.4byte	.LFB22
 4460 009c CC000000 		.4byte	.LFE22-.LFB22
 4461 00a0 00000000 		.4byte	.LFB23
 4462 00a4 B0000000 		.4byte	.LFE23-.LFB23
 4463 00a8 00000000 		.4byte	.LFB24
 4464 00ac 30010000 		.4byte	.LFE24-.LFB24
 4465 00b0 00000000 		.4byte	.LFB25
 4466 00b4 30000000 		.4byte	.LFE25-.LFB25
 4467 00b8 00000000 		.4byte	.LFB1
 4468 00bc 24000000 		.4byte	.LFE1-.LFB1
 4469 00c0 00000000 		.4byte	.LFB2
 4470 00c4 10000000 		.4byte	.LFE2-.LFB2
 4471 00c8 00000000 		.4byte	.LFB5
 4472 00cc 54000000 		.4byte	.LFE5-.LFB5
 4473 00d0 00000000 		.4byte	.LFB7
 4474 00d4 44000000 		.4byte	.LFE7-.LFB7
 4475 00d8 00000000 		.4byte	0
 4476 00dc 00000000 		.4byte	0
 4477              		.section	.debug_ranges,"",%progbits
 4478              	.Ldebug_ranges0:
 4479 0000 00000000 		.4byte	.LFB12
 4480 0004 58000000 		.4byte	.LFE12
 4481 0008 00000000 		.4byte	.LFB3
 4482 000c 10000000 		.4byte	.LFE3
 4483 0010 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 107


 4484 0014 00010000 		.4byte	.LFE4
 4485 0018 00000000 		.4byte	.LFB6
 4486 001c 28000000 		.4byte	.LFE6
 4487 0020 00000000 		.4byte	.LFB8
 4488 0024 28000000 		.4byte	.LFE8
 4489 0028 00000000 		.4byte	.LFB9
 4490 002c 10000000 		.4byte	.LFE9
 4491 0030 00000000 		.4byte	.LFB10
 4492 0034 1C000000 		.4byte	.LFE10
 4493 0038 00000000 		.4byte	.LFB11
 4494 003c 38000000 		.4byte	.LFE11
 4495 0040 00000000 		.4byte	.LFB13
 4496 0044 2C000000 		.4byte	.LFE13
 4497 0048 00000000 		.4byte	.LFB14
 4498 004c 3C000000 		.4byte	.LFE14
 4499 0050 00000000 		.4byte	.LFB15
 4500 0054 1C000000 		.4byte	.LFE15
 4501 0058 00000000 		.4byte	.LFB16
 4502 005c 18000000 		.4byte	.LFE16
 4503 0060 00000000 		.4byte	.LFB17
 4504 0064 10000000 		.4byte	.LFE17
 4505 0068 00000000 		.4byte	.LFB18
 4506 006c 10000000 		.4byte	.LFE18
 4507 0070 00000000 		.4byte	.LFB19
 4508 0074 34000000 		.4byte	.LFE19
 4509 0078 00000000 		.4byte	.LFB20
 4510 007c 34000000 		.4byte	.LFE20
 4511 0080 00000000 		.4byte	.LFB21
 4512 0084 B8000000 		.4byte	.LFE21
 4513 0088 00000000 		.4byte	.LFB22
 4514 008c CC000000 		.4byte	.LFE22
 4515 0090 00000000 		.4byte	.LFB23
 4516 0094 B0000000 		.4byte	.LFE23
 4517 0098 00000000 		.4byte	.LFB24
 4518 009c 30010000 		.4byte	.LFE24
 4519 00a0 00000000 		.4byte	.LFB25
 4520 00a4 30000000 		.4byte	.LFE25
 4521 00a8 00000000 		.4byte	.LFB1
 4522 00ac 24000000 		.4byte	.LFE1
 4523 00b0 00000000 		.4byte	.LFB2
 4524 00b4 10000000 		.4byte	.LFE2
 4525 00b8 00000000 		.4byte	.LFB5
 4526 00bc 54000000 		.4byte	.LFE5
 4527 00c0 00000000 		.4byte	.LFB7
 4528 00c4 44000000 		.4byte	.LFE7
 4529 00c8 00000000 		.4byte	0
 4530 00cc 00000000 		.4byte	0
 4531              		.section	.debug_line,"",%progbits
 4532              	.Ldebug_line0:
 4533 0000 CA030000 		.section	.debug_str,"MS",%progbits,1
 4533      02007800 
 4533      00000201 
 4533      FB0E0D00 
 4533      01010101 
 4534              	.LASF10:
 4535 0000 75696E74 		.ascii	"uint16\000"
 4535      313600
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 108


 4536              	.LASF69:
 4537 0007 61646347 		.ascii	"adcGain\000"
 4537      61696E00 
 4538              	.LASF105:
 4539 000f 443A5C44 		.ascii	"D:\\Dolgaim\\MCU\\Cypress PSoC\\Git\\Lighting_with_"
 4539      6F6C6761 
 4539      696D5C4D 
 4539      43555C43 
 4539      79707265 
 4540 003d 50536F43 		.ascii	"PSoC_ACP.cydsn\000"
 4540      5F414350 
 4540      2E637964 
 4540      736E00
 4541              	.LASF82:
 4542 004c 636F756E 		.ascii	"counts\000"
 4542      747300
 4543              	.LASF70:
 4544 0053 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 4544      436F756E 
 4544      7473546F 
 4544      5F566F6C 
 4544      747300
 4545              	.LASF80:
 4546 0066 4144435F 		.ascii	"ADC_Init\000"
 4546      496E6974 
 4546      00
 4547              	.LASF90:
 4548 006f 4144435F 		.ascii	"ADC_currentConfig\000"
 4548      63757272 
 4548      656E7443 
 4548      6F6E6669 
 4548      6700
 4549              	.LASF48:
 4550 0081 4144435F 		.ascii	"ADC_SetEosMask\000"
 4550      53657445 
 4550      6F734D61 
 4550      736B00
 4551              	.LASF7:
 4552 0090 6C6F6E67 		.ascii	"long long unsigned int\000"
 4552      206C6F6E 
 4552      6720756E 
 4552      7369676E 
 4552      65642069 
 4553              	.LASF98:
 4554 00a7 4144435F 		.ascii	"ADC_InputsPlacement\000"
 4554      496E7075 
 4554      7473506C 
 4554      6163656D 
 4554      656E7400 
 4555              	.LASF44:
 4556 00bb 4144435F 		.ascii	"ADC_StartConvert\000"
 4556      53746172 
 4556      74436F6E 
 4556      76657274 
 4556      00
 4557              	.LASF6:
 4558 00cc 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 109


 4558      206C6F6E 
 4558      6720696E 
 4558      7400
 4559              	.LASF0:
 4560 00da 7369676E 		.ascii	"signed char\000"
 4560      65642063 
 4560      68617200 
 4561              	.LASF35:
 4562 00e6 636C6B44 		.ascii	"clkDivider\000"
 4562      69766964 
 4562      657200
 4563              	.LASF13:
 4564 00f1 696E7433 		.ascii	"int32\000"
 4564      3200
 4565              	.LASF87:
 4566 00f7 4144435F 		.ascii	"ADC_SelectConfig\000"
 4566      53656C65 
 4566      6374436F 
 4566      6E666967 
 4566      00
 4567              	.LASF65:
 4568 0108 4144435F 		.ascii	"ADC_SetSatMask\000"
 4568      53657453 
 4568      61744D61 
 4568      736B00
 4569              	.LASF4:
 4570 0117 6C6F6E67 		.ascii	"long int\000"
 4570      20696E74 
 4570      00
 4571              	.LASF78:
 4572 0120 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 4572      436F756E 
 4572      7473546F 
 4572      5F75566F 
 4572      6C747300 
 4573              	.LASF96:
 4574 0134 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 4574      636F756E 
 4574      74735065 
 4574      72313056 
 4574      6F6C7400 
 4575              	.LASF9:
 4576 0148 75696E74 		.ascii	"uint8\000"
 4576      3800
 4577              	.LASF102:
 4578 014e 43794465 		.ascii	"CyDelayUs\000"
 4578      6C617955 
 4578      7300
 4579              	.LASF16:
 4580 0158 646F7562 		.ascii	"double\000"
 4580      6C6500
 4581              	.LASF57:
 4582 015f 4144435F 		.ascii	"ADC_GetResult32\000"
 4582      47657452 
 4582      6573756C 
 4582      74333200 
 4583              	.LASF36:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 110


 4584 016f 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 4584      434F4E46 
 4584      49475F53 
 4584      54525543 
 4584      5400
 4585              	.LASF26:
 4586 0181 73616D70 		.ascii	"sampleTime01\000"
 4586      6C655469 
 4586      6D653031 
 4586      00
 4587              	.LASF11:
 4588 018e 75696E74 		.ascii	"uint32\000"
 4588      333200
 4589              	.LASF107:
 4590 0195 4379496E 		.ascii	"CyIntSetVector\000"
 4590      74536574 
 4590      56656374 
 4590      6F7200
 4591              	.LASF49:
 4592 01a4 6D61736B 		.ascii	"mask\000"
 4592      00
 4593              	.LASF93:
 4594 01a9 4144435F 		.ascii	"ADC_initVar\000"
 4594      696E6974 
 4594      56617200 
 4595              	.LASF73:
 4596 01b5 74656D70 		.ascii	"temp\000"
 4596      00
 4597              	.LASF52:
 4598 01ba 7265744D 		.ascii	"retMode\000"
 4598      6F646500 
 4599              	.LASF64:
 4600 01c2 4144435F 		.ascii	"ADC_SetLimitMask\000"
 4600      5365744C 
 4600      696D6974 
 4600      4D61736B 
 4600      00
 4601              	.LASF8:
 4602 01d3 756E7369 		.ascii	"unsigned int\000"
 4602      676E6564 
 4602      20696E74 
 4602      00
 4603              	.LASF31:
 4604 01e0 72616E67 		.ascii	"rangeIntMask\000"
 4604      65496E74 
 4604      4D61736B 
 4604      00
 4605              	.LASF81:
 4606 01ed 636F6E66 		.ascii	"configNum\000"
 4606      69674E75 
 4606      6D00
 4607              	.LASF5:
 4608 01f7 6C6F6E67 		.ascii	"long unsigned int\000"
 4608      20756E73 
 4608      69676E65 
 4608      6420696E 
 4608      7400
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 111


 4609              	.LASF42:
 4610 0209 746D7052 		.ascii	"tmpRegVal\000"
 4610      65675661 
 4610      6C00
 4611              	.LASF74:
 4612 0213 61766572 		.ascii	"averageAdcSamplesDiv\000"
 4612      61676541 
 4612      64635361 
 4612      6D706C65 
 4612      73446976 
 4613              	.LASF3:
 4614 0228 73686F72 		.ascii	"short unsigned int\000"
 4614      7420756E 
 4614      7369676E 
 4614      65642069 
 4614      6E7400
 4615              	.LASF28:
 4616 023b 72616E67 		.ascii	"rangeThres\000"
 4616      65546872 
 4616      657300
 4617              	.LASF89:
 4618 0246 4144435F 		.ascii	"ADC_StopConvert\000"
 4618      53746F70 
 4618      436F6E76 
 4618      65727400 
 4619              	.LASF59:
 4620 0256 66696E61 		.ascii	"finalResult\000"
 4620      6C526573 
 4620      756C7400 
 4621              	.LASF75:
 4622 0262 72617743 		.ascii	"rawChannel\000"
 4622      68616E6E 
 4622      656C00
 4623              	.LASF23:
 4624 026d 6E756D43 		.ascii	"numChannels\000"
 4624      68616E6E 
 4624      656C7300 
 4625              	.LASF38:
 4626 0279 6368616E 		.ascii	"chanConfig\000"
 4626      436F6E66 
 4626      696700
 4627              	.LASF51:
 4628 0284 6368616E 		.ascii	"chanMask\000"
 4628      4D61736B 
 4628      00
 4629              	.LASF19:
 4630 028d 72656733 		.ascii	"reg32\000"
 4630      3200
 4631              	.LASF37:
 4632 0293 69735369 		.ascii	"isSigned\000"
 4632      676E6564 
 4632      00
 4633              	.LASF56:
 4634 029c 61646352 		.ascii	"adcResult\000"
 4634      6573756C 
 4634      7400
 4635              	.LASF46:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 112


 4636 02a6 4144435F 		.ascii	"ADC_SetConvertMode\000"
 4636      53657443 
 4636      6F6E7665 
 4636      72744D6F 
 4636      646500
 4637              	.LASF14:
 4638 02b9 666C6F61 		.ascii	"float32\000"
 4638      74333200 
 4639              	.LASF21:
 4640 02c1 73697A65 		.ascii	"sizetype\000"
 4640      74797065 
 4640      00
 4641              	.LASF61:
 4642 02ca 6C6F774C 		.ascii	"lowLimit\000"
 4642      696D6974 
 4642      00
 4643              	.LASF62:
 4644 02d3 4144435F 		.ascii	"ADC_SetHighLimit\000"
 4644      53657448 
 4644      6967684C 
 4644      696D6974 
 4644      00
 4645              	.LASF86:
 4646 02e4 61646472 		.ascii	"address\000"
 4646      65737300 
 4647              	.LASF106:
 4648 02ec 4144435F 		.ascii	"ADC_IsChannelSigned\000"
 4648      49734368 
 4648      616E6E65 
 4648      6C536967 
 4648      6E656400 
 4649              	.LASF27:
 4650 0300 73616D70 		.ascii	"sampleTime23\000"
 4650      6C655469 
 4650      6D653233 
 4650      00
 4651              	.LASF32:
 4652 030d 73617449 		.ascii	"satIntMask\000"
 4652      6E744D61 
 4652      736B00
 4653              	.LASF54:
 4654 0318 4144435F 		.ascii	"ADC_IsEndConversion\000"
 4654      4973456E 
 4654      64436F6E 
 4654      76657273 
 4654      696F6E00 
 4655              	.LASF45:
 4656 032c 4144435F 		.ascii	"ADC_InitConfig\000"
 4656      496E6974 
 4656      436F6E66 
 4656      696700
 4657              	.LASF17:
 4658 033b 696E7436 		.ascii	"int64\000"
 4658      3400
 4659              	.LASF101:
 4660 0341 4379496E 		.ascii	"CyIntSetPriority\000"
 4660      74536574 
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 113


 4660      5072696F 
 4660      72697479 
 4660      00
 4661              	.LASF50:
 4662 0352 4144435F 		.ascii	"ADC_SetChanMask\000"
 4662      53657443 
 4662      68616E4D 
 4662      61736B00 
 4663              	.LASF68:
 4664 0362 4144435F 		.ascii	"ADC_SetGain\000"
 4664      53657447 
 4664      61696E00 
 4665              	.LASF15:
 4666 036e 666C6F61 		.ascii	"float\000"
 4666      7400
 4667              	.LASF63:
 4668 0374 68696768 		.ascii	"highLimit\000"
 4668      4C696D69 
 4668      7400
 4669              	.LASF76:
 4670 037e 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 4670      436F756E 
 4670      7473546F 
 4670      5F6D566F 
 4670      6C747300 
 4671              	.LASF30:
 4672 0392 6368616E 		.ascii	"chanEn\000"
 4672      456E00
 4673              	.LASF60:
 4674 0399 4144435F 		.ascii	"ADC_SetLowLimit\000"
 4674      5365744C 
 4674      6F774C69 
 4674      6D697400 
 4675              	.LASF100:
 4676 03a9 43794861 		.ascii	"CyHalt\000"
 4676      6C7400
 4677              	.LASF104:
 4678 03b0 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 4678      6E657261 
 4678      7465645F 
 4678      536F7572 
 4678      63655C50 
 4679              	.LASF1:
 4680 03cf 756E7369 		.ascii	"unsigned char\000"
 4680      676E6564 
 4680      20636861 
 4680      7200
 4681              	.LASF95:
 4682 03dd 4144435F 		.ascii	"ADC_offset\000"
 4682      6F666673 
 4682      657400
 4683              	.LASF91:
 4684 03e8 4144435F 		.ascii	"ADC_channelEnMasks\000"
 4684      6368616E 
 4684      6E656C45 
 4684      6E4D6173 
 4684      6B7300
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 114


 4685              	.LASF2:
 4686 03fb 73686F72 		.ascii	"short int\000"
 4686      7420696E 
 4686      7400
 4687              	.LASF99:
 4688 0405 4144435F 		.ascii	"ADC_intSarClock_SetFractionalDividerRegister\000"
 4688      696E7453 
 4688      6172436C 
 4688      6F636B5F 
 4688      53657446 
 4689              	.LASF43:
 4690 0432 4144435F 		.ascii	"ADC_Stop\000"
 4690      53746F70 
 4690      00
 4691              	.LASF72:
 4692 043b 72657375 		.ascii	"result_Volts\000"
 4692      6C745F56 
 4692      6F6C7473 
 4692      00
 4693              	.LASF58:
 4694 0448 61646352 		.ascii	"adcResult16\000"
 4694      6573756C 
 4694      74313600 
 4695              	.LASF41:
 4696 0454 63684E75 		.ascii	"chNum\000"
 4696      6D00
 4697              	.LASF33:
 4698 045a 76726566 		.ascii	"vrefMvValue\000"
 4698      4D765661 
 4698      6C756500 
 4699              	.LASF39:
 4700 0466 6368616E 		.ascii	"chan\000"
 4700      00
 4701              	.LASF18:
 4702 046b 63686172 		.ascii	"char\000"
 4702      00
 4703              	.LASF47:
 4704 0470 6D6F6465 		.ascii	"mode\000"
 4704      00
 4705              	.LASF20:
 4706 0475 63796973 		.ascii	"cyisraddress\000"
 4706      72616464 
 4706      72657373 
 4706      00
 4707              	.LASF97:
 4708 0482 4144435F 		.ascii	"ADC_allConfigs\000"
 4708      616C6C43 
 4708      6F6E6669 
 4708      677300
 4709              	.LASF40:
 4710 0491 636F6E66 		.ascii	"config\000"
 4710      696700
 4711              	.LASF92:
 4712 0498 4144435F 		.ascii	"ADC_channelsConfig\000"
 4712      6368616E 
 4712      6E656C73 
 4712      436F6E66 
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 115


 4712      696700
 4713              	.LASF94:
 4714 04ab 4144435F 		.ascii	"ADC_selected\000"
 4714      73656C65 
 4714      63746564 
 4714      00
 4715              	.LASF85:
 4716 04b8 4144435F 		.ascii	"ADC_StartEx\000"
 4716      53746172 
 4716      74457800 
 4717              	.LASF79:
 4718 04c4 72657375 		.ascii	"result_uVolts\000"
 4718      6C745F75 
 4718      566F6C74 
 4718      7300
 4719              	.LASF88:
 4720 04d2 72657374 		.ascii	"restart\000"
 4720      61727400 
 4721              	.LASF67:
 4722 04da 6F666673 		.ascii	"offset\000"
 4722      657400
 4723              	.LASF24:
 4724 04e1 6374726C 		.ascii	"ctrl\000"
 4724      00
 4725              	.LASF34:
 4726 04e6 6D697363 		.ascii	"miscConfig\000"
 4726      436F6E66 
 4726      696700
 4727              	.LASF71:
 4728 04f1 61646343 		.ascii	"adcCounts\000"
 4728      6F756E74 
 4728      7300
 4729              	.LASF84:
 4730 04fb 4144435F 		.ascii	"ADC_Start\000"
 4730      53746172 
 4730      7400
 4731              	.LASF29:
 4732 0505 72616E67 		.ascii	"rangeCond\000"
 4732      65436F6E 
 4732      6400
 4733              	.LASF83:
 4734 050f 4144435F 		.ascii	"ADC_Enable\000"
 4734      456E6162 
 4734      6C6500
 4735              	.LASF25:
 4736 051a 73616D70 		.ascii	"sampleCtrl\000"
 4736      6C654374 
 4736      726C00
 4737              	.LASF12:
 4738 0525 696E7431 		.ascii	"int16\000"
 4738      3600
 4739              	.LASF77:
 4740 052b 72657375 		.ascii	"result_mVolts\000"
 4740      6C745F6D 
 4740      566F6C74 
 4740      7300
 4741              	.LASF66:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYx0drN.s 			page 116


 4742 0539 4144435F 		.ascii	"ADC_SetOffset\000"
 4742      5365744F 
 4742      66667365 
 4742      7400
 4743              	.LASF108:
 4744 0547 4144435F 		.ascii	"ADC_IRQ_StartEx\000"
 4744      4952515F 
 4744      53746172 
 4744      74457800 
 4745              	.LASF22:
 4746 0557 6368616E 		.ascii	"channelBase\000"
 4746      6E656C42 
 4746      61736500 
 4747              	.LASF53:
 4748 0563 656E644F 		.ascii	"endOfConversion\000"
 4748      66436F6E 
 4748      76657273 
 4748      696F6E00 
 4749              	.LASF103:
 4750 0573 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4750      4320342E 
 4750      392E3320 
 4750      32303135 
 4750      30333033 
 4751 05a6 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 4751      20726576 
 4751      6973696F 
 4751      6E203232 
 4751      31323230 
 4752 05d9 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4752      67202D66 
 4752      66756E63 
 4752      74696F6E 
 4752      2D736563 
 4753              	.LASF55:
 4754 0605 4144435F 		.ascii	"ADC_GetResult16\000"
 4754      47657452 
 4754      6573756C 
 4754      74313600 
 4755              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
