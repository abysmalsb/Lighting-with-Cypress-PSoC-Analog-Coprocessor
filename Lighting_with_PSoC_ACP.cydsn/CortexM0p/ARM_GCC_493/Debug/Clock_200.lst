ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Clock_200.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Clock_200_StartEx,"ax",%progbits
  18              		.align	2
  19              		.global	Clock_200_StartEx
  20              		.code	16
  21              		.thumb_func
  22              		.type	Clock_200_StartEx, %function
  23              	Clock_200_StartEx:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\Clock_200.c"
   1:.\Generated_Source\PSoC4/Clock_200.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Clock_200.c **** * File Name: Clock_200.c
   3:.\Generated_Source\PSoC4/Clock_200.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/Clock_200.c **** *
   5:.\Generated_Source\PSoC4/Clock_200.c **** *  Description:
   6:.\Generated_Source\PSoC4/Clock_200.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:.\Generated_Source\PSoC4/Clock_200.c **** *
   8:.\Generated_Source\PSoC4/Clock_200.c **** *  Note:
   9:.\Generated_Source\PSoC4/Clock_200.c **** *   Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC4/Clock_200.c **** *   System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC4/Clock_200.c **** *
  12:.\Generated_Source\PSoC4/Clock_200.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/Clock_200.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/Clock_200.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/Clock_200.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/Clock_200.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/Clock_200.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/Clock_200.c **** 
  19:.\Generated_Source\PSoC4/Clock_200.c **** #include <cydevice_trm.h>
  20:.\Generated_Source\PSoC4/Clock_200.c **** #include "Clock_200.h"
  21:.\Generated_Source\PSoC4/Clock_200.c **** 
  22:.\Generated_Source\PSoC4/Clock_200.c **** #if defined CYREG_PERI_DIV_CMD
  23:.\Generated_Source\PSoC4/Clock_200.c **** 
  24:.\Generated_Source\PSoC4/Clock_200.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/Clock_200.c **** * Function Name: Clock_200_StartEx
  26:.\Generated_Source\PSoC4/Clock_200.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/Clock_200.c **** *
  28:.\Generated_Source\PSoC4/Clock_200.c **** * Summary:
  29:.\Generated_Source\PSoC4/Clock_200.c **** *  Starts the clock, aligned to the specified running clock.
  30:.\Generated_Source\PSoC4/Clock_200.c **** *
  31:.\Generated_Source\PSoC4/Clock_200.c **** * Parameters:
  32:.\Generated_Source\PSoC4/Clock_200.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 2


  33:.\Generated_Source\PSoC4/Clock_200.c **** *    clock is started.
  34:.\Generated_Source\PSoC4/Clock_200.c **** *
  35:.\Generated_Source\PSoC4/Clock_200.c **** * Returns:
  36:.\Generated_Source\PSoC4/Clock_200.c **** *  None
  37:.\Generated_Source\PSoC4/Clock_200.c **** *
  38:.\Generated_Source\PSoC4/Clock_200.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/Clock_200.c **** void Clock_200_StartEx(uint32 alignClkDiv)
  40:.\Generated_Source\PSoC4/Clock_200.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  28              	.LVL0:
  29              	.L2:
  41:.\Generated_Source\PSoC4/Clock_200.c ****     /* Make sure any previous start command has finished. */
  42:.\Generated_Source\PSoC4/Clock_200.c ****     while((Clock_200_CMD_REG & Clock_200_CMD_ENABLE_MASK) != 0u)
  30              		.loc 1 42 0 discriminator 1
  31 0000 8023     		mov	r3, #128
  32 0002 DB05     		lsl	r3, r3, #23
  33 0004 1B68     		ldr	r3, [r3]
  34 0006 002B     		cmp	r3, #0
  35 0008 FADB     		blt	.L2
  43:.\Generated_Source\PSoC4/Clock_200.c ****     {
  44:.\Generated_Source\PSoC4/Clock_200.c ****     }
  45:.\Generated_Source\PSoC4/Clock_200.c ****     
  46:.\Generated_Source\PSoC4/Clock_200.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:.\Generated_Source\PSoC4/Clock_200.c ****     Clock_200_CMD_REG =
  48:.\Generated_Source\PSoC4/Clock_200.c ****         ((uint32)Clock_200__DIV_ID << Clock_200_CMD_DIV_SHIFT)|
  49:.\Generated_Source\PSoC4/Clock_200.c ****         (alignClkDiv << Clock_200_CMD_PA_DIV_SHIFT) |
  36              		.loc 1 49 0
  37 000a 0002     		lsl	r0, r0, #8
  38              	.LVL1:
  39 000c 024B     		ldr	r3, .L3
  40 000e 1843     		orr	r0, r3
  47:.\Generated_Source\PSoC4/Clock_200.c ****         ((uint32)Clock_200__DIV_ID << Clock_200_CMD_DIV_SHIFT)|
  41              		.loc 1 47 0
  42 0010 8023     		mov	r3, #128
  43 0012 DB05     		lsl	r3, r3, #23
  44 0014 1860     		str	r0, [r3]
  50:.\Generated_Source\PSoC4/Clock_200.c ****         (uint32)Clock_200_CMD_ENABLE_MASK;
  51:.\Generated_Source\PSoC4/Clock_200.c **** }
  45              		.loc 1 51 0
  46              		@ sp needed
  47 0016 7047     		bx	lr
  48              	.L4:
  49              		.align	2
  50              	.L3:
  51 0018 C0000080 		.word	-2147483456
  52              		.cfi_endproc
  53              	.LFE0:
  54              		.size	Clock_200_StartEx, .-Clock_200_StartEx
  55              		.section	.text.Clock_200_Stop,"ax",%progbits
  56              		.align	2
  57              		.global	Clock_200_Stop
  58              		.code	16
  59              		.thumb_func
  60              		.type	Clock_200_Stop, %function
  61              	Clock_200_Stop:
  62              	.LFB1:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 3


  52:.\Generated_Source\PSoC4/Clock_200.c **** 
  53:.\Generated_Source\PSoC4/Clock_200.c **** #else
  54:.\Generated_Source\PSoC4/Clock_200.c **** 
  55:.\Generated_Source\PSoC4/Clock_200.c **** /*******************************************************************************
  56:.\Generated_Source\PSoC4/Clock_200.c **** * Function Name: Clock_200_Start
  57:.\Generated_Source\PSoC4/Clock_200.c **** ********************************************************************************
  58:.\Generated_Source\PSoC4/Clock_200.c **** *
  59:.\Generated_Source\PSoC4/Clock_200.c **** * Summary:
  60:.\Generated_Source\PSoC4/Clock_200.c **** *  Starts the clock.
  61:.\Generated_Source\PSoC4/Clock_200.c **** *
  62:.\Generated_Source\PSoC4/Clock_200.c **** * Parameters:
  63:.\Generated_Source\PSoC4/Clock_200.c **** *  None
  64:.\Generated_Source\PSoC4/Clock_200.c **** *
  65:.\Generated_Source\PSoC4/Clock_200.c **** * Returns:
  66:.\Generated_Source\PSoC4/Clock_200.c **** *  None
  67:.\Generated_Source\PSoC4/Clock_200.c **** *
  68:.\Generated_Source\PSoC4/Clock_200.c **** *******************************************************************************/
  69:.\Generated_Source\PSoC4/Clock_200.c **** 
  70:.\Generated_Source\PSoC4/Clock_200.c **** void Clock_200_Start(void)
  71:.\Generated_Source\PSoC4/Clock_200.c **** {
  72:.\Generated_Source\PSoC4/Clock_200.c ****     /* Set the bit to enable the clock. */
  73:.\Generated_Source\PSoC4/Clock_200.c ****     Clock_200_ENABLE_REG |= Clock_200__ENABLE_MASK;
  74:.\Generated_Source\PSoC4/Clock_200.c **** }
  75:.\Generated_Source\PSoC4/Clock_200.c **** 
  76:.\Generated_Source\PSoC4/Clock_200.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:.\Generated_Source\PSoC4/Clock_200.c **** 
  78:.\Generated_Source\PSoC4/Clock_200.c **** 
  79:.\Generated_Source\PSoC4/Clock_200.c **** /*******************************************************************************
  80:.\Generated_Source\PSoC4/Clock_200.c **** * Function Name: Clock_200_Stop
  81:.\Generated_Source\PSoC4/Clock_200.c **** ********************************************************************************
  82:.\Generated_Source\PSoC4/Clock_200.c **** *
  83:.\Generated_Source\PSoC4/Clock_200.c **** * Summary:
  84:.\Generated_Source\PSoC4/Clock_200.c **** *  Stops the clock and returns immediately. This API does not require the
  85:.\Generated_Source\PSoC4/Clock_200.c **** *  source clock to be running but may return before the hardware is actually
  86:.\Generated_Source\PSoC4/Clock_200.c **** *  disabled.
  87:.\Generated_Source\PSoC4/Clock_200.c **** *
  88:.\Generated_Source\PSoC4/Clock_200.c **** * Parameters:
  89:.\Generated_Source\PSoC4/Clock_200.c **** *  None
  90:.\Generated_Source\PSoC4/Clock_200.c **** *
  91:.\Generated_Source\PSoC4/Clock_200.c **** * Returns:
  92:.\Generated_Source\PSoC4/Clock_200.c **** *  None
  93:.\Generated_Source\PSoC4/Clock_200.c **** *
  94:.\Generated_Source\PSoC4/Clock_200.c **** *******************************************************************************/
  95:.\Generated_Source\PSoC4/Clock_200.c **** void Clock_200_Stop(void)
  96:.\Generated_Source\PSoC4/Clock_200.c **** {
  63              		.loc 1 96 0
  64              		.cfi_startproc
  65              	.L6:
  97:.\Generated_Source\PSoC4/Clock_200.c **** #if defined CYREG_PERI_DIV_CMD
  98:.\Generated_Source\PSoC4/Clock_200.c **** 
  99:.\Generated_Source\PSoC4/Clock_200.c ****     /* Make sure any previous start command has finished. */
 100:.\Generated_Source\PSoC4/Clock_200.c ****     while((Clock_200_CMD_REG & Clock_200_CMD_ENABLE_MASK) != 0u)
  66              		.loc 1 100 0 discriminator 1
  67 0000 8023     		mov	r3, #128
  68 0002 DB05     		lsl	r3, r3, #23
  69 0004 1B68     		ldr	r3, [r3]
  70 0006 002B     		cmp	r3, #0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 4


  71 0008 FADB     		blt	.L6
 101:.\Generated_Source\PSoC4/Clock_200.c ****     {
 102:.\Generated_Source\PSoC4/Clock_200.c ****     }
 103:.\Generated_Source\PSoC4/Clock_200.c ****     
 104:.\Generated_Source\PSoC4/Clock_200.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:.\Generated_Source\PSoC4/Clock_200.c ****     Clock_200_CMD_REG =
  72              		.loc 1 105 0
  73 000a 024A     		ldr	r2, .L7
  74 000c 8023     		mov	r3, #128
  75 000e DB05     		lsl	r3, r3, #23
  76 0010 1A60     		str	r2, [r3]
 106:.\Generated_Source\PSoC4/Clock_200.c ****         ((uint32)Clock_200__DIV_ID << Clock_200_CMD_DIV_SHIFT)|
 107:.\Generated_Source\PSoC4/Clock_200.c ****         ((uint32)Clock_200_CMD_DISABLE_MASK);
 108:.\Generated_Source\PSoC4/Clock_200.c **** 
 109:.\Generated_Source\PSoC4/Clock_200.c **** #else
 110:.\Generated_Source\PSoC4/Clock_200.c **** 
 111:.\Generated_Source\PSoC4/Clock_200.c ****     /* Clear the bit to disable the clock. */
 112:.\Generated_Source\PSoC4/Clock_200.c ****     Clock_200_ENABLE_REG &= (uint32)(~Clock_200__ENABLE_MASK);
 113:.\Generated_Source\PSoC4/Clock_200.c ****     
 114:.\Generated_Source\PSoC4/Clock_200.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:.\Generated_Source\PSoC4/Clock_200.c **** }
  77              		.loc 1 115 0
  78              		@ sp needed
  79 0012 7047     		bx	lr
  80              	.L8:
  81              		.align	2
  82              	.L7:
  83 0014 C0000040 		.word	1073742016
  84              		.cfi_endproc
  85              	.LFE1:
  86              		.size	Clock_200_Stop, .-Clock_200_Stop
  87              		.section	.text.Clock_200_SetFractionalDividerRegister,"ax",%progbits
  88              		.align	2
  89              		.global	Clock_200_SetFractionalDividerRegister
  90              		.code	16
  91              		.thumb_func
  92              		.type	Clock_200_SetFractionalDividerRegister, %function
  93              	Clock_200_SetFractionalDividerRegister:
  94              	.LFB2:
 116:.\Generated_Source\PSoC4/Clock_200.c **** 
 117:.\Generated_Source\PSoC4/Clock_200.c **** 
 118:.\Generated_Source\PSoC4/Clock_200.c **** /*******************************************************************************
 119:.\Generated_Source\PSoC4/Clock_200.c **** * Function Name: Clock_200_SetFractionalDividerRegister
 120:.\Generated_Source\PSoC4/Clock_200.c **** ********************************************************************************
 121:.\Generated_Source\PSoC4/Clock_200.c **** *
 122:.\Generated_Source\PSoC4/Clock_200.c **** * Summary:
 123:.\Generated_Source\PSoC4/Clock_200.c **** *  Modifies the clock divider and the fractional divider.
 124:.\Generated_Source\PSoC4/Clock_200.c **** *
 125:.\Generated_Source\PSoC4/Clock_200.c **** * Parameters:
 126:.\Generated_Source\PSoC4/Clock_200.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:.\Generated_Source\PSoC4/Clock_200.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:.\Generated_Source\PSoC4/Clock_200.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:.\Generated_Source\PSoC4/Clock_200.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:.\Generated_Source\PSoC4/Clock_200.c **** * Returns:
 131:.\Generated_Source\PSoC4/Clock_200.c **** *  None
 132:.\Generated_Source\PSoC4/Clock_200.c **** *
 133:.\Generated_Source\PSoC4/Clock_200.c **** *******************************************************************************/
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 5


 134:.\Generated_Source\PSoC4/Clock_200.c **** void Clock_200_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:.\Generated_Source\PSoC4/Clock_200.c **** {
  95              		.loc 1 135 0
  96              		.cfi_startproc
  97              	.LVL2:
  98 0000 10B5     		push	{r4, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 4, -8
 101              		.cfi_offset 14, -4
 136:.\Generated_Source\PSoC4/Clock_200.c ****     uint32 maskVal;
 137:.\Generated_Source\PSoC4/Clock_200.c ****     uint32 regVal;
 138:.\Generated_Source\PSoC4/Clock_200.c ****     
 139:.\Generated_Source\PSoC4/Clock_200.c **** #if defined (Clock_200__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:.\Generated_Source\PSoC4/Clock_200.c ****     
 141:.\Generated_Source\PSoC4/Clock_200.c **** 	/* get all but divider bits */
 142:.\Generated_Source\PSoC4/Clock_200.c ****     maskVal = Clock_200_DIV_REG & 
 102              		.loc 1 142 0
 103 0002 064A     		ldr	r2, .L10
 104 0004 1368     		ldr	r3, [r2]
 105 0006 0724     		mov	r4, #7
 106 0008 2340     		and	r3, r4
 107              	.LVL3:
 143:.\Generated_Source\PSoC4/Clock_200.c ****                     (uint32)(~(uint32)(Clock_200_DIV_INT_MASK | Clock_200_DIV_FRAC_MASK)); 
 144:.\Generated_Source\PSoC4/Clock_200.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:.\Generated_Source\PSoC4/Clock_200.c ****     regVal = maskVal |
 146:.\Generated_Source\PSoC4/Clock_200.c ****         ((uint32)((uint32)clkDivider <<  Clock_200_DIV_INT_SHIFT) & Clock_200_DIV_INT_MASK) |
 108              		.loc 1 146 0
 109 000a 0002     		lsl	r0, r0, #8
 110              	.LVL4:
 145:.\Generated_Source\PSoC4/Clock_200.c ****         ((uint32)((uint32)clkDivider <<  Clock_200_DIV_INT_SHIFT) & Clock_200_DIV_INT_MASK) |
 111              		.loc 1 145 0
 112 000c 1843     		orr	r0, r3
 147:.\Generated_Source\PSoC4/Clock_200.c ****         ((uint32)((uint32)clkFractional << Clock_200_DIV_FRAC_SHIFT) & Clock_200_DIV_FRAC_MASK);
 113              		.loc 1 147 0
 114 000e CB00     		lsl	r3, r1, #3
 115              	.LVL5:
 116 0010 FF21     		mov	r1, #255
 117              	.LVL6:
 118 0012 1940     		and	r1, r3
 145:.\Generated_Source\PSoC4/Clock_200.c ****         ((uint32)((uint32)clkDivider <<  Clock_200_DIV_INT_SHIFT) & Clock_200_DIV_INT_MASK) |
 119              		.loc 1 145 0
 120 0014 0143     		orr	r1, r0
 121              	.LVL7:
 148:.\Generated_Source\PSoC4/Clock_200.c ****     
 149:.\Generated_Source\PSoC4/Clock_200.c **** #else
 150:.\Generated_Source\PSoC4/Clock_200.c ****     /* get all but integer divider bits */
 151:.\Generated_Source\PSoC4/Clock_200.c ****     maskVal = Clock_200_DIV_REG & (uint32)(~(uint32)Clock_200__DIVIDER_MASK);
 152:.\Generated_Source\PSoC4/Clock_200.c ****     /* combine mask and new divider val into 32-bit value */
 153:.\Generated_Source\PSoC4/Clock_200.c ****     regVal = clkDivider | maskVal;
 154:.\Generated_Source\PSoC4/Clock_200.c ****     
 155:.\Generated_Source\PSoC4/Clock_200.c **** #endif /* Clock_200__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:.\Generated_Source\PSoC4/Clock_200.c **** 
 157:.\Generated_Source\PSoC4/Clock_200.c ****     Clock_200_DIV_REG = regVal;
 122              		.loc 1 157 0
 123 0016 1160     		str	r1, [r2]
 158:.\Generated_Source\PSoC4/Clock_200.c **** }
 124              		.loc 1 158 0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 6


 125              		@ sp needed
 126 0018 10BD     		pop	{r4, pc}
 127              	.L11:
 128 001a C046     		.align	2
 129              	.L10:
 130 001c 00050040 		.word	1073743104
 131              		.cfi_endproc
 132              	.LFE2:
 133              		.size	Clock_200_SetFractionalDividerRegister, .-Clock_200_SetFractionalDividerRegister
 134              		.section	.text.Clock_200_GetDividerRegister,"ax",%progbits
 135              		.align	2
 136              		.global	Clock_200_GetDividerRegister
 137              		.code	16
 138              		.thumb_func
 139              		.type	Clock_200_GetDividerRegister, %function
 140              	Clock_200_GetDividerRegister:
 141              	.LFB3:
 159:.\Generated_Source\PSoC4/Clock_200.c **** 
 160:.\Generated_Source\PSoC4/Clock_200.c **** 
 161:.\Generated_Source\PSoC4/Clock_200.c **** /*******************************************************************************
 162:.\Generated_Source\PSoC4/Clock_200.c **** * Function Name: Clock_200_GetDividerRegister
 163:.\Generated_Source\PSoC4/Clock_200.c **** ********************************************************************************
 164:.\Generated_Source\PSoC4/Clock_200.c **** *
 165:.\Generated_Source\PSoC4/Clock_200.c **** * Summary:
 166:.\Generated_Source\PSoC4/Clock_200.c **** *  Gets the clock divider register value.
 167:.\Generated_Source\PSoC4/Clock_200.c **** *
 168:.\Generated_Source\PSoC4/Clock_200.c **** * Parameters:
 169:.\Generated_Source\PSoC4/Clock_200.c **** *  None
 170:.\Generated_Source\PSoC4/Clock_200.c **** *
 171:.\Generated_Source\PSoC4/Clock_200.c **** * Returns:
 172:.\Generated_Source\PSoC4/Clock_200.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:.\Generated_Source\PSoC4/Clock_200.c **** *  divide by 2, the return value will be 1.
 174:.\Generated_Source\PSoC4/Clock_200.c **** *
 175:.\Generated_Source\PSoC4/Clock_200.c **** *******************************************************************************/
 176:.\Generated_Source\PSoC4/Clock_200.c **** uint16 Clock_200_GetDividerRegister(void)
 177:.\Generated_Source\PSoC4/Clock_200.c **** {
 142              		.loc 1 177 0
 143              		.cfi_startproc
 178:.\Generated_Source\PSoC4/Clock_200.c ****     return (uint16)((Clock_200_DIV_REG & Clock_200_DIV_INT_MASK)
 144              		.loc 1 178 0
 145 0000 024B     		ldr	r3, .L13
 146 0002 1868     		ldr	r0, [r3]
 179:.\Generated_Source\PSoC4/Clock_200.c ****         >> Clock_200_DIV_INT_SHIFT);
 147              		.loc 1 179 0
 148 0004 000A     		lsr	r0, r0, #8
 178:.\Generated_Source\PSoC4/Clock_200.c ****     return (uint16)((Clock_200_DIV_REG & Clock_200_DIV_INT_MASK)
 149              		.loc 1 178 0
 150 0006 80B2     		uxth	r0, r0
 180:.\Generated_Source\PSoC4/Clock_200.c **** }
 151              		.loc 1 180 0
 152              		@ sp needed
 153 0008 7047     		bx	lr
 154              	.L14:
 155 000a C046     		.align	2
 156              	.L13:
 157 000c 00050040 		.word	1073743104
 158              		.cfi_endproc
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 7


 159              	.LFE3:
 160              		.size	Clock_200_GetDividerRegister, .-Clock_200_GetDividerRegister
 161              		.section	.text.Clock_200_GetFractionalDividerRegister,"ax",%progbits
 162              		.align	2
 163              		.global	Clock_200_GetFractionalDividerRegister
 164              		.code	16
 165              		.thumb_func
 166              		.type	Clock_200_GetFractionalDividerRegister, %function
 167              	Clock_200_GetFractionalDividerRegister:
 168              	.LFB4:
 181:.\Generated_Source\PSoC4/Clock_200.c **** 
 182:.\Generated_Source\PSoC4/Clock_200.c **** 
 183:.\Generated_Source\PSoC4/Clock_200.c **** /*******************************************************************************
 184:.\Generated_Source\PSoC4/Clock_200.c **** * Function Name: Clock_200_GetFractionalDividerRegister
 185:.\Generated_Source\PSoC4/Clock_200.c **** ********************************************************************************
 186:.\Generated_Source\PSoC4/Clock_200.c **** *
 187:.\Generated_Source\PSoC4/Clock_200.c **** * Summary:
 188:.\Generated_Source\PSoC4/Clock_200.c **** *  Gets the clock fractional divider register value.
 189:.\Generated_Source\PSoC4/Clock_200.c **** *
 190:.\Generated_Source\PSoC4/Clock_200.c **** * Parameters:
 191:.\Generated_Source\PSoC4/Clock_200.c **** *  None
 192:.\Generated_Source\PSoC4/Clock_200.c **** *
 193:.\Generated_Source\PSoC4/Clock_200.c **** * Returns:
 194:.\Generated_Source\PSoC4/Clock_200.c **** *  Fractional Divide value of the clock
 195:.\Generated_Source\PSoC4/Clock_200.c **** *  0 if the fractional divider is not in use.
 196:.\Generated_Source\PSoC4/Clock_200.c **** *
 197:.\Generated_Source\PSoC4/Clock_200.c **** *******************************************************************************/
 198:.\Generated_Source\PSoC4/Clock_200.c **** uint8 Clock_200_GetFractionalDividerRegister(void)
 199:.\Generated_Source\PSoC4/Clock_200.c **** {
 169              		.loc 1 199 0
 170              		.cfi_startproc
 200:.\Generated_Source\PSoC4/Clock_200.c **** #if defined (Clock_200__FRAC_MASK)
 201:.\Generated_Source\PSoC4/Clock_200.c ****     /* return fractional divider bits */
 202:.\Generated_Source\PSoC4/Clock_200.c ****     return (uint8)((Clock_200_DIV_REG & Clock_200_DIV_FRAC_MASK)
 171              		.loc 1 202 0
 172 0000 024B     		ldr	r3, .L16
 173 0002 1868     		ldr	r0, [r3]
 174 0004 0006     		lsl	r0, r0, #24
 175 0006 C00E     		lsr	r0, r0, #27
 203:.\Generated_Source\PSoC4/Clock_200.c ****         >> Clock_200_DIV_FRAC_SHIFT);
 204:.\Generated_Source\PSoC4/Clock_200.c **** #else
 205:.\Generated_Source\PSoC4/Clock_200.c ****     return 0u;
 206:.\Generated_Source\PSoC4/Clock_200.c **** #endif /* Clock_200__FRAC_MASK */
 207:.\Generated_Source\PSoC4/Clock_200.c **** }
 176              		.loc 1 207 0
 177              		@ sp needed
 178 0008 7047     		bx	lr
 179              	.L17:
 180 000a C046     		.align	2
 181              	.L16:
 182 000c 00050040 		.word	1073743104
 183              		.cfi_endproc
 184              	.LFE4:
 185              		.size	Clock_200_GetFractionalDividerRegister, .-Clock_200_GetFractionalDividerRegister
 186              		.text
 187              	.Letext0:
 188              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 8


 189              		.section	.debug_info,"",%progbits
 190              	.Ldebug_info0:
 191 0000 62010000 		.4byte	0x162
 192 0004 0400     		.2byte	0x4
 193 0006 00000000 		.4byte	.Ldebug_abbrev0
 194 000a 04       		.byte	0x4
 195 000b 01       		.uleb128 0x1
 196 000c 6C010000 		.4byte	.LASF25
 197 0010 01       		.byte	0x1
 198 0011 98000000 		.4byte	.LASF26
 199 0015 FE010000 		.4byte	.LASF27
 200 0019 00000000 		.4byte	.Ldebug_ranges0+0
 201 001d 00000000 		.4byte	0
 202 0021 00000000 		.4byte	.Ldebug_line0
 203 0025 02       		.uleb128 0x2
 204 0026 01       		.byte	0x1
 205 0027 06       		.byte	0x6
 206 0028 3B020000 		.4byte	.LASF0
 207 002c 02       		.uleb128 0x2
 208 002d 01       		.byte	0x1
 209 002e 08       		.byte	0x8
 210 002f 65000000 		.4byte	.LASF1
 211 0033 02       		.uleb128 0x2
 212 0034 02       		.byte	0x2
 213 0035 05       		.byte	0x5
 214 0036 5C010000 		.4byte	.LASF2
 215 003a 02       		.uleb128 0x2
 216 003b 02       		.byte	0x2
 217 003c 07       		.byte	0x7
 218 003d 85000000 		.4byte	.LASF3
 219 0041 02       		.uleb128 0x2
 220 0042 04       		.byte	0x4
 221 0043 05       		.byte	0x5
 222 0044 20000000 		.4byte	.LASF4
 223 0048 02       		.uleb128 0x2
 224 0049 04       		.byte	0x4
 225 004a 07       		.byte	0x7
 226 004b 73000000 		.4byte	.LASF5
 227 004f 02       		.uleb128 0x2
 228 0050 08       		.byte	0x8
 229 0051 05       		.byte	0x5
 230 0052 49010000 		.4byte	.LASF6
 231 0056 02       		.uleb128 0x2
 232 0057 08       		.byte	0x8
 233 0058 07       		.byte	0x7
 234 0059 32010000 		.4byte	.LASF7
 235 005d 03       		.uleb128 0x3
 236 005e 04       		.byte	0x4
 237 005f 05       		.byte	0x5
 238 0060 696E7400 		.ascii	"int\000"
 239 0064 02       		.uleb128 0x2
 240 0065 04       		.byte	0x4
 241 0066 07       		.byte	0x7
 242 0067 FE000000 		.4byte	.LASF8
 243 006b 04       		.uleb128 0x4
 244 006c 66010000 		.4byte	.LASF9
 245 0070 02       		.byte	0x2
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 9


 246 0071 9801     		.2byte	0x198
 247 0073 2C000000 		.4byte	0x2c
 248 0077 04       		.uleb128 0x4
 249 0078 F0000000 		.4byte	.LASF10
 250 007c 02       		.byte	0x2
 251 007d 9901     		.2byte	0x199
 252 007f 3A000000 		.4byte	0x3a
 253 0083 04       		.uleb128 0x4
 254 0084 F7000000 		.4byte	.LASF11
 255 0088 02       		.byte	0x2
 256 0089 9A01     		.2byte	0x19a
 257 008b 48000000 		.4byte	0x48
 258 008f 02       		.uleb128 0x2
 259 0090 04       		.byte	0x4
 260 0091 04       		.byte	0x4
 261 0092 38000000 		.4byte	.LASF12
 262 0096 02       		.uleb128 0x2
 263 0097 08       		.byte	0x8
 264 0098 04       		.byte	0x4
 265 0099 C8000000 		.4byte	.LASF13
 266 009d 02       		.uleb128 0x2
 267 009e 01       		.byte	0x1
 268 009f 08       		.byte	0x8
 269 00a0 57010000 		.4byte	.LASF14
 270 00a4 04       		.uleb128 0x4
 271 00a5 00000000 		.4byte	.LASF15
 272 00a9 02       		.byte	0x2
 273 00aa 4402     		.2byte	0x244
 274 00ac B0000000 		.4byte	0xb0
 275 00b0 05       		.uleb128 0x5
 276 00b1 83000000 		.4byte	0x83
 277 00b5 06       		.uleb128 0x6
 278 00b6 06000000 		.4byte	.LASF16
 279 00ba 01       		.byte	0x1
 280 00bb 27       		.byte	0x27
 281 00bc 00000000 		.4byte	.LFB0
 282 00c0 1C000000 		.4byte	.LFE0-.LFB0
 283 00c4 01       		.uleb128 0x1
 284 00c5 9C       		.byte	0x9c
 285 00c6 DA000000 		.4byte	0xda
 286 00ca 07       		.uleb128 0x7
 287 00cb D6000000 		.4byte	.LASF18
 288 00cf 01       		.byte	0x1
 289 00d0 27       		.byte	0x27
 290 00d1 83000000 		.4byte	0x83
 291 00d5 00000000 		.4byte	.LLST0
 292 00d9 00       		.byte	0
 293 00da 08       		.uleb128 0x8
 294 00db 29000000 		.4byte	.LASF28
 295 00df 01       		.byte	0x1
 296 00e0 5F       		.byte	0x5f
 297 00e1 00000000 		.4byte	.LFB1
 298 00e5 18000000 		.4byte	.LFE1-.LFB1
 299 00e9 01       		.uleb128 0x1
 300 00ea 9C       		.byte	0x9c
 301 00eb 06       		.uleb128 0x6
 302 00ec 3E000000 		.4byte	.LASF17
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 10


 303 00f0 01       		.byte	0x1
 304 00f1 86       		.byte	0x86
 305 00f2 00000000 		.4byte	.LFB2
 306 00f6 20000000 		.4byte	.LFE2-.LFB2
 307 00fa 01       		.uleb128 0x1
 308 00fb 9C       		.byte	0x9c
 309 00fc 3B010000 		.4byte	0x13b
 310 0100 07       		.uleb128 0x7
 311 0101 BD000000 		.4byte	.LASF19
 312 0105 01       		.byte	0x1
 313 0106 86       		.byte	0x86
 314 0107 77000000 		.4byte	0x77
 315 010b 21000000 		.4byte	.LLST1
 316 010f 07       		.uleb128 0x7
 317 0110 E2000000 		.4byte	.LASF20
 318 0114 01       		.byte	0x1
 319 0115 86       		.byte	0x86
 320 0116 6B000000 		.4byte	0x6b
 321 011a 42000000 		.4byte	.LLST2
 322 011e 09       		.uleb128 0x9
 323 011f 18000000 		.4byte	.LASF21
 324 0123 01       		.byte	0x1
 325 0124 88       		.byte	0x88
 326 0125 83000000 		.4byte	0x83
 327 0129 63000000 		.4byte	.LLST3
 328 012d 0A       		.uleb128 0xa
 329 012e CF000000 		.4byte	.LASF22
 330 0132 01       		.byte	0x1
 331 0133 89       		.byte	0x89
 332 0134 83000000 		.4byte	0x83
 333 0138 01       		.uleb128 0x1
 334 0139 51       		.byte	0x51
 335 013a 00       		.byte	0
 336 013b 0B       		.uleb128 0xb
 337 013c 47020000 		.4byte	.LASF23
 338 0140 01       		.byte	0x1
 339 0141 B0       		.byte	0xb0
 340 0142 77000000 		.4byte	0x77
 341 0146 00000000 		.4byte	.LFB3
 342 014a 10000000 		.4byte	.LFE3-.LFB3
 343 014e 01       		.uleb128 0x1
 344 014f 9C       		.byte	0x9c
 345 0150 0B       		.uleb128 0xb
 346 0151 0B010000 		.4byte	.LASF24
 347 0155 01       		.byte	0x1
 348 0156 C6       		.byte	0xc6
 349 0157 6B000000 		.4byte	0x6b
 350 015b 00000000 		.4byte	.LFB4
 351 015f 10000000 		.4byte	.LFE4-.LFB4
 352 0163 01       		.uleb128 0x1
 353 0164 9C       		.byte	0x9c
 354 0165 00       		.byte	0
 355              		.section	.debug_abbrev,"",%progbits
 356              	.Ldebug_abbrev0:
 357 0000 01       		.uleb128 0x1
 358 0001 11       		.uleb128 0x11
 359 0002 01       		.byte	0x1
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 11


 360 0003 25       		.uleb128 0x25
 361 0004 0E       		.uleb128 0xe
 362 0005 13       		.uleb128 0x13
 363 0006 0B       		.uleb128 0xb
 364 0007 03       		.uleb128 0x3
 365 0008 0E       		.uleb128 0xe
 366 0009 1B       		.uleb128 0x1b
 367 000a 0E       		.uleb128 0xe
 368 000b 55       		.uleb128 0x55
 369 000c 17       		.uleb128 0x17
 370 000d 11       		.uleb128 0x11
 371 000e 01       		.uleb128 0x1
 372 000f 10       		.uleb128 0x10
 373 0010 17       		.uleb128 0x17
 374 0011 00       		.byte	0
 375 0012 00       		.byte	0
 376 0013 02       		.uleb128 0x2
 377 0014 24       		.uleb128 0x24
 378 0015 00       		.byte	0
 379 0016 0B       		.uleb128 0xb
 380 0017 0B       		.uleb128 0xb
 381 0018 3E       		.uleb128 0x3e
 382 0019 0B       		.uleb128 0xb
 383 001a 03       		.uleb128 0x3
 384 001b 0E       		.uleb128 0xe
 385 001c 00       		.byte	0
 386 001d 00       		.byte	0
 387 001e 03       		.uleb128 0x3
 388 001f 24       		.uleb128 0x24
 389 0020 00       		.byte	0
 390 0021 0B       		.uleb128 0xb
 391 0022 0B       		.uleb128 0xb
 392 0023 3E       		.uleb128 0x3e
 393 0024 0B       		.uleb128 0xb
 394 0025 03       		.uleb128 0x3
 395 0026 08       		.uleb128 0x8
 396 0027 00       		.byte	0
 397 0028 00       		.byte	0
 398 0029 04       		.uleb128 0x4
 399 002a 16       		.uleb128 0x16
 400 002b 00       		.byte	0
 401 002c 03       		.uleb128 0x3
 402 002d 0E       		.uleb128 0xe
 403 002e 3A       		.uleb128 0x3a
 404 002f 0B       		.uleb128 0xb
 405 0030 3B       		.uleb128 0x3b
 406 0031 05       		.uleb128 0x5
 407 0032 49       		.uleb128 0x49
 408 0033 13       		.uleb128 0x13
 409 0034 00       		.byte	0
 410 0035 00       		.byte	0
 411 0036 05       		.uleb128 0x5
 412 0037 35       		.uleb128 0x35
 413 0038 00       		.byte	0
 414 0039 49       		.uleb128 0x49
 415 003a 13       		.uleb128 0x13
 416 003b 00       		.byte	0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 12


 417 003c 00       		.byte	0
 418 003d 06       		.uleb128 0x6
 419 003e 2E       		.uleb128 0x2e
 420 003f 01       		.byte	0x1
 421 0040 3F       		.uleb128 0x3f
 422 0041 19       		.uleb128 0x19
 423 0042 03       		.uleb128 0x3
 424 0043 0E       		.uleb128 0xe
 425 0044 3A       		.uleb128 0x3a
 426 0045 0B       		.uleb128 0xb
 427 0046 3B       		.uleb128 0x3b
 428 0047 0B       		.uleb128 0xb
 429 0048 27       		.uleb128 0x27
 430 0049 19       		.uleb128 0x19
 431 004a 11       		.uleb128 0x11
 432 004b 01       		.uleb128 0x1
 433 004c 12       		.uleb128 0x12
 434 004d 06       		.uleb128 0x6
 435 004e 40       		.uleb128 0x40
 436 004f 18       		.uleb128 0x18
 437 0050 9742     		.uleb128 0x2117
 438 0052 19       		.uleb128 0x19
 439 0053 01       		.uleb128 0x1
 440 0054 13       		.uleb128 0x13
 441 0055 00       		.byte	0
 442 0056 00       		.byte	0
 443 0057 07       		.uleb128 0x7
 444 0058 05       		.uleb128 0x5
 445 0059 00       		.byte	0
 446 005a 03       		.uleb128 0x3
 447 005b 0E       		.uleb128 0xe
 448 005c 3A       		.uleb128 0x3a
 449 005d 0B       		.uleb128 0xb
 450 005e 3B       		.uleb128 0x3b
 451 005f 0B       		.uleb128 0xb
 452 0060 49       		.uleb128 0x49
 453 0061 13       		.uleb128 0x13
 454 0062 02       		.uleb128 0x2
 455 0063 17       		.uleb128 0x17
 456 0064 00       		.byte	0
 457 0065 00       		.byte	0
 458 0066 08       		.uleb128 0x8
 459 0067 2E       		.uleb128 0x2e
 460 0068 00       		.byte	0
 461 0069 3F       		.uleb128 0x3f
 462 006a 19       		.uleb128 0x19
 463 006b 03       		.uleb128 0x3
 464 006c 0E       		.uleb128 0xe
 465 006d 3A       		.uleb128 0x3a
 466 006e 0B       		.uleb128 0xb
 467 006f 3B       		.uleb128 0x3b
 468 0070 0B       		.uleb128 0xb
 469 0071 27       		.uleb128 0x27
 470 0072 19       		.uleb128 0x19
 471 0073 11       		.uleb128 0x11
 472 0074 01       		.uleb128 0x1
 473 0075 12       		.uleb128 0x12
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 13


 474 0076 06       		.uleb128 0x6
 475 0077 40       		.uleb128 0x40
 476 0078 18       		.uleb128 0x18
 477 0079 9742     		.uleb128 0x2117
 478 007b 19       		.uleb128 0x19
 479 007c 00       		.byte	0
 480 007d 00       		.byte	0
 481 007e 09       		.uleb128 0x9
 482 007f 34       		.uleb128 0x34
 483 0080 00       		.byte	0
 484 0081 03       		.uleb128 0x3
 485 0082 0E       		.uleb128 0xe
 486 0083 3A       		.uleb128 0x3a
 487 0084 0B       		.uleb128 0xb
 488 0085 3B       		.uleb128 0x3b
 489 0086 0B       		.uleb128 0xb
 490 0087 49       		.uleb128 0x49
 491 0088 13       		.uleb128 0x13
 492 0089 02       		.uleb128 0x2
 493 008a 17       		.uleb128 0x17
 494 008b 00       		.byte	0
 495 008c 00       		.byte	0
 496 008d 0A       		.uleb128 0xa
 497 008e 34       		.uleb128 0x34
 498 008f 00       		.byte	0
 499 0090 03       		.uleb128 0x3
 500 0091 0E       		.uleb128 0xe
 501 0092 3A       		.uleb128 0x3a
 502 0093 0B       		.uleb128 0xb
 503 0094 3B       		.uleb128 0x3b
 504 0095 0B       		.uleb128 0xb
 505 0096 49       		.uleb128 0x49
 506 0097 13       		.uleb128 0x13
 507 0098 02       		.uleb128 0x2
 508 0099 18       		.uleb128 0x18
 509 009a 00       		.byte	0
 510 009b 00       		.byte	0
 511 009c 0B       		.uleb128 0xb
 512 009d 2E       		.uleb128 0x2e
 513 009e 00       		.byte	0
 514 009f 3F       		.uleb128 0x3f
 515 00a0 19       		.uleb128 0x19
 516 00a1 03       		.uleb128 0x3
 517 00a2 0E       		.uleb128 0xe
 518 00a3 3A       		.uleb128 0x3a
 519 00a4 0B       		.uleb128 0xb
 520 00a5 3B       		.uleb128 0x3b
 521 00a6 0B       		.uleb128 0xb
 522 00a7 27       		.uleb128 0x27
 523 00a8 19       		.uleb128 0x19
 524 00a9 49       		.uleb128 0x49
 525 00aa 13       		.uleb128 0x13
 526 00ab 11       		.uleb128 0x11
 527 00ac 01       		.uleb128 0x1
 528 00ad 12       		.uleb128 0x12
 529 00ae 06       		.uleb128 0x6
 530 00af 40       		.uleb128 0x40
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 14


 531 00b0 18       		.uleb128 0x18
 532 00b1 9742     		.uleb128 0x2117
 533 00b3 19       		.uleb128 0x19
 534 00b4 00       		.byte	0
 535 00b5 00       		.byte	0
 536 00b6 00       		.byte	0
 537              		.section	.debug_loc,"",%progbits
 538              	.Ldebug_loc0:
 539              	.LLST0:
 540 0000 00000000 		.4byte	.LVL0
 541 0004 0C000000 		.4byte	.LVL1
 542 0008 0100     		.2byte	0x1
 543 000a 50       		.byte	0x50
 544 000b 0C000000 		.4byte	.LVL1
 545 000f 1C000000 		.4byte	.LFE0
 546 0013 0400     		.2byte	0x4
 547 0015 F3       		.byte	0xf3
 548 0016 01       		.uleb128 0x1
 549 0017 50       		.byte	0x50
 550 0018 9F       		.byte	0x9f
 551 0019 00000000 		.4byte	0
 552 001d 00000000 		.4byte	0
 553              	.LLST1:
 554 0021 00000000 		.4byte	.LVL2
 555 0025 0C000000 		.4byte	.LVL4
 556 0029 0100     		.2byte	0x1
 557 002b 50       		.byte	0x50
 558 002c 0C000000 		.4byte	.LVL4
 559 0030 20000000 		.4byte	.LFE2
 560 0034 0400     		.2byte	0x4
 561 0036 F3       		.byte	0xf3
 562 0037 01       		.uleb128 0x1
 563 0038 50       		.byte	0x50
 564 0039 9F       		.byte	0x9f
 565 003a 00000000 		.4byte	0
 566 003e 00000000 		.4byte	0
 567              	.LLST2:
 568 0042 00000000 		.4byte	.LVL2
 569 0046 12000000 		.4byte	.LVL6
 570 004a 0100     		.2byte	0x1
 571 004c 51       		.byte	0x51
 572 004d 12000000 		.4byte	.LVL6
 573 0051 20000000 		.4byte	.LFE2
 574 0055 0400     		.2byte	0x4
 575 0057 F3       		.byte	0xf3
 576 0058 01       		.uleb128 0x1
 577 0059 51       		.byte	0x51
 578 005a 9F       		.byte	0x9f
 579 005b 00000000 		.4byte	0
 580 005f 00000000 		.4byte	0
 581              	.LLST3:
 582 0063 0A000000 		.4byte	.LVL3
 583 0067 10000000 		.4byte	.LVL5
 584 006b 0100     		.2byte	0x1
 585 006d 53       		.byte	0x53
 586 006e 00000000 		.4byte	0
 587 0072 00000000 		.4byte	0
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 15


 588              		.section	.debug_aranges,"",%progbits
 589 0000 3C000000 		.4byte	0x3c
 590 0004 0200     		.2byte	0x2
 591 0006 00000000 		.4byte	.Ldebug_info0
 592 000a 04       		.byte	0x4
 593 000b 00       		.byte	0
 594 000c 0000     		.2byte	0
 595 000e 0000     		.2byte	0
 596 0010 00000000 		.4byte	.LFB0
 597 0014 1C000000 		.4byte	.LFE0-.LFB0
 598 0018 00000000 		.4byte	.LFB1
 599 001c 18000000 		.4byte	.LFE1-.LFB1
 600 0020 00000000 		.4byte	.LFB2
 601 0024 20000000 		.4byte	.LFE2-.LFB2
 602 0028 00000000 		.4byte	.LFB3
 603 002c 10000000 		.4byte	.LFE3-.LFB3
 604 0030 00000000 		.4byte	.LFB4
 605 0034 10000000 		.4byte	.LFE4-.LFB4
 606 0038 00000000 		.4byte	0
 607 003c 00000000 		.4byte	0
 608              		.section	.debug_ranges,"",%progbits
 609              	.Ldebug_ranges0:
 610 0000 00000000 		.4byte	.LFB0
 611 0004 1C000000 		.4byte	.LFE0
 612 0008 00000000 		.4byte	.LFB1
 613 000c 18000000 		.4byte	.LFE1
 614 0010 00000000 		.4byte	.LFB2
 615 0014 20000000 		.4byte	.LFE2
 616 0018 00000000 		.4byte	.LFB3
 617 001c 10000000 		.4byte	.LFE3
 618 0020 00000000 		.4byte	.LFB4
 619 0024 10000000 		.4byte	.LFE4
 620 0028 00000000 		.4byte	0
 621 002c 00000000 		.4byte	0
 622              		.section	.debug_line,"",%progbits
 623              	.Ldebug_line0:
 624 0000 D4000000 		.section	.debug_str,"MS",%progbits,1
 624      02005F00 
 624      00000201 
 624      FB0E0D00 
 624      01010101 
 625              	.LASF15:
 626 0000 72656733 		.ascii	"reg32\000"
 626      3200
 627              	.LASF16:
 628 0006 436C6F63 		.ascii	"Clock_200_StartEx\000"
 628      6B5F3230 
 628      305F5374 
 628      61727445 
 628      7800
 629              	.LASF21:
 630 0018 6D61736B 		.ascii	"maskVal\000"
 630      56616C00 
 631              	.LASF4:
 632 0020 6C6F6E67 		.ascii	"long int\000"
 632      20696E74 
 632      00
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 16


 633              	.LASF28:
 634 0029 436C6F63 		.ascii	"Clock_200_Stop\000"
 634      6B5F3230 
 634      305F5374 
 634      6F7000
 635              	.LASF12:
 636 0038 666C6F61 		.ascii	"float\000"
 636      7400
 637              	.LASF17:
 638 003e 436C6F63 		.ascii	"Clock_200_SetFractionalDividerRegister\000"
 638      6B5F3230 
 638      305F5365 
 638      74467261 
 638      6374696F 
 639              	.LASF1:
 640 0065 756E7369 		.ascii	"unsigned char\000"
 640      676E6564 
 640      20636861 
 640      7200
 641              	.LASF5:
 642 0073 6C6F6E67 		.ascii	"long unsigned int\000"
 642      20756E73 
 642      69676E65 
 642      6420696E 
 642      7400
 643              	.LASF3:
 644 0085 73686F72 		.ascii	"short unsigned int\000"
 644      7420756E 
 644      7369676E 
 644      65642069 
 644      6E7400
 645              	.LASF26:
 646 0098 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Clock_200.c\000"
 646      6E657261 
 646      7465645F 
 646      536F7572 
 646      63655C50 
 647              	.LASF19:
 648 00bd 636C6B44 		.ascii	"clkDivider\000"
 648      69766964 
 648      657200
 649              	.LASF13:
 650 00c8 646F7562 		.ascii	"double\000"
 650      6C6500
 651              	.LASF22:
 652 00cf 72656756 		.ascii	"regVal\000"
 652      616C00
 653              	.LASF18:
 654 00d6 616C6967 		.ascii	"alignClkDiv\000"
 654      6E436C6B 
 654      44697600 
 655              	.LASF20:
 656 00e2 636C6B46 		.ascii	"clkFractional\000"
 656      72616374 
 656      696F6E61 
 656      6C00
 657              	.LASF10:
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 17


 658 00f0 75696E74 		.ascii	"uint16\000"
 658      313600
 659              	.LASF11:
 660 00f7 75696E74 		.ascii	"uint32\000"
 660      333200
 661              	.LASF8:
 662 00fe 756E7369 		.ascii	"unsigned int\000"
 662      676E6564 
 662      20696E74 
 662      00
 663              	.LASF24:
 664 010b 436C6F63 		.ascii	"Clock_200_GetFractionalDividerRegister\000"
 664      6B5F3230 
 664      305F4765 
 664      74467261 
 664      6374696F 
 665              	.LASF7:
 666 0132 6C6F6E67 		.ascii	"long long unsigned int\000"
 666      206C6F6E 
 666      6720756E 
 666      7369676E 
 666      65642069 
 667              	.LASF6:
 668 0149 6C6F6E67 		.ascii	"long long int\000"
 668      206C6F6E 
 668      6720696E 
 668      7400
 669              	.LASF14:
 670 0157 63686172 		.ascii	"char\000"
 670      00
 671              	.LASF2:
 672 015c 73686F72 		.ascii	"short int\000"
 672      7420696E 
 672      7400
 673              	.LASF9:
 674 0166 75696E74 		.ascii	"uint8\000"
 674      3800
 675              	.LASF25:
 676 016c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 676      4320342E 
 676      392E3320 
 676      32303135 
 676      30333033 
 677 019f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 677      20726576 
 677      6973696F 
 677      6E203232 
 677      31323230 
 678 01d2 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 678      67202D66 
 678      66756E63 
 678      74696F6E 
 678      2D736563 
 679              	.LASF27:
 680 01fe 443A5C44 		.ascii	"D:\\Dolgaim\\MCU\\Cypress PSoC\\Git\\Lighting_with_"
 680      6F6C6761 
 680      696D5C4D 
ARM GAS  C:\Users\simon\AppData\Local\Temp\ccYtfRMr.s 			page 18


 680      43555C43 
 680      79707265 
 681 022c 50536F43 		.ascii	"PSoC_ACP.cydsn\000"
 681      5F414350 
 681      2E637964 
 681      736E00
 682              	.LASF0:
 683 023b 7369676E 		.ascii	"signed char\000"
 683      65642063 
 683      68617200 
 684              	.LASF23:
 685 0247 436C6F63 		.ascii	"Clock_200_GetDividerRegister\000"
 685      6B5F3230 
 685      305F4765 
 685      74446976 
 685      69646572 
 686              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
